name: Publish Release
on:
  release:
    types: [published]
jobs:
  publish_release:
    name: Package the all components
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: package watchmen-utilities and publish to pypi
        working-directory: ./packages/watchmen-utilities
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-model and publish to pypi
        working-directory: ./packages/watchmen-model
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-storage and publish to pypi
        working-directory: ./packages/watchmen-storage
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-auth and publish to pypi
        working-directory: ./packages/watchmen-auth
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-storage-mysql and publish to pypi
        working-directory: ./packages/watchmen-storage-mysql
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-storage-oracle and publish to pypi
        working-directory: ./packages/watchmen-storage-oracle
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-storage-mssql and publish to pypi
        working-directory: ./packages/watchmen-storage-mssql
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-storage-mongodb and publish to pypi
        working-directory: ./packages/watchmen-storage-mongodb
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-rest and publish to pypi
        working-directory: ./packages/watchmen-rest
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-meta and publish to pypi
        working-directory: ./packages/watchmen-meta
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-data-kernel and publish to pypi
        working-directory: ./packages/watchmen-data-kernel
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-inquiry-trino and publish to pypi
        working-directory: ./packages/watchmen-inquiry-trino
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-data-surface and publish to pypi
        working-directory: ./packages/watchmen-data-surface
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-pipeline-kernel and publish to pypi
        working-directory: ./packages/watchmen-pipeline-kernel
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-inquiry-kernel and publish to pypi
        working-directory: ./packages/watchmen-inquiry-kernel
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-pipeline-surface and publish to pypi
        working-directory: ./packages/watchmen-pipeline-surface
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-inquiry-surface and publish to pypi
        working-directory: ./packages/watchmen-inquiry-surface
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: package watchmen-dqc and publish to pypi
        working-directory: ./packages/watchmen-dqc
        run: |
          poetry build
          poetry publish -u '${{secrets.PIP_USERNAME}}' -p '${{secrets.PIP_PASSWORD}}'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Web client build and push
        uses: docker/build-push-action@v2
        with:
          context: ./packages/watchmen-web-client
          file: ./packages/watchmen-web-client/Dockerfile
          push: true
          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-web-client:${{ github.event.release.tag_name }}
      - name: Doll build and push
        uses: docker/build-push-action@v2
        with:
          context: ./packages/watchmen-rest-doll
          file: ./packages/watchmen-rest-doll/Dockerfile
          push: true
          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-matryoshka-doll:${{ github.event.release.tag_name }}
      - name: DQC build and push
        uses: docker/build-push-action@v2
        with:
          context: ./packages/watchmen-rest-dqc
          file: ./packages/watchmen-rest-dqc/Dockerfile
          push: true
          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-matryoshka-dqc:${{ github.event.release.tag_name }}