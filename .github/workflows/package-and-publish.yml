name: Package and Publish

on:
  push:
    tags:
      - 'pre-release-**'

jobs:
  build-and-publish:
    name: Package modules and publish
    runs-on: ubuntu-latest
    steps:
      - name: Echo inputs
        run: |
          echo "Branch: [$GITHUB_REF]"
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Setup poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Package [watchmen-utilities] and publish to Pypi
        working-directory: ./packages/watchmen-utilities
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-model] and publish to Pypi
        working-directory: ./packages/watchmen-model
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-storage] and publish to Pypi
        working-directory: ./packages/watchmen-storage
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-storage-mongodb] and publish to Pypi
        working-directory: ./packages/watchmen-storage-mongodb
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-storage-mssql] and publish to Pypi
        working-directory: ./packages/watchmen-storage-mssql
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-storage-mysql] and publish to Pypi
        working-directory: ./packages/watchmen-storage-mysql
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-storage-oracle] and publish to Pypi
        working-directory: ./packages/watchmen-storage-oracle
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-auth] and publish to Pypi
        working-directory: ./packages/watchmen-auth
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-rest] and publish to Pypi
        working-directory: ./packages/watchmen-rest
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-meta] and publish to Pypi
        working-directory: ./packages/watchmen-meta
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-data-kernel] and publish to Pypi
        working-directory: ./packages/watchmen-data-kernel
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-data-surface] and publish to Pypi
        working-directory: ./packages/watchmen-data-surface
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-pipeline-kernel] and publish to Pypi
        working-directory: ./packages/watchmen-pipeline-kernel
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-pipeline-surface] and publish to Pypi
        working-directory: ./packages/watchmen-pipeline-surface
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-inquiry-trino] and publish to Pypi
        working-directory: ./packages/watchmen-inquiry-trino
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-inquiry-kernel] and publish to Pypi
        working-directory: ./packages/watchmen-inquiry-kernel
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-inquiry-surface] and publish to Pypi
        working-directory: ./packages/watchmen-inquiry-surface
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-rest-doll] and publish to Pypi
        working-directory: ./packages/watchmen-rest-doll
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-dqc] and publish to Pypi
        working-directory: ./packages/watchmen-dqc
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-rest-dqc] and publish to Pypi
        working-directory: ./packages/watchmen-rest-dqc
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
      - name: Package [watchmen-cli] and publish to Pypi
        working-directory: ./packages/watchmen-cli
        run: |
          poetry build
#          poetry publish -u '${{ secrets.PIP_USERNAME }}' -p '${{ secrets.PIP_PASSWORD }}''
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.CR_PAT }}
#      - name: Web client build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: ./packages/watchmen-web-client
#          file: ./packages/watchmen-web-client/Dockerfile
#          push: true
#          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-web-client:${{ github.event.release.tag_name }}
#      - name: Doll build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: ./packages/watchmen-rest-doll
#          file: ./packages/watchmen-rest-doll/Dockerfile
#          push: true
#          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-matryoshka-doll:${{ github.event.release.tag_name }}
#      - name: DQC build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: ./packages/watchmen-rest-dqc
#          file: ./packages/watchmen-rest-dqc/Dockerfile
#          push: true
#          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-matryoshka-dqc:${{ github.event.release.tag_name }}
