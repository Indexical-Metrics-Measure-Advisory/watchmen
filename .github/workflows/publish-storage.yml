name: Publish different storage
on:
  workflow_dispatch:
    inputs:
      storage:
        description: 'Storage type'
        required: true
        default: 'oracle'
        type: choice
        options:
          - oracle
          - mysql
          - mssql
          - mongodb
      image_version:
        description: 'package version'
        required: true
        type: string
      dependence_version:
        description: 'dependence version'
        required: true
        type: string
jobs:
  publish_oracle:
    name: Package the image with different storage
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: python change_version.py ${{ github.event.inputs.dependence_version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Doll build and push
        uses: docker/build-push-action@v2
        with:
          context: ./packages/watchmen-rest-doll
          file: ./packages/watchmen-rest-doll/build_script/Dockerfile_${{ github.event.inputs.storage }}
          push: true
          tags: ghcr.io/indexical-metrics-measure-advisory/watchmen-doll-${{ github.event.inputs.storage }}:${{ github.event.inputs.image_version }}
      - name: Create release branch
        run: git checkout -b release/v${{ github.event.inputs.image_version }}
      - name: Initialize mandatory git config
        run: |
          git config user.name "skywalkerX69"
          git config user.email skywalkerX69@outlook.com
      - name: Commit config and manifest files
        id: make-commit
        run: |
          git add .
          git commit --message "Prepare release ${{ github.event.inputs.image_version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      - name: Push new branch
        run: git push origin release/v${{ github.event.inputs.image_version }}