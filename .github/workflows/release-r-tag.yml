name: Trigger release by r-tag

on:
  push:
    tags:
      - r-*

jobs:
  compute-version:
    name: Compute release version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output-version.outputs.version }}
    steps:
      - name: Echo inputs
        run: |
          echo "Ref: [${{ github.ref }}]"
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Compute version
        uses: ./.github/actions/compute-version
        id: compute-version
        with:
          tag: ${{ github.ref_name }}
      - name: Echo pre-release branch
        id: output-version
        run: |
          echo "Target version: [$RELEASE_VERSION]"
          echo "::set-output name=version::$RELEASE_VERSION"
  prepare:
    needs: compute-version
    name: Prepare jobs
    runs-on: ubuntu-latest
    outputs:
      pre_release_branch_name: ${{ steps.output-pre-release-branch.outputs.pre_release_branch_name }}
      release_branch_name: ${{ steps.output-release-branch.outputs.release_branch_name }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Compute pre-release branch
        uses: ./.github/actions/compute-pre-release-branch
        id: compute-pre-release-branch
        with:
          version: ${{ needs.compute-version.outputs.version }}
      - name: Echo pre-release branch
        id: output-pre-release-branch
        run: |
          echo "Target branch: [$PRE_RELEASE_BRANCH_NAME]"
          echo "::set-output name=pre_release_branch_name::$PRE_RELEASE_BRANCH_NAME"
      - name: Compute release branch
        uses: ./.github/actions/compute-release-branch
        id: compute-release-branch
        with:
          version: ${{ needs.compute-version.outputs.version }}
      - name: Echo release branch
        id: output-release-branch
        run: |
          echo "Target branch: [$RELEASE_BRANCH_NAME]"
          echo "::set-output name=release_branch_name::$RELEASE_BRANCH_NAME"
  # align all versions; change development dependencies to production dependencies.
  align-module-version:
    needs: [ compute-version, prepare ]
    uses: ./.github/workflows/version-align.yml
    with:
      ref: ${{ github.ref }}
      branch: ${{ needs.prepare.outputs.pre_release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
  # publish to pypi
  publish-pypi:
    needs: [ compute-version, prepare, align-module-version ]
    uses: ./.github/workflows/pypi-publish.yml
    secrets:
      PIP_USERNAME: ${{ secrets.PIP_USERNAME }}
      PIP_PASSWORD: ${{ secrets.PIP_PASSWORD }}
    with:
      branch: ${{ needs.prepare.outputs.pre_release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
  # create release branch, from pre-release branch. and add release tag.
  create-release-branch:
    needs: [ compute-version, prepare, publish-pypi ]
    uses: ./.github/workflows/create-release-branch.yml
    with:
      branch: ${{ needs.prepare.outputs.pre_release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      release: ${{ needs.prepare.outputs.release_branch_name }}
  # drop pre-release branch and tag
  drop-pre-release:
    needs: [ compute-version, prepare, create-release-branch ]
    uses: ./.github/workflows/drop-pre-release-branch.yml
    with:
      branch: ${{ needs.prepare.outputs.pre_release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
  # create release, use given version (also is the release tag on release branch)
  create-release:
    needs: [ compute-version, create-release-branch ]
    uses: ./.github/workflows/create-release.yml
    with:
      tag: ${{ needs.compute-version.outputs.version }}
  # publish web client image, both non-indicator and with-indicator
  publish-web-client-image:
    needs: [ compute-version, prepare, create-release-branch ]
    uses: ./.github/workflows/image-publish-web-client.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
  # publish doll image, on mysql
  publish-doll-mysql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-doll.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mysql
  # publish doll image, on oracle
  publish-doll-oracle-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-doll.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: oracle
  # publish doll image, on mongodb
  publish-doll-mongodb-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-doll.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mongodb
  # publish doll image, on mssql
  publish-doll-mssql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-doll.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mssql
  # publish doll image, on postgresql
  publish-doll-postgresql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-doll.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: postgresql
  # publish dqc image, on mysql
  publish-dqc-mysql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-dqc.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mysql
  # publish dqc image, on oracle
  publish-dqc-oracle-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-dqc.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: oracle
  # publish dqc image, on mongodb
  publish-dqc-mongodb-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-dqc.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mongodb
  # publish dqc image, on mssql
  publish-dqc-mssql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-dqc.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: mssql
  # publish dqc image, on postgresql
  publish-dqc-postgresql-image:
    needs: [ compute-version, prepare, publish-web-client-image ]
    uses: ./.github/workflows/image-publish-dqc.yml
    with:
      branch: ${{ needs.prepare.outputs.release_branch_name }}
      version: ${{ needs.compute-version.outputs.version }}
      storage: postgresql
  drop-trigger-tag:
    needs: align-module-version
    name: Drop trigger tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
      - name: Drop tag
        run: git push origin :${{ github.ref }}