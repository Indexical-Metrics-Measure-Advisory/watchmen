name: Test Build Mssql

#on:
#  schedule:
#    - cron: "0 0 * * *"

on: workflow_dispatch

env:
  DB_USER: admin
  DB_PASSWORD: yourStrong(!)Password
  DB_DATABASE: watchmen
  DB_ROOT_PASSWORD: admin

jobs:
  container-job:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{env.DB_PASSWORD}}
          options: --name=mssql --health-cmd="/opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U SA -P 'yourStrong(!)Password' -Q 'SELECT 1'" --health-interval=10s --health-timeout=10s --health-retries=5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Create database
        run: |
          sudo apt-get update && sudo apt-get install -y mssql-tools
          /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1,1433 -U SA -P 'yourStrong(!)Password' -Q 'CREATE DATABASE watchmen'
      - name: Run db meta script
        run: |
          script_path=./packages/watchmen-storage-mssql/meta-scripts
          for version in `ls ${script_path}`
            do
              if [ -d ${script_path}/$version ];then
                for file in ${script_path}/$version/*
                  do
                    echo `pwd`/$file
                    /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1,1433 -U SA -P 'yourStrong(!)Password' -d watchmen -i $file
                  done
              fi
            done
      - name: Run db data script
        run: |
          script_path=./packages/watchmen-storage-mssql/data-scripts
          for version in `ls ${script_path}`
            do
              if [ -d ${script_path}/$version ];then
                for file in ${script_path}/$version/*
                  do
                    echo `pwd`/$file
                    /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1,1433 -U SA -P 'yourStrong(!)Password' -d watchmen -i $file
                  done
              fi
            done
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Setup poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Make directory for server log
        working-directory: ./packages/watchmen-rest-doll
        run: mkdir -p temp
      - name: build [watchmen-rest-doll] and start
        working-directory: ./packages/watchmen-rest-doll
        env:
          LOGGER_LEVEL: INFO
          LOGGER_TO_FILE: TRUE
          BASE_PATH: ${{ github.workspace }}
          META_STORAGE_TYPE: mssql
          META_STORAGE_USER_NAME: SA
          META_STORAGE_PASSWORD: yourStrong(!)Password
          META_STORAGE_HOST: 127.0.0.1
          META_STORAGE_PORT: 1433
          META_STORAGE_NAME: watchmen
          TUPLE_DELETABLE: True
          SYNC_TOPIC_TO_STORAGE: TRUE
          REPLACE_TOPIC_TO_STORAGE: TRUE
          PIPELINE_ELASTIC_SEARCH_EXTERNAL_WRITER: TRUE
          META_STORAGE_ECHO: FALSE
          PIPELINE_PARALLEL_ACTIONS_IN_LOOP_UNIT: True
          USE_STORAGE_DIRECTLY: TRUE
        run: |
          poetry config virtualenvs.create false
          poetry update
          poetry install --no-dev -vv -E mssql -E trino
          uvicorn watchmen_rest_doll.main:app --host='0.0.0.0' --port='8000'
