name: Test-Build
on:
  workflow_dispatch:
    inputs:
      ref:
        description: Branch or tag name
        required: true
        type: string
        default: 'main'
jobs:
  test-api:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: watchmen
      DB_USER: root
      DB_PASSWORD: root
      LOG_FILE: /tmp/scripts/runtime.log
      BASE_PATH: ${{ github.workspace }}
      META_STORAGE_TYPE: mysql
      META_STORAGE_USER_NAME: root
      META_STORAGE_PASSWORD: root
      META_STORAGE_HOST: localhost
      META_STORAGE_PORT: 3306
      META_STORAGE_NAME: watchmen
      TUPLE_DELETABLE: True
      SYNC_TOPIC_TO_STORAGE: TRUE
      REPLACE_TOPIC_TO_STORAGE: TRUE
      PIPELINE_ELASTIC_SEARCH_EXTERNAL_WRITER: TRUE
      META_STORAGE_ECHO: FALSE
      PIPELINE_PARALLEL_ACTIONS_IN_LOOP_UNIT: True
      USE_STORAGE_DIRECTLY: TRUE
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
      - name: Run db meta script
        run: |
          script_path=./packages/watchmen-storage-mysql/meta-scripts/16.0.0
          for file in ${script_path}/*
            do
              mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -P3306 --default-character-set=utf8 ${{ env.DB_DATABASE }} < $file 2>&1
            done
      - name: Run db data script
        run: |
          script_path=./packages/watchmen-storage-mysql/data-scripts/16.0.0
          for file in ${script_path}/*
            do
              mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -P3306 --default-character-set=utf8 ${{ env.DB_DATABASE }} < $file 2>&1
            done
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Setup poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: build [watchmen-rest-doll] and start
        working-directory: ./packages/watchmen-rest-doll
        run: |
          poetry config virtualenvs.create false
          poetry install --no-dev -vv -E mysql -E trino
          uvicorn watchmen_rest_doll.main:app --host='0.0.0.0' --port='8000' > server.out 2>&1 &
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      - name: Make directory for result
        run: mkdir -p testResults
      - name: Run postman collection
        run: |
#          newman run ./packages/watchmen-test-postman/watchmen-postman.json -r htmlextra --reporter-htmlextra-export testResults/htmlreport.html --reporter-htmlextra-darkTheme > testResults/runreport1.html
          newman run ./packages/watchmen-test-postman/watchmen-postman.json
      - name: Output the run details
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: testResults
