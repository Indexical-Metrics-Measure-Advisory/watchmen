{
  "info": {
    "_postman_id": "216348af-600c-4110-80c4-df648ef8cf87",
    "name": "Watchmen 16",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "SUPER ADMIN",
      "item": [
        {
          "name": "AUTHENTICATE",
          "item": [
            {
              "name": "LOGIN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5988ee8d-8fee-4cc5-b31c-137ea37ea588",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('superadmin');",
                      "    pm.expect(data.tenantId).to.eql('-1');",
                      "    pm.environment.set('SUPER_ADMIN_JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c793d438-0f8c-4568-a6dc-e446d7705f1f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-super",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "change-me",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "LOGIN - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "873d6923-dd21-423c-94bd-9b1b5c9e2832",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "427c2e3e-55f4-4b6e-af18-6f6e0d7070f1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "VALIDATE ACCESS TOKEN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "422471e4-9cee-4628-b433-c47a4c3a068a",
                    "exec": [
                      "pm.test('Validate access token', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0def2ec7-1e1a-4050-954c-31c81b6f68c8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/token/validate/jwt?token={{JWT_TOKEN}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "token",
                    "validate",
                    "jwt"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{{JWT_TOKEN}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TEST ACCESS TOKEN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05f70035-4ff6-413d-9373-2fc649043208",
                    "exec": [
                      "pm.test('Test access token', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "32302dba-850b-4097-be13-5a0fef3f20ee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/token/exchange-user"
              },
              "response": []
            }
          ],
          "id": "1382ab45-3f9c-43c6-8911-a80066686b3e"
        },
        {
          "name": "TENANT",
          "item": [
            {
              "name": "TENANT - LOAD 1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fe4d53e0-2ea4-49ff-b499-c85835f62c4b",
                    "exec": [
                      "pm.test('Load Tenant', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a7ae9e14-0d6b-4dea-8170-1c14c7b0767a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant?tenant_id=1",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d1bb1a8-00ba-45bf-93a6-2dea10c09da1",
                    "exec": [
                      "pm.test('Create Tenant', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('IMMA-Test')",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('TENANT_ID', data.tenantId);",
                      "    pm.environment.set('TENANT_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('TENANT_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('TENANT_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1ad9a344-e27f-42dd-867a-846f37be3f6b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMMA-Test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/tenant"
              },
              "response": []
            },
            {
              "name": "TENANT FIND BY NAME AFTER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bbae9cd7-bf41-4387-8815-0e927b3abcd0",
                    "exec": [
                      "pm.test('Find Tenant By Name', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.eql(1);",
                      "    pm.expect(data.pageSize).to.eql(9)",
                      "    pm.expect(data.itemCount).to.eql(1);",
                      "    pm.expect(data.pageCount).to.eql(1);",
                      "    pm.expect(data.data.length).to.eql(1);",
                      "    const tenant = data.data[0];",
                      "    pm.expect(tenant.tenantId).to.not.be.null;",
                      "    pm.expect(tenant.name).to.eql('IMMA-Test')",
                      "    pm.expect(tenant.createdAt).to.not.be.null;",
                      "    pm.expect(tenant.createdBy).to.not.be.null;",
                      "    pm.expect(tenant.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(tenant.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(tenant.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6a774ba4-f572-4546-8e71-a02feacbe4fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 9\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant/name?query_name=test",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT UPDATE CREATED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "36cae3c3-b439-4ef0-8aa0-6e54440e5a8f",
                    "exec": [
                      "pm.test('Update Tenant', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('IMMA-Test-1')",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(2);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c72da620-f96b-4c54-88bf-0b17edda7708",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tenantId\": \"{{TENANT_ID}}\",\n    \"name\": \"IMMA-Test-1\",\n    \"createdAt\": \"{{TENANT_CREATED_AT}}\",\n    \"createdBy\": \"{{TENANT_CREATED_BY}}\",\n    \"version\": {{TENANT_VERSION}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/tenant"
              },
              "response": []
            },
            {
              "name": "TENANT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9bf10ae0-8daa-44b7-8bb7-70c9d7163631",
                    "exec": [
                      "pm.test('Delete Tenant', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "92f56950-5a06-4fc3-b7e9-4af7b63783a2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant?tenant_id={{TENANT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "{{TENANT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT FIND BY NAME AFTER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "20d074f6-593c-48cd-95ba-4080bb84da1a",
                    "exec": [
                      "pm.test('Find Tenant By Name', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.eql(1);",
                      "    pm.expect(data.pageSize).to.eql(9)",
                      "    pm.expect(data.itemCount).to.eql(0);",
                      "    pm.expect(data.pageCount).to.eql(0);",
                      "    pm.expect(data.data.length).to.eql(0);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9ded9b18-76f7-4327-9509-f25a4e79df4f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 9\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant/name?query_name=test",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "98bfa752-aba1-45df-80b5-5fbb641939de"
        },
        {
          "name": "DATASOURCE",
          "item": [
            {
              "name": "DATASOURCE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e7da9e0-c675-4339-a895-28fb9c8b0971",
                    "exec": [
                      "pm.test('Create DataSource', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('DATA_SOURCE_ID', data.dataSourceId);",
                      "    pm.environment.set('DATA_SOURCE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "849bcbbb-b5fd-47e8-b673-0740f5b6e675",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"dataSourceCode\": \"Test-DataSource\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"127.0.0.1\",\n    \"port\": \"3306\",\n    \"username\": \"watchmen\",\n    \"password\": \"watchmen\",\n    \"name\": \"watchmen\",\n    \"url\": \"mysql://watchmen:watchmen@127.0.0.1:3306/watchmen?charset=utf8\",\n    \"params\": [\n        {\"name\": \"x\", \"value\": \"1\"},\n        {\"name\": \"y\", \"value\": \"2\"}\n    ],\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/datasource"
              },
              "response": []
            },
            {
              "name": "DATASOURCE LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7aeb31ab-47f7-4bef-93a2-55657eb65a84",
                    "exec": [
                      "pm.test('Load DataSource', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "be67bf15-89c3-48bc-9f9f-82beef0d6f4c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/datasource?data_source_id={{DATA_SOURCE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "datasource"
                  ],
                  "query": [
                    {
                      "key": "data_source_id",
                      "value": "{{DATA_SOURCE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DATASOURCE_DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f122635-7f39-4142-9ac5-7ed31e7cd00f",
                    "exec": [
                      "pm.test('Delete DataSource', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "86fc9c0c-b12e-4c3e-86de-bd8cc5d79269",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/datasource?data_source_id={{DATA_SOURCE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "datasource"
                  ],
                  "query": [
                    {
                      "key": "data_source_id",
                      "value": "{{DATA_SOURCE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "9e542866-d6d4-49ae-a125-32810f193d45"
        },
        {
          "name": "EXTERNAL WRITER",
          "item": [
            {
              "name": "EXTERNAL WRITER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3e0e11bc-7291-480e-b888-628b775af24e",
                    "exec": [
                      "pm.test('Create ExternalWriter', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.writerId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('EXTERNAL_WRITER_ID', data.writerId);",
                      "    pm.environment.set('EXTERNAL_WRITER_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ef16e995-71c9-4d1e-8d76-b692c5d06745",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"writerCode\": \"Test-External-Writer\",\n    \"type\": \"standard-writer\",\n    \"pat\": \"a-pat\",\n    \"url\": \"mysql://watchmen:watchmen@127.0.0.1:3306/watchmen?charset=utf8\",\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/external_writer"
              },
              "response": []
            },
            {
              "name": "EXTERNAL WRITER LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "187d5a70-a313-4427-9b1e-f2eb0fcf1005",
                    "exec": [
                      "pm.test('Load ExternalWriter', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.writerId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1a75b5bb-f25a-4c41-93bc-e25c4e8b3f11",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/external_writer?writer_id={{EXTERNAL_WRITER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "external_writer"
                  ],
                  "query": [
                    {
                      "key": "writer_id",
                      "value": "{{EXTERNAL_WRITER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "EXTERNAL WRITER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ea78802-2b0b-4619-85f5-21a67f3ea18c",
                    "exec": [
                      "pm.test('Delete external writer', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7c195c5f-206c-4477-b3df-0158ad3df8cc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/external_writer?writer_id={{EXTERNAL_WRITER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "external_writer"
                  ],
                  "query": [
                    {
                      "key": "writer_id",
                      "value": "{{EXTERNAL_WRITER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "17c471ba-9990-4f45-9079-6db6dec5ec67"
        },
        {
          "name": "PAT",
          "item": [
            {
              "name": "PAT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c52df9dc-d729-4720-80cd-0d20ffa90ad6",
                    "exec": [
                      "pm.test('Create Pat', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('PAT_ID', data.patId);",
                      "    pm.environment.set('PAT_TOKEN', data.token);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1dbbd4d8-d3a2-4925-b9d8-9deb4b2a6d7c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"note\": \"test create pat\",\n    \"expired\": \"2022-05-01\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pat/create"
              },
              "response": []
            },
            {
              "name": "PAT LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4729a336-28d1-47fe-9fbe-50738e2ceac0",
                    "exec": [
                      "pm.test('List pat', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0e8e5df0-382b-4272-8fcf-b720bc3b03cb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/pat/list"
              },
              "response": []
            },
            {
              "name": "PAT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4a83b2b-d2a7-4ab2-840f-2d58f219c55d",
                    "exec": [
                      "pm.test('Delete Pat', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5e1d2706-98ae-4996-a7a1-8de9adbbb6c5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pat/delete?pat_id={{PAT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pat",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "pat_id",
                      "value": "{{PAT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "81a9ceae-4e7d-49a9-80a3-20b14e6fb947"
        },
        {
          "name": "CACHE",
          "item": [
            {
              "name": "CLEAR ALL CACHE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f03c733a-48cf-4b68-861b-fdd8a9950971",
                    "exec": [
                      "pm.test('Clear all cache', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7b72bcc3-c43c-450d-b310-859befe8f2fa",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/cache/clear/all"
              },
              "response": []
            }
          ],
          "id": "e6777f71-4736-4cc4-b57f-fbb98f51fa26"
        }
      ],
      "id": "13f7d30b-1bc5-4cd0-9a31-96cb02ed7c27"
    },
    {
      "name": "ADMIN",
      "item": [
        {
          "name": "AUTHENTICATE - ADMIN",
          "item": [
            {
              "name": "LOGIN - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "256d3699-0b27-45eb-85f9-f66db1927d0c",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "31b79fac-116a-442e-8a26-bd8bab25bb60",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            }
          ],
          "id": "5f61e34f-fab9-435f-982d-50c88922ee67"
        },
        {
          "name": "FAVORITE",
          "item": [
            {
              "name": "FAVORITE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cb142c60-0f1a-47a9-a046-6c178a9f426e",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"FAVORITE_USER_ID\", jsonData.userId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b5c6edb2-0164-4234-9067-b2fb210b6e9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"connectedSpaceIds\": [],\n    \"dashboardIds\": []\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/favorite"
              },
              "response": []
            },
            {
              "name": "FAVORITE LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "83aa0422-5dd0-48d9-b593-2bf4cf63ebfb",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "789c961b-6648-4296-9588-cca8b898a1e2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/favorite"
              },
              "response": []
            },
            {
              "name": "New Request",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ca33fa95-4d77-434e-bb28-7567d6990115",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "d199255e-dead-40c3-9dfb-d1b2797f8e73",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/favorite?user_id={{FAVORITE_USER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "favorite"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "{{FAVORITE_USER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "9f1d8885-fa09-4bf1-b623-91d2e9c3f951"
        },
        {
          "name": "LAST SNAPSHOT",
          "item": [
            {
              "name": "LAST - SNAPSHOT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d7cc54b6-a30e-4b6b-a564-5518c7d028e7",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"LASTSNAPSHOT_USER_ID\", jsonData.userId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "137d0cb9-b7f6-4690-bf2c-5d2946fb99ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"language\": \"english\",\n\t\"lastDashboardId\": null,\n\t\"adminDashboardId\": \"null\",\n\t\"favoritePin\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/last_snapshot"
              },
              "response": []
            },
            {
              "name": "LAST - SNAPSHOT LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "33ace948-b000-4a5c-8145-6097c4fa1534",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b1950446-b691-4d2f-85ef-02dd3e172d32",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/last_snapshot"
              },
              "response": []
            },
            {
              "name": "LAST - SNAPSHOT DELETE",
              "id": "2cef02fc-250f-4e54-b5b6-f290ddf59e5a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/last_snapshot?user_id={{LASTSNAPSHOT_USER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "last_snapshot"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "{{LASTSNAPSHOT_USER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "deeee44b-b4bd-4f34-993e-0e57975583e2"
        },
        {
          "name": "USER",
          "item": [
            {
              "name": "USER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0feae4d0-e5dc-48f2-bfff-4c39e6ffecd7",
                    "exec": [
                      "pm.test('Create User', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userId).to.not.be.null;",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('USER_ID', data.userId);",
                      "    pm.environment.set('USER_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('USER_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('USER_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "2ed1b18e-efd7-467f-9df3-f30af6c174db",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-User-{{$randomInt}}\",\n    \"nickName\": \"Test-User-Nickname\",\n    \"password\": \"abcd1234\",\n    \"isActive\": true,\n    \"groupIds\": [],\n    \"role\": \"console\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user"
              },
              "response": []
            },
            {
              "name": "USER LOAD 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "91b4e1ad-d34a-40f9-8226-ebe34e7b50d3",
                    "exec": [
                      "pm.test(\"Find Users Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.name).to.equal(\"imma-admin\");",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.not.be.null;",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "df2c60c7-092d-4e46-9b1f-5888237ef070",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user?user_id=2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e5d3a5e-f18f-47d5-8861-a9fe581519c6",
                    "exec": [
                      "pm.test(\"Find Users Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7625489a-d93d-448e-8f59-acf0bdce673c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/user/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER LIST ALL BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee282e91-f7c0-45d9-b903-766f5535fada",
                    "exec": [
                      "pm.test(\"List Users By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "72b68598-7a2a-4518-b1b3-91b948182f90",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user/list/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c5a4659-45ef-40a6-8dcb-2a9da634d951",
                    "exec": [
                      "pm.test(\"Find Users By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6b12bc4d-a2e6-4201-8130-8a7b0285e639",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n   \"2\",\n   \"3\"\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user/ids"
              },
              "response": []
            },
            {
              "name": "USER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "416ccc0c-ad5a-49ba-9b22-a677dfa3054d",
                    "exec": [
                      "pm.test(\"Delete User By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const user_id = pm.environment.get(\"USER_ID\");",
                      "    pm.expect(data.userId).to.equal(user_id);",
                      "    pm.environment.unset(\"USER_ID\");",
                      "    pm.environment.unset('USER_CREATED_AT');",
                      "    pm.environment.unset('USER_CREATED_BY');",
                      "    pm.environment.unset('USER_VERSION');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c153f0e9-68d3-4471-bc45-5b5bc86d4f62",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user?user_id={{USER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "{{USER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "2447d2f8-9676-485c-9344-0192d5fac66f"
        },
        {
          "name": "USER GROUP",
          "item": [
            {
              "name": "USER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ea3af886-794b-4751-b1e7-a44259d8a3e5",
                    "exec": [
                      "pm.test('Create User', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('USER_ID', data.userId);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1b92da30-5177-4ccd-b7c8-fa8c3b5d6ec6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-User\",\n    \"nickName\": \"Test-User-Nickname\",\n    \"password\": \"abcd1234\",\n    \"isActive\": true,\n    \"groupIds\": [],\n    \"role\": \"console\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user"
              },
              "response": []
            },
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d7ec0a50-39bb-49f2-86a0-7bc6abb7bfdf",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.spaceId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Space')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "    pm.environment.set('SPACE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('SPACE_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('SPACE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3f9b2123-e8b2-4a9d-a696-7453875a265d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "USER GROUP CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e928236a-c9a2-4b7c-b65c-614dfc94ff0e",
                    "exec": [
                      "pm.test('Create User Group', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userGroupId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Group')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('USER_GROUP_ID', data.userGroupId);",
                      "    pm.environment.set('USER_GROUP_NAME', data.name);",
                      "    pm.environment.set('USER_GROUP_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('USER_GROUP_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('USER_GROUP_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a5b1a6b5-0bf6-434a-aef6-4c96f65a45cc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Group\",\n    \"description\": \"A description\",\n    \"userIds\": [\"{{USER_ID}}\", \"2\"],\n    \"spaceIds\": [\"{{SPACE_ID}}\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group"
              },
              "response": []
            },
            {
              "name": "USER GROUP LOAD BY ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5ee25c5f-4b47-4a3b-b3e2-39373a3a87dc",
                    "exec": [
                      "pm.test('Load User Group By Id', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userGroupId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Group')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "988d6f91-536d-4312-9931-bdc64ee8b2fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group?user_group_id={{USER_GROUP_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group"
                  ],
                  "query": [
                    {
                      "key": "user_group_id",
                      "value": "{{USER_GROUP_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "25f91009-411c-4271-9cd8-5188afe26270",
                    "exec": [
                      "pm.test(\"Find User Group Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "71965ab2-c02f-48fc-ba09-3ca8e7de2b45",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 10,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group/name?query_name={{USER_GROUP_NAME}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "{{USER_GROUP_NAME}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP LIST BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4047cae9-017a-45e1-a2cb-08b5307b4af5",
                    "exec": [
                      "pm.test(\"List User Group By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "56d77d7d-747b-414b-807d-232a26db6632",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group/list/name?query_name=Test-Group",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "Test-Group",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "acf9892b-9b27-46d1-ad00-150cf6668db5",
                    "exec": [
                      "pm.test(\"Find User Group By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "369a4f11-6ac3-4c2c-8278-d74df9efda41",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{USER_GROUP_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group/ids"
              },
              "response": []
            },
            {
              "name": "USER GROUP UPDATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "103f9275-c4a5-43fd-b758-91feebfc93da",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f077217c-4177-4989-b053-59d119364166",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Group\",\n    \"description\": \"A description\",\n    \"userIds\": [\n        \"3\",\n        \"2\"\n    ],\n    \"userGroupId\": \"{{USER_GROUP_ID}}\",\n    \"spaceIds\": [\"{{SPACE_ID}}\"],\n    \"createdAt\": \"{{USER_GROUP_CREATED_AT}}\",\n    \"createdBy\": \"{{USER_GROUP_CREATED_BY}}\",\n    \"version\": {{USER_GROUP_VERSION}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group"
              },
              "response": []
            },
            {
              "name": "USER GROUP DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa486d0e-de57-4c26-ac0f-38ec54d9cc23",
                    "exec": [
                      "pm.test('Delete User Group', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const uer_group_id = pm.environment.get(\"USER_GROUP_ID\");",
                      "    pm.expect(data.userGroupId).to.equal(uer_group_id);",
                      "    pm.environment.unset('USER_GROUP_ID');",
                      "    pm.environment.unset('USER_GROUP_CREATED_AT');",
                      "    pm.environment.unset('USER_GROUP_CREATED_BY');",
                      "    pm.environment.unset('USER_GROUP_VERSION');",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4d59b8b2-e54a-481a-a308-8926a123e713",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group?user_group_id={{USER_GROUP_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group"
                  ],
                  "query": [
                    {
                      "key": "user_group_id",
                      "value": "{{USER_GROUP_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DELETE SPACE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3681b09e-7877-4121-8bbe-44db05877e31",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "    pm.environment.unset('SPACE_CREATED_AT');",
                      "    pm.environment.unset('SPACE_CREATED_BY');",
                      "    pm.environment.unset('SPACE_VERSION');",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "58139fb3-18d2-4cde-ab56-7ffe52ca6220",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "73c993e4-24bf-45cb-a547-9e425b597672",
                    "exec": [
                      "pm.test(\"Delete User By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const user_id = pm.environment.get(\"USER_ID\");",
                      "    pm.expect(data.userId).to.equal(user_id);",
                      "    pm.environment.unset(\"USER_ID\");",
                      "    pm.environment.unset('USER_CREATED_AT');",
                      "    pm.environment.unset('USER_CREATED_BY');",
                      "    pm.environment.unset('USER_VERSION');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7d42c97a-b87a-4134-a170-7d514f6a3790",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user?user_id={{USER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "{{USER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "695159a0-1c4b-4844-9998-31d00d55a92b"
        },
        {
          "name": "SPACE",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "489b4e2f-b6d5-462c-9be0-a2ace00ea297",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.spaceId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Space')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "    pm.environment.set('SPACE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('SPACE_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('SPACE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "43f3336a-fe2c-433b-9f12-9b9c518b57a6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "SPACE LOAD",
              "id": "34629a47-398a-483d-9008-050339be27fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9beaf561-6d88-48f4-8b71-1d1d54f94141",
                    "exec": [
                      "pm.test(\"Find Space Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.itemCount).to.not.be.null;",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "112401ee-8953-442b-a1d9-e9a7b865e5f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/space/name?query_name=Test-Space",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "Test-Space"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE FIND BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10fb8fa1-5152-4d37-a40e-3f95748d3d2d",
                    "exec": [
                      "pm.test(\"Find Space By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "870c0082-46c9-49cd-9257-4d612845c262",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space/list/name?query_name=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE AVAILABLE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4cbf8639-6418-477f-a14f-3cde65c0f5ae",
                    "exec": [
                      "pm.test(\"Available Spaces\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "544d7ce0-6904-4cb5-9e97-3fadb7c861cf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/space/available"
              },
              "response": []
            },
            {
              "name": "SPACE FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6b134668-9841-4643-8664-b1665ea5c3e6",
                    "exec": [
                      "pm.test(\"Find Spaces By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "522c5c47-ee68-4126-b6aa-000f4c1ffbc5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{SPACE_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space/ids"
              },
              "response": []
            },
            {
              "name": "SPACE EXPORT",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c070cf1-21f8-4aa9-924e-f3c036263e7b",
                    "exec": [
                      "pm.test(\"Export Spaces\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "816b4be5-7a8a-4953-9fe3-15461cca46e8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/space/export"
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b484b3fe-e113-4b04-86d6-6a31d83731b4",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "    pm.environment.unset('SPACE_CREATED_AT');",
                      "    pm.environment.unset('SPACE_CREATED_BY');",
                      "    pm.environment.unset('SPACE_VERSION');",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "42d32e24-07f9-44dc-9282-e7c8e9d873b0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "1ef7cc43-850d-4db9-a66c-4216a70d114e"
        },
        {
          "name": "ENUMERATION",
          "item": [
            {
              "name": "ENUM CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "218d06c1-afff-4e51-a6c5-2da0424d8e44",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"ENUM_ID\", jsonData.enumId);",
                      "    pm.environment.set(\"ENUM_NAME\", jsonData.name);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "8f6738dc-74fb-472f-87fd-a7777825e18a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"enumId\": null,\n    \"name\": \"enum_test\",\n    \"description\": \"test enum\",\n    \"parentEnumId\": null,\n    \"items\": [\n        {\n            \"itemId\": \"i1\",\n            \"code\": \"code1\",\n            \"label\": null,\n            \"parentCode\": null,\n            \"replaceCode\": null,\n            \"enumId\": null,\n            \"tenantId\": null\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/enum"
              },
              "response": []
            },
            {
              "name": "ENUM LOAD",
              "id": "3cec8e21-d0cc-49aa-8951-03b449a34537",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/enum?enum_id={{ENUM_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "enum"
                  ],
                  "query": [
                    {
                      "key": "enum_id",
                      "value": "{{ENUM_ID}}",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "ENUM FIND BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "804fffcb-bb02-4027-a98e-d5682af8d29c",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "69d43a79-7c1c-438a-98c6-8cb49f47188b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 10,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/enum/name?query_name={{ENUM_NAME}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "enum",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "{{ENUM_NAME}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "ENUM FIND ALL",
              "id": "0ace46cb-caae-4101-865d-e3fd0b96fbf8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/enum/all"
              },
              "response": []
            }
          ],
          "id": "03745d16-5763-4e02-8bfc-0c28721f3e80"
        },
        {
          "name": "TOPIC",
          "item": [
            {
              "name": "CREATE DATASOURCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5bfb7e1f-664e-444b-9976-06441c02ff12",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('DATA_SOURCE_ID', data.dataSourceId);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "49b40a26-4005-43f1-912b-74713428fde1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"dataSourceCode\": \"Test-DataSource\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"127.0.0.1\",\n    \"port\": \"3306\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"name\": \"watchmen\",\n    \"url\": \"mysql://admin:admin@127.0.0.1:3309/new_watchmen?charset=utf8\",\n    \"params\": [\n        {\"name\": \"x\", \"value\": \"1\"},\n        {\"name\": \"y\", \"value\": \"2\"}\n    ],\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/datasource"
              },
              "response": []
            },
            {
              "name": "TOPIC CREATE",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "60de42a1-1f23-421c-a554-9324dccb4790",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8226aa93-491c-48b5-8891-14e831b29b97",
                    "exec": [
                      "pm.test('Create Topic', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.topicId).to.not.be.null;",
                      "    pm.environment.set(\"TOPIC_ID\", data.topicId);",
                      "    pm.environment.set(\"TOPIC_NAME\", data.name);",
                      "    pm.expect(data.name).to.equal(\"Test_Distinct_Topic\");",
                      "    var factor_schema = [{",
                      "        \"items\": {",
                      "            \"factorId\": \"string\",",
                      "            \"type\": \"string\",",
                      "            \"name\": \"string\"",
                      "        }",
                      "    }];",
                      "    pm.expect(tv4.validate(data.factors, factor_schema)).to.be.true;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b0e6c944-5007-4424-b3bc-1449c7d39b6b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Distinct_Topic_{{$randomInt}}\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\n            \"factorId\": \"1\",\n            \"type\": \"text\",\n            \"name\": \"propA\",\n            \"label\": \"propA\"\n        },\n        {\n            \"factorId\": \"2\",\n            \"type\": \"text\",\n            \"name\": \"propB\"\n        }\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "TOPIC LOAD BY ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bab876d8-3452-4edd-a27b-b1c908ffb2fe",
                    "exec": [
                      "pm.test(\"Load Topic By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const topic_id =pm.environment.get(\"TOPIC_ID\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f5538596-beeb-461d-9ebe-e98e6ba17da2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic?topic_id={{TOPIC_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic"
                  ],
                  "query": [
                    {
                      "key": "topic_id",
                      "value": "{{TOPIC_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LOAD BATCHED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9ae74a18-af9e-4e4a-8cc1-b108800b0baf",
                    "exec": [
                      "pm.test(\"Load Topic Batched\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    const topic_id = pm.environment.get(\"TOPIC_ID\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "64c3b94e-8912-4a1d-a494-1a3943adcf53",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{TOPIC_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic/ids"
              },
              "response": []
            },
            {
              "name": "TOPIC FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3618909-5caf-4138-a5e4-b515da8cb79b",
                    "exec": [
                      "pm.test(\"Find Topics Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.itemCount).to.not.be.null;",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0bd8659b-f60c-4e3c-8e5e-707eef65a429",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null,
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LIST BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "87459cf4-6923-4dae-a14b-bf1cdada80db",
                    "exec": [
                      "pm.test('List Topics All', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7cabc20c-b317-4986-97d4-b80775b023a5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/list/name?query_name=test&exclude_types=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    },
                    {
                      "key": "exclude_types",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LIST ALL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1d60af2-e28a-4b0e-9ebb-888eb00c55b5",
                    "exec": [
                      "pm.test('List Topics All', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "50686046-117f-4775-bfaa-d9208c016703",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic/all"
              },
              "response": []
            },
            {
              "name": "TOPIC UPDATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03eb6766-6348-4474-b831-db6d7841c9b9",
                    "exec": [
                      "pm.test(\"Update Topic\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.name).to.equal('Test_Distinct_Topic_2');",
                      "    pm.environment.set(\"TOPIC_NAME\", \"Test_Distinct_Topic_2\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "bc6f5ea3-9d25-4c82-b54a-384f6b0092ed",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic_6\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"text\", \"name\": \"propC\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "TOPIC UPDATE WITH CHANGE TABLE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b94de399-803d-421b-99b8-ac292646ffdf",
                    "exec": [
                      "pm.test(\"Update Topic With Change Table\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "e18f07f9-60b4-4995-972b-8ba7ecfbed2e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"{{TOPIC_NAME}}\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"text\", \"name\": \"propE\"},\n        {\"factorId\": \"4\", \"type\": \"text\", \"name\": \"propF\"},\n        {\"factorId\": \"5\", \"type\": \"text\", \"name\": \"propG\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "TOPIC DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a70f62e6-fb77-4867-b79e-a11b6cbd11a8",
                    "exec": [
                      "pm.test('Delete Topic', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const topic_id = pm.environment.get(\"TOPIC_ID\");",
                      "    const topic_name = pm.environment.get(\"TOPIC_NAME\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "    pm.expect(data.name).to.equal(topic_name);",
                      "    pm.environment.unset(\"TOPIC_ID\");",
                      "    pm.environment.unset(\"TOPIC_NAME\");",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c41674f-7f67-42c8-bbc0-1d2f6ef023f1",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "70319304-2cdb-4f52-adef-306fbac9a355",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic?topic_id={{TOPIC_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic"
                  ],
                  "query": [
                    {
                      "key": "topic_id",
                      "value": "{{TOPIC_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "792d1f3c-b699-4d36-bf61-bbdb60a25982"
        },
        {
          "name": "PIPELINE",
          "item": [
            {
              "name": "PIPELINE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fc145713-ab6d-4b28-9230-0a7cd6ff6f77",
                    "exec": [
                      "pm.test('Create Pipeline', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pipelineId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Pipeline')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('PIPELINE_ID', data.pipelineId);",
                      "    pm.environment.set('PIPELINE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('PIPELINE_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('PIPELINE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "cfd94970-db70-4c99-a0da-8a4d80f894cd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"1\",\n    \"name\": \"Test-Pipeline\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"alarm\",\n                            \"severity\": \"high\",\n                            \"message\": \"Hello world!\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline"
              },
              "response": []
            },
            {
              "name": "PIPELINE LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1a73ceb-cb78-4b0e-b03e-e7de007f4e9b",
                    "exec": [
                      "pm.test(\"Load Pipeline By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const pipeline_id =pm.environment.get(\"PIPELINE_ID\");",
                      "    pm.expect(data.pipelineId).to.equal(pipeline_id);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3d88d558-5b26-452f-b5b0-57b35923acd4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE RENAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "51a479cd-6531-4c21-8219-ea1fba68348e",
                    "exec": [
                      "pm.test(\"Rename Pipeline\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6b8085ff-1af2-4483-9398-86514690f860",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/rename?pipeline_id={{PIPELINE_ID}}&name=test2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "test2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE ENABLED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b44b146-65f5-4a22-a031-4fc214557c6d",
                    "exec": [
                      "pm.test(\"Enabled Pipeline\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "38682c4d-2d86-4178-acd7-42ad292f600c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/enabled?pipeline_id={{PIPELINE_ID}}&enabled=1",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "enabled"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}",
                      "type": "text"
                    },
                    {
                      "key": "enabled",
                      "value": "1",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE LIST ALL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b5ed5e94-1613-4783-850c-505ffd6052d0",
                    "exec": [
                      "pm.test(\"List Pipelines\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c03bfa4b-8de1-41d5-8a42-4269b8edaf2f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/pipeline/all"
              },
              "response": []
            },
            {
              "name": "PIPELINE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "058611fd-7b86-40be-b8b8-b85e9afcb382",
                    "exec": [
                      "pm.test('Delete Pipeline', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const pipeline_id = pm.environment.get(\"PIPELINE_ID\");",
                      "    pm.expect(data.pipelineId).to.equal(pipeline_id);",
                      "    pm.environment.unset(\"PIPELINE_ID\");",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "df52465a-4fa7-457a-a968-aacf4f25eb52",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "13156c3c-75f0-4ae4-b8b6-aa856055618a"
        },
        {
          "name": "PIPELINE GRAPHIC",
          "item": [
            {
              "name": "PIPELINE GRAPHICS CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7469bc01-91b4-444d-b6ad-ed6a59fe2e0f",
                    "exec": [
                      "pm.test(\"Create Pipeline Graphics\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pipelineGraphId).to.is.not.null",
                      "    pm.environment.set(\"PIPELINE_GRAPH_ID\", data.pipelineGraphId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c7fd000e-3685-4ac9-a42d-1d6aedbfe9a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Pipeline_Graphics\",\n    \"topics\": [\n        {\n            \"topicId\": 1,\n            \"rect\": {\n                \"coordinate\": {\n                    \"x\": 1,\n                    \"y\": 1\n                },\n                \"frame\": {\n                    \"x\": 1,\n                    \"y\": 1,\n                    \"width\": 10,\n                    \"height\": 10\n                },\n                \"name\": {\n                    \"x\": 2,\n                    \"y\": 2\n                }\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/graphics"
              },
              "response": []
            },
            {
              "name": "PIPELINE GRAPHICS LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cdb4da3-483a-44b3-b735-c70e08692e0f",
                    "exec": [
                      "pm.test(\"List Pipeline Graphics\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5a192cde-f07f-4070-8d90-89a1ec513c5c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/pipeline/graphics"
              },
              "response": []
            },
            {
              "name": "PIPELINE GRAPHICS DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7173a03b-6385-4180-9bbd-8f59eec5c596",
                    "exec": [
                      "pm.test(\"Delete Pipeline Graphics\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"PIPELINE_GRAPH_ID\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6d447079-bc6f-4d1e-ac98-f8a9b8474021",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/graphics/delete?pipeline_graph_id={{PIPELINE_GRAPH_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "graphics",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "pipeline_graph_id",
                      "value": "{{PIPELINE_GRAPH_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE GRAPHICS DELETE BY SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "579273c3-15ab-4e40-998d-9d33335ddb71",
                    "exec": [
                      "pm.test(\"Delete Pipeline Graphics By Super Admin\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"PIPELINE_GRAPH_ID\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9be9ef09-4381-4951-b9b4-22062c747413",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/graphics?pipeline_graphic_id={{PIPELINE_GRAPH_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "graphics"
                  ],
                  "query": [
                    {
                      "key": "pipeline_graphic_id",
                      "value": "{{PIPELINE_GRAPH_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "7dc3f01a-b535-4225-ae5a-74f0df01d407"
        },
        {
          "name": "SYSTEM",
          "item": [
            {
              "name": "LOGIN-ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e3a4845-0273-45da-9bd2-75e5d1a91a03",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                      "    pm.environment.set('TENANT_ID', data.tenantId)",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "93515980-977a-4946-b914-a77df0fe43ac",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "TENANT INFRA TOPIC",
              "id": "c398d433-9619-4600-9d27-ae9b6d6ac9fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant/init?tenant_id=1",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant",
                    "init"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "1",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "190de5b4-4005-4815-b56e-dab1f1732762"
        }
      ],
      "id": "22d9b007-f6be-4ee5-b4f3-89374c0d3578"
    },
    {
      "name": "CONSOLE",
      "item": [
        {
          "name": "SUBJECT",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d53806d-9afa-4518-a437-3affec231498",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5484e607-8fdb-44d7-bd79-b5a877f162d5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "084af145-b239-40ea-a3e7-96b0a496df40",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9a4e714d-2fdc-4516-87dc-190c27a0327b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ff942554-f42b-4057-a480-39a446e5ac8c",
                    "exec": [
                      "pm.test('Create Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.subjectId).to.not.be.null;",
                      "    pm.expect(data.name).to.equal(\"Test_Subject\");",
                      "    pm.expect(data.userId).to.not.be.null;",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                      "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7dc8c5ba-a1d8-41b1-bfd7-02f9e071f9b4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"name\": \"Test_Subject\",\r\n  \"connectId\": \"{{CONNECT_ID}}\",\r\n  \"reports\": [\r\n    \"1\",\r\n    \"2\"\r\n  ],\r\n  \"dataset\": {\r\n    \"joins\": [],\r\n    \"columns\": [\r\n      {\r\n        \"alias\": \"alias_a\",\r\n        \"columnId\": \"f-1\",\r\n        \"parameter\": {\r\n          \"on\": null,\r\n          \"kind\": \"topic\",\r\n          \"type\": null,\r\n          \"value\": null,\r\n          \"topicId\": \"1\",\r\n          \"factorId\": \"1\",\r\n          \"parameters\": [],\r\n          \"conditional\": false\r\n        }\r\n      },\r\n      {\r\n        \"alias\": \"alias_b\",\r\n        \"columnId\": \"f-2\",\r\n        \"parameter\": {\r\n          \"on\": null,\r\n          \"kind\": \"computed\",\r\n          \"type\": \"month-of\",\r\n          \"value\": null,\r\n          \"topicId\": null,\r\n          \"factorId\": null,\r\n          \"parameters\": [\r\n            {\r\n              \"on\": null,\r\n              \"kind\": \"topic\",\r\n              \"type\": null,\r\n              \"value\": null,\r\n              \"topicId\": \"1\",\r\n              \"factorId\": \"2\",\r\n              \"parameters\": [],\r\n              \"conditional\": false\r\n            }\r\n          ],\r\n          \"conditional\": false\r\n        }\r\n      }\r\n    ],\r\n    \"filters\": {\r\n      \"left\": null,\r\n      \"right\": null,\r\n      \"filters\": [\r\n        {\r\n          \"left\": {\r\n            \"on\": null,\r\n            \"kind\": \"topic\",\r\n            \"type\": null,\r\n            \"value\": null,\r\n            \"topicId\": \"1\",\r\n            \"factorId\": \"2\",\r\n            \"parameters\": [],\r\n            \"conditional\": false\r\n          },\r\n          \"right\": {\r\n            \"on\": null,\r\n            \"kind\": \"constant\",\r\n            \"type\": null,\r\n            \"value\": \"2021-01-01\",\r\n            \"topicId\": null,\r\n            \"factorId\": null,\r\n            \"parameters\": [],\r\n            \"conditional\": false\r\n          },\r\n          \"filters\": [],\r\n          \"operator\": \"more\",\r\n          \"jointType\": null\r\n        }\r\n      ],\r\n      \"operator\": null,\r\n      \"jointType\": \"and\"\r\n    }\r\n  }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "SUBJECT RENAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bb9c0a7e-4ec9-4bff-8919-027220fa61bb",
                    "exec": [
                      "pm.test('Rename Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ec07ad7a-87a8-4677-ac06-2bcaff582d0e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject/rename?subject_id={{SUBJECT_ID}}&name=Test_Subject2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "Test_Subject2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE BY ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2324c9dc-b132-4712-b069-d278dfc70aa1",
                    "exec": [
                      "pm.test('Delete Subject By Id', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"SUBJECT_ID\");",
                      "    pm.environment.unset(\"SUBJECT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6211c016-097c-47fb-967e-1f8b70d2682f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject/delete?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT CREATE 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3713a3b1-72e0-45b7-9499-eb2566fdde4d",
                    "exec": [
                      "pm.test('Create Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                      "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "57e39942-8684-4c97-b53b-cc3fdc3ae1cf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test_Subject\",\n  \"connectId\": \"{{CONNECT_ID}}\",\n  \"reports\": [\n    \"1\",\n    \"2\"\n  ],\n  \"dataset\": {\n    \"joins\": [],\n    \"columns\": [\n      {\n        \"alias\": \"alias_a\",\n        \"columnId\": \"f-1\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"topic\",\n          \"type\": null,\n          \"value\": null,\n          \"topicId\": \"1\",\n          \"factorId\": \"1\",\n          \"parameters\": [],\n          \"conditional\": false\n        }\n      },\n      {\n        \"alias\": \"alias_b\",\n        \"columnId\": \"f-2\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"computed\",\n          \"type\": \"month-of\",\n          \"value\": null,\n          \"topicId\": null,\n          \"factorId\": null,\n          \"parameters\": [\n            {\n              \"on\": null,\n              \"kind\": \"topic\",\n              \"type\": null,\n              \"value\": null,\n              \"topicId\": \"1\",\n              \"factorId\": \"2\",\n              \"parameters\": [],\n              \"conditional\": false\n            }\n          ],\n          \"conditional\": false\n        }\n      }\n    ],\n    \"filters\": {\n      \"left\": null,\n      \"right\": null,\n      \"filters\": [\n        {\n          \"left\": {\n            \"on\": null,\n            \"kind\": \"topic\",\n            \"type\": null,\n            \"value\": null,\n            \"topicId\": \"1\",\n            \"factorId\": \"2\",\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"right\": {\n            \"on\": null,\n            \"kind\": \"constant\",\n            \"type\": null,\n            \"value\": \"2021-01-01\",\n            \"topicId\": null,\n            \"factorId\": null,\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"filters\": [],\n          \"operator\": \"more\",\n          \"jointType\": null\n        }\n      ],\n      \"operator\": null,\n      \"jointType\": \"and\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10709b52-e61d-4c75-b565-28e799fc7a45",
                    "exec": [
                      "pm.test('Delete Subject By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"SUBJECT_ID\");",
                      "    pm.environment.unset(\"SUBJECT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "d295c9ff-d0c9-4761-9730-76d0149b9887",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8c7eaa9d-175d-41fa-a10e-b648d842753e",
                    "exec": [
                      "pm.test(\"Delete Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0db66b24-7356-4d0f-a67d-5dd5ef92243c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/delete?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4873d8a8-d2d1-4268-a7aa-47948ff4443b",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b6c1dc57-af50-4ad2-850f-95080d9e96b3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "56b09cda-c4e8-4471-8008-3ba794718bf2"
        },
        {
          "name": "REPORT",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8029ed98-20ed-48f6-b37c-08608b523657",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "40618b4a-cd57-412e-9855-7954066d7272",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "52993469-1fd4-4abc-894a-cfb302dbad0a",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7269c755-49f1-46bd-8a1f-bd12f07f091a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "52f8dc29-4beb-4c8a-bd6c-dee8826ae3a6",
                    "exec": [
                      "pm.test('Create Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                      "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1d0a4831-191b-4b76-b3f5-44ba7418020d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test_Subject\",\n  \"connectId\": \"{{CONNECT_ID}}\",\n  \"reports\": [\n    \"1\",\n    \"2\"\n  ],\n  \"dataset\": {\n    \"joins\": [],\n    \"columns\": [\n      {\n        \"alias\": \"alias_a\",\n        \"columnId\": \"f-1\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"topic\",\n          \"type\": null,\n          \"value\": null,\n          \"topicId\": \"1\",\n          \"factorId\": \"1\",\n          \"parameters\": [],\n          \"conditional\": false\n        }\n      },\n      {\n        \"alias\": \"alias_b\",\n        \"columnId\": \"f-2\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"computed\",\n          \"type\": \"month-of\",\n          \"value\": null,\n          \"topicId\": null,\n          \"factorId\": null,\n          \"parameters\": [\n            {\n              \"on\": null,\n              \"kind\": \"topic\",\n              \"type\": null,\n              \"value\": null,\n              \"topicId\": \"1\",\n              \"factorId\": \"2\",\n              \"parameters\": [],\n              \"conditional\": false\n            }\n          ],\n          \"conditional\": false\n        }\n      }\n    ],\n    \"filters\": {\n      \"left\": null,\n      \"right\": null,\n      \"filters\": [\n        {\n          \"left\": {\n            \"on\": null,\n            \"kind\": \"topic\",\n            \"type\": null,\n            \"value\": null,\n            \"topicId\": \"1\",\n            \"factorId\": \"2\",\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"right\": {\n            \"on\": null,\n            \"kind\": \"constant\",\n            \"type\": null,\n            \"value\": \"2021-01-01\",\n            \"topicId\": null,\n            \"factorId\": null,\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"filters\": [],\n          \"operator\": \"more\",\n          \"jointType\": null\n        }\n      ],\n      \"operator\": null,\n      \"jointType\": \"and\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "REPORT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aee87092-f87d-4a03-9633-4caeab7bee69",
                    "exec": [
                      "pm.test('Create Report', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.reportId).to.not.be.null;",
                      "    pm.expect(data.name).to.equal(\"Test_Report\");",
                      "    pm.expect(data.userId).to.not.be.null;",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.environment.set(\"REPORT_ID\", data.reportId);",
                      "    pm.environment.set(\"REPORT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3a011c6d-13af-4df5-843e-69cf12ae0b76",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"filters\": {},\n    \"funnels\": [],\n    \"indicators\": [],\n    \"dimensions\": [],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/report"
              },
              "response": []
            },
            {
              "name": "REPORT FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fc88be5b-9bd2-4a67-9671-4556257447ef",
                    "exec": [
                      "pm.test('Find Report Pageable', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "92de4282-e744-44b0-9969-d945ff3d6c02",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/report/name?query_name={{REPORT_NAME}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "report",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "{{REPORT_NAME}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "REPORT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf102856-d10a-448d-a68b-8918f41d642c",
                    "exec": [
                      "pm.test('Delete Report', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"REPORT_ID\");",
                      "    pm.environment.unset(\"REPORT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "30c4b99c-702b-47e7-9ce8-7ead62bf5a98",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/report/delete?report_id={{REPORT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "report",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "report_id",
                      "value": "{{REPORT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "REPORT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d7fe3611-def1-4322-98c4-5d0e384a607e",
                    "exec": [
                      "pm.test('Create Report', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"REPORT_ID\", data.reportId);",
                      "    pm.environment.set(\"REPORT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5e80b842-7895-40a1-b965-a04f930213e5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"filters\": {},\n    \"funnels\": [],\n    \"indicators\": [],\n    \"dimensions\": [],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/report"
              },
              "response": []
            },
            {
              "name": "REPORT DELETE BY SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86ea25d0-93ed-4fd4-8581-4e5f97d634ee",
                    "exec": [
                      "pm.test('Delete Report By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"REPORT_ID\");",
                      "    pm.environment.unset(\"REPORT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "63b1e88e-5a5e-42af-a5e9-56f9e6ade108",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/report?report_id={{REPORT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "report"
                  ],
                  "query": [
                    {
                      "key": "report_id",
                      "value": "{{REPORT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "13efab79-81af-4982-9bfa-eda8014523ca",
                    "exec": [
                      "pm.test('Delete Subject By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"SUBJECT_ID\");",
                      "    pm.environment.unset(\"SUBJECT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "8430ceb5-fd8f-464a-b6eb-3080fb866cac",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a12ef8fb-2c39-4c97-a511-0d846272425b",
                    "exec": [
                      "pm.test(\"Delete Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "fa9400e8-06d8-45db-b812-664a173e0cfc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/delete?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4133fde9-01bb-4557-84be-52001f1050cc",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ff0689b5-a519-4371-8d9a-9ff046a38a59",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "738f1fa8-b2bf-4175-92d5-48f1c0e01316"
        },
        {
          "name": "DASHBOARD",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5826915d-d361-4ce2-91d4-fa374799758a",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5d58cdf1-8da6-4734-8a34-47adfd08380f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0ee0ce18-d69b-4998-83d0-0264e412bfa9",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a3c688ed-1e55-4634-8f9c-4e1ed176a793",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7151fafa-e6b8-4f38-a687-cec9153d6dfd",
                    "exec": [
                      "pm.test('Create Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                      "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "88ab73ad-522c-412c-aeca-b8c1ba8b9c06",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test_Subject\",\n  \"connectId\": \"{{CONNECT_ID}}\",\n  \"reports\": [\n    \"1\",\n    \"2\"\n  ],\n  \"dataset\": {\n    \"joins\": [],\n    \"columns\": [\n      {\n        \"alias\": \"alias_a\",\n        \"columnId\": \"f-1\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"topic\",\n          \"type\": null,\n          \"value\": null,\n          \"topicId\": \"1\",\n          \"factorId\": \"1\",\n          \"parameters\": [],\n          \"conditional\": false\n        }\n      },\n      {\n        \"alias\": \"alias_b\",\n        \"columnId\": \"f-2\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"computed\",\n          \"type\": \"month-of\",\n          \"value\": null,\n          \"topicId\": null,\n          \"factorId\": null,\n          \"parameters\": [\n            {\n              \"on\": null,\n              \"kind\": \"topic\",\n              \"type\": null,\n              \"value\": null,\n              \"topicId\": \"1\",\n              \"factorId\": \"2\",\n              \"parameters\": [],\n              \"conditional\": false\n            }\n          ],\n          \"conditional\": false\n        }\n      }\n    ],\n    \"filters\": {\n      \"left\": null,\n      \"right\": null,\n      \"filters\": [\n        {\n          \"left\": {\n            \"on\": null,\n            \"kind\": \"topic\",\n            \"type\": null,\n            \"value\": null,\n            \"topicId\": \"1\",\n            \"factorId\": \"2\",\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"right\": {\n            \"on\": null,\n            \"kind\": \"constant\",\n            \"type\": null,\n            \"value\": \"2021-01-01\",\n            \"topicId\": null,\n            \"factorId\": null,\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"filters\": [],\n          \"operator\": \"more\",\n          \"jointType\": null\n        }\n      ],\n      \"operator\": null,\n      \"jointType\": \"and\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "REPORT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c618e303-b00c-4319-9507-3e86b2ae7e2c",
                    "exec": [
                      "pm.test('Create Report', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"REPORT_ID\", data.reportId);",
                      "    pm.environment.set(\"REPORT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0dbbd08c-c397-4678-9117-adcaccb3898e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"filters\": {},\n    \"funnels\": [],\n    \"indicators\": [],\n    \"dimensions\": [],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/report"
              },
              "response": []
            },
            {
              "name": "DASHBOARD CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2dde5a07-dc0d-47a9-aec1-b56235f5bc4a",
                    "exec": [
                      "pm.test('Create Dashboard', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"DASHBOARD_ID\", data.dashboardId);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b19d3f2d-3a6b-4af6-8337-f85ba4e33de6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"name\": \"Test_Dashboard\",\r\n  \"reports\": [\r\n    {\r\n      \"rect\": {\r\n        \"x\": 29,\r\n        \"y\": 28,\r\n        \"width\": 751,\r\n        \"height\": 640\r\n      },\r\n      \"reportId\": \"{{REPORT_ID}}\"\r\n    },\r\n    {\r\n      \"rect\": {\r\n        \"x\": 799,\r\n        \"y\": 10,\r\n        \"width\": 781,\r\n        \"height\": 335\r\n      },\r\n      \"reportId\": \"{{REPORT_ID}}\"\r\n    },\r\n    {\r\n      \"rect\": {\r\n        \"x\": 876,\r\n        \"y\": 312,\r\n        \"width\": 497,\r\n        \"height\": 394\r\n      },\r\n      \"reportId\": \"{{REPORT_ID}}\"\r\n    }\r\n  ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/dashboard"
              },
              "response": []
            },
            {
              "name": "DASHBOARD LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f0a675-9001-4f4a-b627-322c8c3f5136",
                    "exec": [
                      "pm.test('List Dashboard', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "fc30d542-af31-4754-8a62-1d3b12208f0d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/dashboard/list"
              },
              "response": []
            },
            {
              "name": "ADMIN DASHBOARD LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "79d65681-9d9c-43ec-afc2-7f764c95574b",
                    "exec": [
                      "pm.test('Load Admin Dashboard', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "541b6263-4a52-4caf-9e80-673f83e9d9cb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/dashboard/admin"
              },
              "response": []
            },
            {
              "name": "DASHBOARD SHARE",
              "id": "52d87102-c582-4bca-8138-aeb1067a7aff",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/dashboard/shared?dashboard_id={{DASHBOARD_ID}}&token={{JWT_TOKEN}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "dashboard",
                    "shared"
                  ],
                  "query": [
                    {
                      "key": "dashboard_id",
                      "value": "{{DASHBOARD_ID}}"
                    },
                    {
                      "key": "token",
                      "value": "{{JWT_TOKEN}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DASHBOARD RENAME",
              "id": "4df34ae6-9f55-478d-9cc4-68a474a297ba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/dashboard/rename?dashboard_id={{DASHBOARD_ID}}&name=Test_Dashboard2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "dashboard",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "dashboard_id",
                      "value": "{{DASHBOARD_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "Test_Dashboard2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DASHBOARD DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f2ffa456-8169-4858-a4f0-c834b1f9ceb4",
                    "exec": [
                      "pm.test('Delete Dashboard', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"DASHBOARD_ID\");",
                      "    pm.environment.unset(\"DASHBOARD_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "11079793-137c-445a-9870-56456c9800da",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/dashboard/delete?dashboard_id={{DASHBOARD_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "dashboard",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "dashboard_id",
                      "value": "{{DASHBOARD_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DASHBOARD CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e8e2a92-405b-4b76-b637-3732250477d3",
                    "exec": [
                      "pm.test('Create Dashboard', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"DASHBOARD_ID\", data.dashboardId);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "16c3161a-0da0-4ca9-91c9-b8242211f3ee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test_Dashboard\",\n  \"reports\": [\n    {\n      \"rect\": {\n        \"x\": 29,\n        \"y\": 28,\n        \"width\": 751,\n        \"height\": 640\n      },\n      \"reportId\": \"{{REPORT_ID}}\"\n    },\n    {\n      \"rect\": {\n        \"x\": 799,\n        \"y\": 10,\n        \"width\": 781,\n        \"height\": 335\n      },\n      \"reportId\": \"{{REPORT_ID}}\"\n    },\n    {\n      \"rect\": {\n        \"x\": 876,\n        \"y\": 312,\n        \"width\": 497,\n        \"height\": 394\n      },\n      \"reportId\": \"{{REPORT_ID}}\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/dashboard"
              },
              "response": []
            },
            {
              "name": "DASHBOARD DELETE BY SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "09b5f239-81b6-498a-b34e-51e55a44b826",
                    "exec": [
                      "pm.test('Delete Dashboard By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"DASHBOARD_ID\");",
                      "    pm.environment.unset(\"DASHBOARD_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "174a12e9-ad78-4a0b-8247-74e87d42e975",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/dashboard?dashboard_id={{DASHBOARD_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "dashboard"
                  ],
                  "query": [
                    {
                      "key": "dashboard_id",
                      "value": "{{DASHBOARD_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "REPORT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d6165bd-8aa1-428b-9023-2702c447613b",
                    "exec": [
                      "pm.test('Delete Report', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"REPORT_ID\");",
                      "    pm.environment.unset(\"REPORT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7922da88-4259-49ef-8889-24e8f8a71ab7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/report/delete?report_id={{REPORT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "report",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "report_id",
                      "value": "{{REPORT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b75f52-b0ca-49de-bb6d-6c6d7a7afb7f",
                    "exec": [
                      "pm.test('Delete Subject By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"SUBJECT_ID\");",
                      "    pm.environment.unset(\"SUBJECT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b4de330e-413a-45eb-b1a8-8cf7979956ce",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb6f0969-5000-4ddb-be59-230a1ff3db16",
                    "exec": [
                      "pm.test(\"Delete Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "58384dbc-dfc2-437d-9afb-68f888478369",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/delete?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "98e29360-df86-4d42-a4cb-341674595b91",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4f939afb-472d-410d-9de0-12febf5cf860",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "8c21efbb-a620-42e3-8aac-5b88c531ead0"
        },
        {
          "name": "CONNECTED SPACE",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f41a381e-a870-4e8a-954b-9aed6bdd9b11",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5fe4c979-809f-4259-9d5e-8c96f6f1e077",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "964f1734-0f25-480d-84c9-5b509cd29ca1",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.spaceId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Space')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "    pm.environment.set('CONNECTED_SPACE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('CONNECTED_SPACE_CREATED_BY', data.createdBy);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "46ebd378-2afd-4676-b113-02f5240f5008",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1ded2608-b13a-4734-b5c1-ac38dbe15f70",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ea450bac-d608-4d7b-87d0-d8bb72ab2cb1",
                    "exec": [
                      "pm.test(\"List Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "d2204740-fdce-4ab4-9b62-ba6d54e722be",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/connected_space/list"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE RENAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "960b9e42-0588-4b60-a722-ea972aa2c655",
                    "exec": [
                      "pm.test(\"Rename Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "8ae6179c-eb62-40fb-a8d8-445d5241def4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/rename?connect_id={{CONNECT_ID}}&name=Test-Space2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "Test-Space2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED  SPACE TEMPLATE LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4c74dad-bf24-48e2-b8fe-02a0d3756bcd",
                    "exec": [
                      "pm.test(\"List Connected Space Template\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "8b0f58a5-ddcb-472e-966b-72033b8dec19",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/template/list?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "template",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE EXPORT",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b2d8ba73-9b50-4db1-8866-a3bcb131feb1",
                    "exec": [
                      "pm.test(\"Export Template Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b303d824-9c21-4c3b-aec8-0434c00c9f72",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/connected_space/export"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8466eba2-6e8b-45fa-8a5a-52072cb433fb",
                    "exec": [
                      "pm.test(\"Delete Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "    pm.environment.unset('CONNECTED_SPACE_CREATED_AT');",
                      "    pm.environment.unset('CONNECTED_SPACE_CREATED_BY');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "502ca589-21ab-4fe9-971a-b6ff8d231f6c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/delete?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0ca6cde8-4a66-46f4-bf42-472f93dd1962",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6944c70e-8374-426a-9c8d-1ccd032d4cae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE BY SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e401f2ee-f863-43ed-9ace-fa6b8b273694",
                    "exec": [
                      "pm.test(\"Delete Connected Space By Super Admin\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "    pm.environment.unset('CONNECTED_SPACE_CREATED_AT');",
                      "    pm.environment.unset('CONNECTED_SPACE_CREATED_BY');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4fdce01b-d9c5-4a49-81d0-9b8f1edfc808",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2c6a60f-0980-493f-a0d6-431880624448",
                    "exec": [
                      "pm.test('Delete Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "93abc4d2-2209-40c6-8ed2-ffb7fb12339f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "331d37bd-f18d-432e-97a7-13241c36438c"
        },
        {
          "name": "CONNECTED SPACE GRAPHIC",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3217b21-d49e-475a-abf4-24f55653f562",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "2c68e307-3bd9-48da-8acf-23fe0412e3e0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9bf4d843-2e6c-4018-a085-ee802d6f4352",
                    "exec": [
                      "pm.test('Create Connected Space', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set('CONNECT_ID', data.connectId);",
                      "    pm.environment.set('CONNECTED_SPACE_ID', data.spaceId);",
                      "    pm.environment.set('CONNECTED_SPACE_NAME', data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "39986207-f974-48b9-bffb-2967a4e65f6e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/connect?space_id={{SPACE_ID}}&name={{SPACE_NAME}}&template_ids=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "connect"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "{{SPACE_NAME}}"
                    },
                    {
                      "key": "template_ids",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6a79d72d-0653-4f61-b08f-24301a44de50",
                    "exec": [
                      "pm.test('Create Subject', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                      "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9b346507-7cc9-43c8-a948-55b154366fe1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test_Subject\",\n  \"connectId\": \"{{CONNECT_ID}}\",\n  \"reports\": [\n    \"1\",\n    \"2\"\n  ],\n  \"dataset\": {\n    \"joins\": [],\n    \"columns\": [\n      {\n        \"alias\": \"alias_a\",\n        \"columnId\": \"f-1\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"topic\",\n          \"type\": null,\n          \"value\": null,\n          \"topicId\": \"1\",\n          \"factorId\": \"1\",\n          \"parameters\": [],\n          \"conditional\": false\n        }\n      },\n      {\n        \"alias\": \"alias_b\",\n        \"columnId\": \"f-2\",\n        \"parameter\": {\n          \"on\": null,\n          \"kind\": \"computed\",\n          \"type\": \"month-of\",\n          \"value\": null,\n          \"topicId\": null,\n          \"factorId\": null,\n          \"parameters\": [\n            {\n              \"on\": null,\n              \"kind\": \"topic\",\n              \"type\": null,\n              \"value\": null,\n              \"topicId\": \"1\",\n              \"factorId\": \"2\",\n              \"parameters\": [],\n              \"conditional\": false\n            }\n          ],\n          \"conditional\": false\n        }\n      }\n    ],\n    \"filters\": {\n      \"left\": null,\n      \"right\": null,\n      \"filters\": [\n        {\n          \"left\": {\n            \"on\": null,\n            \"kind\": \"topic\",\n            \"type\": null,\n            \"value\": null,\n            \"topicId\": \"1\",\n            \"factorId\": \"2\",\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"right\": {\n            \"on\": null,\n            \"kind\": \"constant\",\n            \"type\": null,\n            \"value\": \"2021-01-01\",\n            \"topicId\": null,\n            \"factorId\": null,\n            \"parameters\": [],\n            \"conditional\": false\n          },\n          \"filters\": [],\n          \"operator\": \"more\",\n          \"jointType\": null\n        }\n      ],\n      \"operator\": null,\n      \"jointType\": \"and\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "SPACE GRAPHIC CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5803db80-93a8-4774-9bec-e33198aa88a0",
                    "exec": [
                      "pm.test('Create Connected Space Graphic', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "5e005d9b-5807-486c-9194-81c751523cda",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"connectId\": \"{{CONNECT_ID}}\",\r\n  \"topics\": [\r\n    {\r\n      \"rect\": {\r\n        \"name\": {\r\n          \"x\": 83.81944274902344,\r\n          \"y\": 23.977777671813964\r\n        },\r\n        \"frame\": {\r\n          \"x\": 0,\r\n          \"y\": 0,\r\n          \"width\": 167.63888549804688,\r\n          \"height\": 35.55555534362793\r\n        },\r\n        \"coordinate\": {\r\n          \"x\": 32,\r\n          \"y\": 32\r\n        }\r\n      },\r\n      \"topicId\": \"1\"\r\n    }\r\n  ],\r\n  \"subjects\": [\r\n    {\r\n      \"rect\": {\r\n        \"name\": {\r\n          \"x\": 75,\r\n          \"y\": 23.977777671813964\r\n        },\r\n        \"frame\": {\r\n          \"x\": 0,\r\n          \"y\": 0,\r\n          \"width\": 150,\r\n          \"height\": 35.55555534362793\r\n        },\r\n        \"coordinate\": {\r\n          \"x\": 423.71429443359375,\r\n          \"y\": 32\r\n        }\r\n      },\r\n      \"subjectId\": \"{{SUBJECT_ID}}\"\r\n    }\r\n  ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/connected_space/graphics"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE GRAPHICS LIST",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "398b337a-ab5f-4136-84de-01dc0984d23b",
                    "exec": [
                      "pm.test('List Connected Space Graphic', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9fe9a0f4-4b19-4649-98c5-6994b5ea136b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/connected_space/graphics"
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE GRAPHICS DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1e82b28-783d-4eda-9227-2da598766a64",
                    "exec": [
                      "pm.test('Delete Connected Space Graphic', () => {",
                      "    pm.response.to.have.status(200);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "28831a72-3eb9-4422-8a7e-d90599133ddb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/graphics?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "graphics"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "858609d2-a61e-485c-8494-4d76cc6f415b",
                    "exec": [
                      "pm.test('Delete Subject By Super Admin', () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset(\"SUBJECT_ID\");",
                      "    pm.environment.unset(\"SUBJECT_NAME\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "96c75ad2-276a-48e4-a78b-c61ea97fc5d9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "349cb4fc-e384-4ec9-8cbc-8e55ce6a9190",
                    "exec": [
                      "pm.test(\"Delete Connected Space\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.unset('CONNECT_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_ID');",
                      "    pm.environment.unset('CONNECTED_SPACE_NAME');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1ffd58b5-a9bd-4768-bb79-c19963c6d83a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/connected_space/delete?connect_id={{CONNECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "connected_space",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "connect_id",
                      "value": "{{CONNECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "cfe9cf47-e61c-4000-aaf7-5873c6c7338b"
        }
      ],
      "id": "2b46a424-766d-43c9-a923-4747070a27df"
    },
    {
      "name": "IMPORT",
      "item": [
        {
          "name": "USER IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d0791bd-626d-4d6b-880f-33a00805371a",
                "exec": [
                  "pm.test(\"Import User\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "8a06a871-2ef0-40bf-9a39-8bb3d46dc24c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"userId\": \"f-1\",\n        \"name\": \"Import-User1\",\n        \"nickName\": \"Import-User-Nickname1\",\n        \"password\": \"abcd1234\",\n        \"isActive\": true,\n        \"groupIds\": [],\n        \"role\": \"console\"\n    },\n    {\n        \"userId\": \"f-2\",\n        \"name\": \"Import-User2\",\n        \"nickName\": \"Import-User-Nickname2\",\n        \"password\": \"abcd1234\",\n        \"isActive\": true,\n        \"groupIds\": [],\n        \"role\": \"console\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/user/import"
          },
          "response": []
        },
        {
          "name": "USER GROUP IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6a625b6-1825-4ad3-aa3b-390101df12e8",
                "exec": [
                  "pm.test(\"Import User Group\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "e4cdba9d-4675-4638-a663-aaf4038437b5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"userGroupId\": \"f-1\",\n        \"name\": \"Import-Group1\",\n        \"description\": \"A description\",\n        \"userIds\": [\n            \"{{USER_ID}}\",\n            \"2\"\n        ],\n        \"spaceIds\": [\n            \"{{SPACE_ID}}\"\n        ]\n    },\n    {\n        \"userGroupId\": \"f-2\",\n        \"name\": \"Import-Group2\",\n        \"description\": \"A description\",\n        \"userIds\": [\n            \"{{USER_ID}}\",\n            \"2\"\n        ],\n        \"spaceIds\": [\n            \"{{SPACE_ID}}\"\n        ]\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/user_group/import"
          },
          "response": []
        },
        {
          "name": "TOPIC IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b4548c7d-bb0f-45fb-9e07-6de33eaaa107",
                "exec": [
                  "pm.test(\"Import Topic\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "33d79b47-2fa7-4fc7-b15f-542342e523bc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"topicId\": \"f-1\",\n        \"name\": \"Import_Distinct_Topic1\",\n        \"description\": \"Test Distinct Topic\",\n        \"type\": \"distinct\",\n        \"kind\": \"business\",\n        \"dataSourceId\": \"948380846342135808\",\n        \"factors\": [\n            {\n                \"factorId\": \"1\",\n                \"type\": \"text\",\n                \"name\": \"propA\",\n                \"label\": \"propA\"\n            },\n            {\n                \"factorId\": \"2\",\n                \"type\": \"text\",\n                \"name\": \"propB\"\n            }\n        ]\n    },\n    {\n        \"topicId\": \"f-2\",\n        \"name\": \"Import_Distinct_Topic2\",\n        \"description\": \"Test Distinct Topic\",\n        \"type\": \"distinct\",\n        \"kind\": \"business\",\n        \"dataSourceId\": \"948380846342135808\",\n        \"factors\": [\n            {\n                \"factorId\": \"1\",\n                \"type\": \"text\",\n                \"name\": \"propA\",\n                \"label\": \"propA\"\n            },\n            {\n                \"factorId\": \"2\",\n                \"type\": \"text\",\n                \"name\": \"propB\"\n            }\n        ]\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/topic/import"
          },
          "response": []
        },
        {
          "name": "PIPELINE IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b709b229-6dee-44b0-a6be-fe801b36c3bd",
                "exec": [
                  "pm.test(\"Import Pipeline\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "00374e41-a384-408f-ad41-e3cea3de9fb5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pipelineId\": \"f-1\",\n        \"topicId\": \"1\",\n        \"name\": \"Import-Pipeline1\",\n        \"type\": \"insert-or-merge\",\n        \"stages\": [\n            {\n                \"stageId\": \"f-1\",\n                \"name\": \"Stage 1\",\n                \"units\": [\n                    {\n                        \"unitId\": \"f-2\",\n                        \"name\": \"Unit 1.1\",\n                        \"do\": [\n                            {\n                                \"actionId\": \"f-3\",\n                                \"type\": \"alarm\",\n                                \"severity\": \"high\",\n                                \"message\": \"Hello world!\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"enabled\": true,\n        \"validated\": true\n    },\n     {\n        \"pipelineId\": \"f-2\",\n        \"topicId\": \"1\",\n        \"name\": \"Import-Pipeline2\",\n        \"type\": \"insert-or-merge\",\n        \"stages\": [\n            {\n                \"stageId\": \"f-1\",\n                \"name\": \"Stage 1\",\n                \"units\": [\n                    {\n                        \"unitId\": \"f-2\",\n                        \"name\": \"Unit 1.1\",\n                        \"do\": [\n                            {\n                                \"actionId\": \"f-3\",\n                                \"type\": \"alarm\",\n                                \"severity\": \"high\",\n                                \"message\": \"Hello world!\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"enabled\": true,\n        \"validated\": true\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/pipeline/import"
          },
          "response": []
        },
        {
          "name": "SPACE IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0d02bcf-8cf9-4977-9b66-19b3a6c9a817",
                "exec": [
                  "pm.test(\"Import Space\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "834a67d8-2575-4d0e-8618-71ea490d9804",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"spaceId\": \"f-1\",\n        \"name\": \"Import-Space1\",\n        \"description\": \"A description\",\n        \"topicIds\": [],\n        \"groupIds\": [],\n        \"filters\": [\n            {\n                \"topicId\": \"1\",\n                \"enabled\": true,\n                \"joint\": {\n                    \"jointType\": \"and\",\n                    \"filters\": [\n                        {\n                            \"left\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"1\",\n                                \"factorId\": \"1\"\n                            },\n                            \"operator\": \"empty\"\n                        },\n                        {\n                            \"jointType\": \"or\",\n                            \"filters\": [\n                                {\n                                    \"left\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"2\"\n                                    },\n                                    \"operator\": \"not-equals\",\n                                    \"right\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"add\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"constant\",\n                                                \"value\": \"3\"\n                                            },\n                                            {\n                                                \"kind\": \"constant\",\n                                                \"value\": \"4\"\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    {\n        \"spaceId\": \"f-2\",\n        \"name\": \"Import-Space2\",\n        \"description\": \"A description\",\n        \"topicIds\": [],\n        \"groupIds\": [],\n        \"filters\": [\n            {\n                \"topicId\": \"1\",\n                \"enabled\": true,\n                \"joint\": {\n                    \"jointType\": \"and\",\n                    \"filters\": [\n                        {\n                            \"left\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"1\",\n                                \"factorId\": \"1\"\n                            },\n                            \"operator\": \"empty\"\n                        },\n                        {\n                            \"jointType\": \"or\",\n                            \"filters\": [\n                                {\n                                    \"left\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"2\"\n                                    },\n                                    \"operator\": \"not-equals\",\n                                    \"right\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"add\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"constant\",\n                                                \"value\": \"3\"\n                                            },\n                                            {\n                                                \"kind\": \"constant\",\n                                                \"value\": \"4\"\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/space/import"
          },
          "response": []
        },
        {
          "name": "CONNECTED SPACE IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57ff66ea-2fff-4aff-b672-3f714222e65d",
                "exec": [
                  "pm.test(\"Import Connected Space\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "9b9dc48b-6b02-4363-a1e7-3841d2a621da",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"connectId\": \"f-1\",\n        \"spaceId\": \"{{SPACE_ID}}\",\n        \"name\": \"Import-Connected-Space1\",\n        \"isTemplate\": false,\n        \"subjects\": []\n    },\n    {\n        \"connectId\": \"f-2\",\n        \"spaceId\": \"{{SPACE_ID}}\",\n        \"name\": \"Import-Connected-Space2\",\n        \"isTemplate\": false,\n        \"subjects\": []\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/connected_space/import"
          },
          "response": []
        },
        {
          "name": "SUBJECT IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f5a77fa3-18f5-4563-8137-222e37039cc9",
                "exec": [
                  "pm.test(\"Import Subject\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "4bc14450-0889-41a6-a42d-36b4d231f181",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"name\": \"Import_Subject1\",\n        \"connectId\": \"{{CONNECT_ID}}\",\n        \"reports\": [\n            \"1\",\n            \"2\"\n        ],\n        \"dataset\": {\n            \"joins\": [],\n            \"columns\": [\n                {\n                    \"alias\": \"alias_a\",\n                    \"columnId\": \"f-1\",\n                    \"parameter\": {\n                        \"on\": null,\n                        \"kind\": \"topic\",\n                        \"type\": null,\n                        \"value\": null,\n                        \"topicId\": \"1\",\n                        \"factorId\": \"1\",\n                        \"parameters\": [],\n                        \"conditional\": false\n                    }\n                },\n                {\n                    \"alias\": \"alias_b\",\n                    \"columnId\": \"f-2\",\n                    \"parameter\": {\n                        \"on\": null,\n                        \"kind\": \"computed\",\n                        \"type\": \"month-of\",\n                        \"value\": null,\n                        \"topicId\": null,\n                        \"factorId\": null,\n                        \"parameters\": [\n                            {\n                                \"on\": null,\n                                \"kind\": \"topic\",\n                                \"type\": null,\n                                \"value\": null,\n                                \"topicId\": \"1\",\n                                \"factorId\": \"2\",\n                                \"parameters\": [],\n                                \"conditional\": false\n                            }\n                        ],\n                        \"conditional\": false\n                    }\n                }\n            ],\n            \"filters\": {\n                \"left\": null,\n                \"right\": null,\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"on\": null,\n                            \"kind\": \"topic\",\n                            \"type\": null,\n                            \"value\": null,\n                            \"topicId\": \"1\",\n                            \"factorId\": \"2\",\n                            \"parameters\": [],\n                            \"conditional\": false\n                        },\n                        \"right\": {\n                            \"on\": null,\n                            \"kind\": \"constant\",\n                            \"type\": null,\n                            \"value\": \"2021-01-01\",\n                            \"topicId\": null,\n                            \"factorId\": null,\n                            \"parameters\": [],\n                            \"conditional\": false\n                        },\n                        \"filters\": [],\n                        \"operator\": \"more\",\n                        \"jointType\": null\n                    }\n                ],\n                \"operator\": null,\n                \"jointType\": \"and\"\n            }\n        }\n    },\n    {\n        \"name\": \"Import_Subject2\",\n        \"connectId\": \"{{CONNECT_ID}}\",\n        \"reports\": [\n            \"1\",\n            \"2\"\n        ],\n        \"dataset\": {\n            \"joins\": [],\n            \"columns\": [\n                {\n                    \"alias\": \"alias_a\",\n                    \"columnId\": \"f-1\",\n                    \"parameter\": {\n                        \"on\": null,\n                        \"kind\": \"topic\",\n                        \"type\": null,\n                        \"value\": null,\n                        \"topicId\": \"1\",\n                        \"factorId\": \"1\",\n                        \"parameters\": [],\n                        \"conditional\": false\n                    }\n                },\n                {\n                    \"alias\": \"alias_b\",\n                    \"columnId\": \"f-2\",\n                    \"parameter\": {\n                        \"on\": null,\n                        \"kind\": \"computed\",\n                        \"type\": \"month-of\",\n                        \"value\": null,\n                        \"topicId\": null,\n                        \"factorId\": null,\n                        \"parameters\": [\n                            {\n                                \"on\": null,\n                                \"kind\": \"topic\",\n                                \"type\": null,\n                                \"value\": null,\n                                \"topicId\": \"1\",\n                                \"factorId\": \"2\",\n                                \"parameters\": [],\n                                \"conditional\": false\n                            }\n                        ],\n                        \"conditional\": false\n                    }\n                }\n            ],\n            \"filters\": {\n                \"left\": null,\n                \"right\": null,\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"on\": null,\n                            \"kind\": \"topic\",\n                            \"type\": null,\n                            \"value\": null,\n                            \"topicId\": \"1\",\n                            \"factorId\": \"2\",\n                            \"parameters\": [],\n                            \"conditional\": false\n                        },\n                        \"right\": {\n                            \"on\": null,\n                            \"kind\": \"constant\",\n                            \"type\": null,\n                            \"value\": \"2021-01-01\",\n                            \"topicId\": null,\n                            \"factorId\": null,\n                            \"parameters\": [],\n                            \"conditional\": false\n                        },\n                        \"filters\": [],\n                        \"operator\": \"more\",\n                        \"jointType\": null\n                    }\n                ],\n                \"operator\": null,\n                \"jointType\": \"and\"\n            }\n        }\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/subject/import"
          },
          "response": []
        },
        {
          "name": "REPORT IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44565e76-843a-447c-8600-e8dc417fce54",
                "exec": [
                  "pm.test(\"Import Report\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "6268a82e-4acd-4029-a173-52ad4d9793ab",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"name\": \"Import_Report1\",\n        \"subjectId\": \"{{SUBJECT_ID}}\",\n        \"connectId\": \"{{CONNECT_ID}}\",\n        \"filters\": {},\n        \"funnels\": [],\n        \"indicators\": [],\n        \"dimensions\": [],\n        \"description\": \"test report\",\n        \"rect\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 167.63888549804688,\n            \"height\": 35.55555534362793\n        },\n        \"chart\": {\n            \"type\": \"count\",\n            \"settings\": {\n                \"border\": null,\n                \"backgroundColor\": null,\n                \"colorSeries\": \"regular\"\n            }\n        },\n        \"simulating\": 0,\n        \"simulateData\": [],\n        \"simulateThumbnail\": \"test\"\n    },\n    {\n        \"name\": \"Import_Report2\",\n        \"subjectId\": \"{{SUBJECT_ID}}\",\n        \"connectId\": \"{{CONNECT_ID}}\",\n        \"filters\": {},\n        \"funnels\": [],\n        \"indicators\": [],\n        \"dimensions\": [],\n        \"description\": \"test report\",\n        \"rect\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 167.63888549804688,\n            \"height\": 35.55555534362793\n        },\n        \"chart\": {\n            \"type\": \"count\",\n            \"settings\": {\n                \"border\": null,\n                \"backgroundColor\": null,\n                \"colorSeries\": \"regular\"\n            }\n        },\n        \"simulating\": 0,\n        \"simulateData\": [],\n        \"simulateThumbnail\": \"test\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/report/import"
          },
          "response": []
        },
        {
          "name": "DASHBOARD IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "13f5deee-7c53-4171-9d8f-4370d8813ac8",
                "exec": [
                  "pm.test(\"Import Dashboard\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "413de7d1-13ff-4ada-8b99-c89711a253a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"name\": \"Import_Dashboard1\",\n        \"reports\": [\n            {\n                \"rect\": {\n                    \"x\": 29,\n                    \"y\": 28,\n                    \"width\": 751,\n                    \"height\": 640\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            },\n            {\n                \"rect\": {\n                    \"x\": 799,\n                    \"y\": 10,\n                    \"width\": 781,\n                    \"height\": 335\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            },\n            {\n                \"rect\": {\n                    \"x\": 876,\n                    \"y\": 312,\n                    \"width\": 497,\n                    \"height\": 394\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            }\n        ]\n    },\n    {\n        \"name\": \"Import_Dashboard2\",\n        \"reports\": [\n            {\n                \"rect\": {\n                    \"x\": 29,\n                    \"y\": 28,\n                    \"width\": 751,\n                    \"height\": 640\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            },\n            {\n                \"rect\": {\n                    \"x\": 799,\n                    \"y\": 10,\n                    \"width\": 781,\n                    \"height\": 335\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            },\n            {\n                \"rect\": {\n                    \"x\": 876,\n                    \"y\": 312,\n                    \"width\": 497,\n                    \"height\": 394\n                },\n                \"reportId\": \"{{REPORT_ID}}\"\n            }\n        ]\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/dashboard/import"
          },
          "response": []
        },
        {
          "name": "MIX IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6dcb63f8-ae0a-4866-9f67-4373513b2d4c",
                "exec": [
                  "pm.test(\"Import Mix\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "71ab2c5d-01cf-4ca4-a087-cba08b276e17",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"topics\": [\n        {\n            \"topicId\": \"f-1\",\n            \"name\": \"Mix_Distinct_Topic2\",\n            \"description\": \"Test Distinct Topic\",\n            \"type\": \"distinct\",\n            \"kind\": \"business\",\n            \"dataSourceId\": \"948380846342135808\",\n            \"factors\": [\n                {\n                    \"factorId\": \"1\",\n                    \"type\": \"text\",\n                    \"name\": \"propA\",\n                    \"label\": \"propA\"\n                },\n                {\n                    \"factorId\": \"2\",\n                    \"type\": \"text\",\n                    \"name\": \"propB\"\n                }\n            ]\n        }\n    ],\n    \"pipelines\": [],\n    \"spaces\": [],\n    \"connectedSpaces\": [],\n    \"importType\": \"force-new\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/import"
          },
          "response": []
        }
      ],
      "id": "075340f7-37d1-4e97-95a4-0e6fd4bb0d58"
    },
    {
      "name": "REACTOR",
      "item": [
        {
          "name": "SIMPLE",
          "item": [
            {
              "name": "LOGIN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1d8b7f04-30a8-40bc-9e98-c9ebd30fc717",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('superadmin');",
                      "    pm.expect(data.tenantId).to.eql('-1');",
                      "    pm.environment.set('SUPER_ADMIN_JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0815a1f1-7240-4e21-91ed-a45b771f2189",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-super",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "change-me",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "CREATE DATASOURCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f29f51de-fb1f-4721-ba05-b561426c2fe3",
                    "exec": [
                      "pm.test('Datasource created', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.environment.set('SIMPLE_DATA_SOURCE_ID', data.dataSourceId)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c01dbb4c-7635-43e2-b9dd-0a8aab3382ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"dataSourceCode\": \"TEST-DATASOURCE\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"localhost\",\n    \"port\": \"3306\",\n    \"username\": \"watchmen\",\n    \"password\": \"watchmen\",\n    \"name\": \"watchmen\",\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/datasource"
              },
              "response": []
            },
            {
              "name": "LOGIN - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e49a9bbb-b13f-4dd0-8392-2a5189ccb43b",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('ADMIN_JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "bc7cda35-dad5-4edc-830f-9ecae12b96d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "CREATE TOPIC",
              "id": "f0930857-d18f-44b8-8d58-3589083e8208",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{SIMPLE_DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "INSERT RAW",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d2a11f7-def3-4a1a-bac2-b7ba993ecf4f",
                    "exec": [
                      "pm.test('Insert Raw Successfully', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.internalDataId).to.not.be.null;",
                      "    pm.environment.set('INTERNAL_DATA_ID', data.internalDataId)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "e3c98e82-2f1b-48ee-adb2-c87adf7626bc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"Test_Topic\",\n    \"triggerType\": \"insert\",\n    \"data\": {\n        \"propA\": 1,\n        \"propB\": 2\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            },
            {
              "name": "UPDATE RAW",
              "id": "4f090d72-9db9-45ab-afb6-46d494a434d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"Test_Topic\",\n    \"triggerType\": \"merge\",\n    \"data\": {\n        \"id_\": \"{{INTERNAL_DATA_ID}}\",\n        \"propA\": 3,\n        \"propB\": 4,\n        \"propC\": {\n            \"propD\": \"x\",\n            \"propE\": \"y\",\n            \"propF\": [\n                {\"propG\": true},\n                {\"propG\": false}\n            ]\n        },\n        \"propD\": {\n            \"propE\": {\n                \"propD\": {\n                    \"propE\": 1,\n                    \"propD\": {\n                        \"propE\": 2\n                    }\n                }\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            },
            {
              "name": "TRUNCATE TOPIC",
              "id": "fef14d48-d94f-481c-8878-b617353f8ae1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name=test_topic",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "data",
                    "truncate"
                  ],
                  "query": [
                    {
                      "key": "topic_name",
                      "value": "test_topic",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "f69ec778-cfd0-4bfc-a55d-34f9202dd099"
        }
      ],
      "id": "b4f1a636-e9ca-4463-a51c-53c4e2be3949"
    },
    {
      "name": "PIPELINE EXECUTION",
      "item": [
        {
          "name": "ACTION",
          "item": [
            {
              "name": "PRE - SCRIPT",
              "item": [
                {
                  "name": "LOGIN - SUPER ADMIN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "82b406f5-4460-4a17-b6e4-b44a8b8dc91c",
                        "exec": [
                          "pm.test(\"Super Admin Login Access Token\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('SUPER_ADMIN_JWT_TOKEN', data.accessToken)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "7220c996-38c5-4ac6-b6c6-f15cbf2f3e8f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "username",
                          "value": "imma-super",
                          "type": "text"
                        },
                        {
                          "key": "password",
                          "value": "change-me",
                          "type": "text"
                        }
                      ]
                    },
                    "url": "{{URL_PREFIX}}/login"
                  },
                  "response": []
                },
                {
                  "name": "CREATE DATASOURCE",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "156de6c9-1447-4e84-8dfd-2472d1272e78",
                        "exec": [
                          "pm.test('Datasource created', () => {",
                          "    const data = pm.response.json();",
                          "    pm.expect(data.dataSourceId).to.not.be.null;",
                          "    pm.environment.set('DATA_SOURCE_ID', data.dataSourceId)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e253d0a1-8059-4b6f-af53-3110f6da4bf7",
                        "exec": [
                          "pm.environment.set('DATABASE_PORT', 3309)",
                          "pm.environment.set('DATABASE_USERNAME', \"admin\")",
                          "pm.environment.set('DATABASE_PASSWORD', \"admin\")",
                          "pm.environment.set('DATABASE_SCHEMA', \"new_watchmen\")"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "e2d8fb35-7c97-402c-a2e2-7b3ed682d1ea",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"dataSourceCode\": \"Test-Datasource\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"localhost\",\n    \"port\": \"{{DATABASE_PORT}}\",\n    \"username\": \"{{DATABASE_USERNAME}}\",\n    \"password\": \"{{DATABASE_PASSWORD}}\",\n    \"name\": \"{{DATABASE_SCHEMA}}\",\n    \"tenantId\": \"1\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/datasource"
                  },
                  "response": []
                },
                {
                  "name": "LOGIN - ADMIN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9bd95beb-abea-4175-ab8a-10451188246d",
                        "exec": [
                          "pm.test(\"Admin Login Access Token\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9fa606df-1b36-448b-8ac1-95e2a0af5dd9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "username",
                          "value": "imma-admin",
                          "type": "text"
                        },
                        {
                          "key": "password",
                          "value": "1234abcd",
                          "type": "text"
                        }
                      ]
                    },
                    "url": "{{URL_PREFIX}}/login"
                  },
                  "response": []
                },
                {
                  "name": "CREATE RAW TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dbaf1799-86a1-42ff-b644-d4c99eba4557",
                        "exec": [
                          "pm.test(\"Create Raw Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('RAW_TOPIC_ID', data.topicId)",
                          "    pm.environment.set('RAW_TOPIC_NAME', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "f9151dc9-399e-4e87-b2e6-9b6696ec4e1a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8009976d-cfbf-47f3-9d2f-6e34143eb79d",
                        "exec": [
                          "pm.test(\"Create Distinct Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('TOPIC_ID', data.topicId)",
                          "    pm.environment.set('TOPIC_NAME', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "011a69b2-10f2-4b2d-a818-e73c6544ada3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE PIPELINE MONITOR LOG TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e391d1c9-f2a6-4ed5-99ce-de6a55333321",
                        "exec": [
                          "pm.test(\"Create Pipeline Monitor Log Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('MONITOR_TOPIC_ID', data.topicId)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "82380880-6a74-4de4-945c-a1dd358b2833",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"raw_pipeline_monitor_log\",\n    \"type\": \"raw\",\n    \"kind\": \"system\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [],\n    \"description\": \"Pipeline Monitor Log Raw Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                }
              ],
              "id": "79b24909-0895-47e2-8733-6c9275f5140b"
            },
            {
              "name": "SYSTEM - ACTION",
              "item": [
                {
                  "name": "ALARM",
                  "item": [
                    {
                      "name": "ALARM",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "70148732-faf0-4dfc-b52c-9e8077289f9c",
                            "exec": [
                              "pm.test(\"Create Pipeline For Alarm\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "00f3ae58-5870-4f04-a80c-d79f9ce00401",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Alarm\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"alarm\",\n                            \"severity\": \"high\",\n                            \"message\": \"Hello world!\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0fc2fef1-38a5-4076-8c02-7086cf4d5b7c",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bee8978b-94d3-46fb-841f-ff76a61c617f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ad554e1a-5f9d-4833-9611-ea342fe4c53e",
                            "exec": [
                              "pm.test(\"Truncate Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f294c84d-a862-417c-a972-3d3a9bbd80f9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "160b33cd-4283-48b6-b5dc-05c29e632f6c",
                            "exec": [
                              "pm.test(\"Truncate Raw Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6d05952d-22f4-427c-8df3-7e0df2ef7d47",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "db443fc8-7c12-403a-a328-ca30b1343cec",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.unset(\"PIPELINE_ID\");",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7dd13b4a-8205-4866-8c25-285588c8e628",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "a9bfad4a-c128-48a2-b2da-6d2bd8b533df"
                },
                {
                  "name": "COPY - TO - MEMORY",
                  "item": [
                    {
                      "name": "UPDATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "032393ed-0879-4829-8b4d-5fc11275432b",
                            "exec": [
                              "pm.test(\"Update Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e191dd45-1068-47d2-9bc6-3e4a982882b1",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"array\", \"name\": \"propList\"},\n        {\"factorId\": \"7\", \"type\": \"text\", \"name\": \"proList.propA\"},\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"proList.propB\"},\n        {\"factorId\": \"9\", \"type\": \"boolean\", \"name\": \"proList.propC\"},\n        {\"factorId\": \"10\", \"type\": \"date\", \"name\": \"proList.propD\"},\n        {\"factorId\": \"11\", \"type\": \"datetime\", \"name\": \"proList.propE\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "COPY TO MEMORY",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b95c2bb4-97d2-47be-aff0-1896450a5c09",
                            "exec": [
                              "pm.test(\"COPY TO MEMORY\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json()",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "5f3dda18-d961-43da-a669-76ac5b155af0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Copy-To-Memory\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"fs-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"fu-1\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"copy-to-memory\",\n                            \"variableName\": \"loop_list\",\n                            \"source\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                \"factorId\": \"6\"\n                            },\n                            \"on\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"10\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"2022-03-23\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"fu-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"loop_list\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propA}\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB}\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propC}\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propD}\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propE}\"\n                                    },\n                                    \"factorId\": \"5\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5e032c13-cd3a-4399-99fc-fe921a511c6d",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7c308eca-2ce0-4ef8-9d02-3633358a8504",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\",\n        \"propList\": [\n            {\n                \"propA\": \"text1\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 102,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            }\n        ]\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f4c0181d-7398-4a26-9898-bdd402750c05",
                            "exec": [
                              "pm.test(\"Truncate Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a6c95688-a9b7-4f6a-8312-0e293f085532",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ce132199-273b-4bac-b5e2-6e53cef5270d",
                            "exec": [
                              "pm.test(\"Truncate Raw Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3366b3ca-cd0b-473b-a9c4-ebf41705bf43",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e565d2b0-a0f8-4642-9f5d-57c3af6e49a1",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.unset(\"PIPELINE_ID\");",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f1689a24-5b4c-4f7a-97d2-83f242195a04",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "9454a669-9f70-45ac-90f1-d21e23e52480"
                },
                {
                  "name": "WRITE - TO - EXTERNAL",
                  "item": [
                    {
                      "name": "EXTERNAL WRITER CREATE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1565a58e-60ee-4c92-815b-441aafad021a",
                            "exec": [
                              "pm.test('Create ExternalWriter', () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set('EXTERNAL_WRITER_ID', data.writerId);",
                              "    pm.environment.set('EXTERNAL_WRITER_CODE', data.writerCode);",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a4bee3d2-98a3-430a-be27-cc8031146641",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"writerCode\": \"Test-External-Writer\",\n    \"type\": \"standard-writer\",\n    \"pat\": \"a-pat\",\n    \"url\": \"mysql://watchmen:watchmen@127.0.0.1:3306/watchmen?charset=utf8\",\n    \"tenantId\": \"1\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/external_writer"
                      },
                      "response": []
                    },
                    {
                      "name": "WRITE TO EXTERNAL",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3890ccd9-1b11-4c23-8f17-b78570b1e062",
                            "exec": [
                              "pm.test(\"Write TO External\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json()",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "089c12d9-a6b3-4bf8-85c1-e8b84d0d15db",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Write To External\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"write-to-external\",\n                            \"eventCode\": \"{{EXTERNAL_WRITER_CODE}}\",\n                            \"externalWriterId\": \"{{EXTERNAL_WRITER_ID}}\" \n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1f7bf74b-bf68-44d5-90f7-ae04b0c39555",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e575d2de-c0d5-40a7-888a-c6e97db8389e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2b68c4ea-78a9-4863-a796-2c37de783700",
                            "exec": [
                              "pm.test(\"Truncate Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "658647a2-2c90-4632-bdd3-6aa432e16405",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d298b19c-fce3-43e5-b5fd-2f13c9e61df0",
                            "exec": [
                              "pm.test(\"Truncate Raw Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d22612fc-922c-49a8-bff0-67924b131f1c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bfc33694-1c38-4417-adaf-1354a8047325",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.unset(\"PIPELINE_ID\");",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8cc53010-272a-450d-bc0b-75a263fcbdfa",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "be0d8b5b-52f8-4b85-8e25-01fc78e5622e"
                }
              ],
              "id": "d88c8027-9c02-40f1-81a2-f9c90c171012"
            },
            {
              "name": "READ - TOPIC - ACTION",
              "item": [
                {
                  "name": "PRE - SCRIPT",
                  "item": [
                    {
                      "name": "CREATE READ TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5ef31e3e-8e61-497a-b2d5-8c2a5ce2976d",
                            "exec": [
                              "pm.test(\"Create Read Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    var data = pm.response.json();",
                              "    pm.environment.set('READ_TOPIC_ID', data.topicId)",
                              "    pm.environment.set('READ_TOPIC_NAME', data.name)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a4050c62-de28-4eb4-83b1-54423586710a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"Test_Read_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\n    ],\n    \"description\": \"Test Read Distinct Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH READ TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7c69c42b-7873-43db-af34-e59fccd7226c",
                            "exec": [
                              "pm.test(\"Patch Read Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "446eae10-2ecd-4c7d-a006-27c636337822",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"propA\": \"text1\",\n    \"propB\": 100,\n    \"propC\": true,\n    \"propD\": \"2022-03-22\",\n    \"propE\": \"2022-03-22 22:39:45\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{READ_TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{READ_TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH READ TOPIC2",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a2885187-2dc4-4a7c-a84b-7435b17fa22e",
                            "exec": [
                              "pm.test(\"Patch Read Topic2\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a0e5ef41-1f44-4728-b0bc-bd395aec228b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"propA\": \"text2\",\n    \"propB\": 200,\n    \"propC\": true,\n    \"propD\": \"2022-03-22\",\n    \"propE\": \"2022-03-22 22:39:45\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{READ_TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{READ_TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "bbe4c170-2521-4dba-b095-4407c1e6e609"
                },
                {
                  "name": "READ - ROW",
                  "item": [
                    {
                      "name": "READ ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "469c904d-a85c-428d-bf4f-d6ce20094bee",
                            "exec": [
                              "pm.test(\"Read Row\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ae94ca80-429b-42b9-8d5d-abbc2f1779ef",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Read Row\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"read-row\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"variableName\": \"loop_list\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"text1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"loop_list\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propA}\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB}\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propC}\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propD}\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propE}\"\n                                    },\n                                    \"factorId\": \"5\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4891fc44-73ea-4311-9885-8554a19bd9db",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "e6c5a5c4-038a-4432-87ea-d51518922b67",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text3\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5128efba-3f74-4795-9e1d-a90f3ac64696",
                            "exec": [
                              "pm.test(\"Truncate Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "ffccd255-20d5-4bf1-b29b-59abf26a9330",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d539f6be-edc8-43f4-a1f7-5e889eba07d8",
                            "exec": [
                              "pm.test(\"Truncate Raw Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "0aa043bf-a7d6-4b4c-bbf1-139b449b657c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b60333-718b-439b-9bf1-1df0b417ed9e",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.unset(\"PIPELINE_ID\");",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b0570eb3-fa7b-42ce-8b9b-14d1d4f65a9e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "b6234c0d-85ba-4ba8-93b4-2aa0a1158fcc"
                },
                {
                  "name": "READ - FACTOR",
                  "item": [
                    {
                      "name": "PATCH TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "fc483b20-0b04-44c2-9738-609d2d100c18",
                            "exec": [
                              "pm.test(\"Patch Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "f56116a5-54ad-4ff6-b218-7359092c74a6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"propA\": \"text\",\n    \"propB\": 100,\n    \"propC\": true,\n    \"propD\": \"2022-03-22\",\n    \"propE\": \"2022-03-22 22:39:45\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "READ FACTOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b84e76d5-fbb0-4108-b388-60cb75e56694",
                            "exec": [
                              "pm.test(\"Read Factor\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "a58bbc54-8738-4aac-920c-76e4608416ec",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Read Factor\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"read-factor\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"factorId\": \"1\",\n                            \"variableName\": \"factor_variable\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                         {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"write-factor\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"factorId\": \"1\",\n                            \"source\": {\n                                \"kind\": \"constant\",\n                                \"value\": \"{factor_variable}\"\n                            },\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "88237bd9-3ad8-47c1-af02-fed669de7f43",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "59346b98-ec62-4481-b2e0-398fa6d65321",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "id": "7cd31b0a-584e-4006-b0a6-da7ecfce7336",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "id": "caf1728c-50a8-441e-97aa-6301de556ed2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "id": "0f7ddc5f-a8ec-40f1-8336-3a882a564141",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "931e3229-7e86-4a11-96a2-7ddd84aca9f0"
                },
                {
                  "name": "EXISTS",
                  "item": [
                    {
                      "name": "EXISTS",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "94a5c974-08c5-4ff6-831a-a829cd110206",
                            "exec": [
                              "pm.test(\"Exists\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "d3f5fd17-825c-44b4-ada7-e88526d4021e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Exists\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"exists\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"variableName\": \"exists_variable\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5b66aabd-1b5f-4a7d-bde3-e19df6296246",
                            "exec": [
                              "pm.test(\"Inert Raw\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "2b793014-af40-4cb9-8814-26f423bc0015",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "id": "ce81ee97-12ec-4bce-a39c-a6ac4a5c4497",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "id": "690d8a76-3398-4725-b719-63825ddbf60c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "id": "062b7446-2ceb-4892-9d75-bc148d5d85b2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "50d46d81-4a5f-4477-bf38-044eb2da2115"
                }
              ],
              "id": "78fff255-c034-448d-b7f1-62b379cf3c24"
            },
            {
              "name": "EXISTS",
              "item": [
                {
                  "name": "EXISTS",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "94a5c974-08c5-4ff6-831a-a829cd110206",
                        "exec": [
                          "pm.test(\"Exists\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "d3f5fd17-825c-44b4-ada7-e88526d4021e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Exists\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"exists\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"variableName\": \"exists_variable\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "INSERT RAW",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5b66aabd-1b5f-4a7d-bde3-e19df6296246",
                        "exec": [
                          "pm.test(\"Inert Raw\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2b793014-af40-4cb9-8814-26f423bc0015",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE TOPIC",
                  "id": "ce81ee97-12ec-4bce-a39c-a6ac4a5c4497",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE RAW TOPIC",
                  "id": "690d8a76-3398-4725-b719-63825ddbf60c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{RAW_TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "DELETE PIPELINE",
                  "id": "062b7446-2ceb-4892-9d75-bc148d5d85b2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "pipeline"
                      ],
                      "query": [
                        {
                          "key": "pipeline_id",
                          "value": "{{PIPELINE_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "50d46d81-4a5f-4477-bf38-044eb2da2115"
            },
            {
              "name": "READ - ROWS",
              "item": [
                {
                  "name": "READ ROWS",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ef6559bb-2f9d-4a00-8d91-9d59eb1b15cc",
                        "exec": [
                          "pm.test(\"Read Row\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "fcf9c88a-5a1a-4d24-b29e-1b37045eb257",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Read Rows\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"read-rows\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"variableName\": \"loop_list\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"loop_list\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propA}\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB}\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propC}\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propD}\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propE}\"\n                                    },\n                                    \"factorId\": \"5\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "INSERT ROW",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "983b6ad3-5acf-4265-9dee-332e9b0a17b4",
                        "exec": [
                          "pm.test(\"Inert Raw\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "cbc5a211-b892-4f72-a2ec-59996f34c31b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text3\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE TOPIC",
                  "id": "40681fdc-8fee-4c4d-8db8-25a1d3160b94",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE RAW TOPIC",
                  "id": "76f928f3-eb3e-4925-a88a-2b20d9fbceee",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{RAW_TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "DELETE PIPELINE",
                  "id": "e301da0f-38be-4b26-a190-1cd231361072",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "pipeline"
                      ],
                      "query": [
                        {
                          "key": "pipeline_id",
                          "value": "{{PIPELINE_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "89572f62-7c88-48f3-828e-060cf8855a2e"
            },
            {
              "name": "READ - FACTORS",
              "item": [
                {
                  "name": "READ FACTORS",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9a482bdd-bb0d-4823-a1a2-4d50ec8f6f67",
                        "exec": [
                          "pm.test(\"Read Factors\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "6efda758-1452-435e-9ee7-0c6f1cb54133",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Read Factors\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"read-factors\",\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                            \"factorId\": \"1\",\n                            \"variableName\": \"factor_variable\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"factor_variable\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"write-factor\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"factorId\": \"2\",\n                            \"source\": {\n                                \"kind\": \"constant\",\n                                \"value\": \"888\"\n                            },\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"case-then\",\n                                            \"parameters\": [\n                                                {\n                                                    \"on\": {\n                                                        \"jointType\": \"and\",\n                                                        \"filters\": [\n                                                            {\n                                                                \"left\": {\n                                                                    \"kind\": \"topic\",\n                                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                                    \"factorId\": \"1\"\n                                                                },\n                                                                \"operator\": \"equals\",\n                                                                \"right\": {\n                                                                    \"kind\": \"constant\",\n                                                                    \"value\": \"{factor_variable}\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    },\n                                                    \"conditional\": true,\n                                                    \"kind\": \"constant\",\n                                                    \"value\": \"test\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"test\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "INSERT ROW",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8103a4ca-aff4-4aed-b1bc-8a4ce6e29a6d",
                        "exec": [
                          "pm.test(\"Inert Raw\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "330e9450-0418-4f22-9cd2-945b014a6c31",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text3\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE TOPIC",
                  "id": "a0f814df-44f9-4c20-8d9e-f83c6b375598",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE RAW TOPIC",
                  "id": "68fe1c55-a427-4173-99f1-dd6fee10ef32",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{RAW_TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "DELETE PIPELINE",
                  "id": "c7bdee35-17bd-4e37-bfe8-c3b21a2f18ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "pipeline"
                      ],
                      "query": [
                        {
                          "key": "pipeline_id",
                          "value": "{{PIPELINE_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "e5a31610-54da-4044-8d48-ea1c74343614"
            },
            {
              "name": "INSERT - OR -  MERGE",
              "item": [
                {
                  "name": "INSERT-OR-MERGE",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4ed2bee7-7144-4078-879e-e069bfe3a9c2",
                        "exec": [
                          "pm.test(\"Create Pipeline For Insert Or Merge\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "ac159711-dc02-463a-8239-a5219ffdc95f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Insert Or Merge Row\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"insert-or-merge-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"1\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"3\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"4\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"5\"\n                                    },\n                                    \"factorId\": \"5\"\n                                }\n                            ],\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"2\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"2\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "INSERT RAW",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9e2726d-6c59-4f4d-965f-146d3332afde",
                        "exec": [
                          "pm.test(\"Insert Raw\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "ecf340c8-55b9-4860-938e-a3394d1e03cf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f6a713e0-dfad-4a42-a18e-313cfd4bf30d",
                        "exec": [
                          "pm.test(\"Truncate Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "10c3f198-d8d6-44fe-a475-4ff28d0223af",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "TRUNCATE RAW TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5edcf26f-153c-4d56-854b-6ebfddbd741b",
                        "exec": [
                          "pm.test(\"Truncate Raw Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2163ad3b-2ad5-419b-8181-49b1d6cbd595",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{RAW_TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "DELETE PIPELINE",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ea05e8d2-8bc0-4343-ba7f-28f3f7ac777a",
                        "exec": [
                          "pm.test('Delete Pipeline', () => {",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.unset(\"PIPELINE_ID\");",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "4cbbb2d5-a96c-408f-9701-b7b340301a27",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "pipeline"
                      ],
                      "query": [
                        {
                          "key": "pipeline_id",
                          "value": "{{PIPELINE_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "f81b5a4f-15e8-4700-ab8f-7610b1b8d020"
            },
            {
              "name": "WRITE - TOPIC - ACTION",
              "item": [
                {
                  "name": "MERGE - ROW",
                  "item": [
                    {
                      "name": "PATCH TOPIC",
                      "id": "22aa0618-9650-40a5-9258-beadbbd7b432",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-22\",\r\n    \"propE\": \"2022-03-22 22:39:45\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "MERGE ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1e12dc55-0a58-4459-8aac-0e12e5793ebd",
                            "exec": [
                              "pm.test(\"Merge Row\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    const data = pm.response.json();\r",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "7f28d14a-2451-4137-8bbd-9cdf8600dba8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Merge Row\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"merge-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"factorId\": \"2\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"1\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"2\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"3\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"4\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"5\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                }\r\n                            ],\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                            \"factorId\": \"3\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                                            \"factorId\": \"3\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "id": "90a19af5-7ff8-4b20-8eb3-e1c594093b56",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text2\",\r\n        \"propB\": 200,\r\n        \"propC\": false,\r\n        \"propD\": \"2022-04-22\",\r\n        \"propE\": \"2022-04-22 22:39:45\"\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "id": "e2c97bac-9f2b-46e5-8645-0401c43ac297",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "id": "aa2b56df-a3d6-419f-837f-9c50a6f182a8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "id": "bb37e391-76ac-4555-83b0-cf8faf0dbb21",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "0a06de62-86db-4491-87b5-ab63bc4bf308"
                },
                {
                  "name": "INSERT - ROW",
                  "item": [
                    {
                      "name": "INSERT ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "015afde6-4be9-43a8-8372-3d8faf527e0b",
                            "exec": [
                              "pm.test(\"Insert Row\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    const data = pm.response.json();\r",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "07228eaa-1803-4f65-895f-3bd1bac5e5ff",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Insert Row\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.2\",\r\n                    \"loopVariableName\": \"loop_list\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"fa-1\",\r\n                            \"type\": \"insert-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"1\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"2\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"3\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"4\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"5\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f06c7f3c-4fe4-47f1-81da-7d2bfb1725fc",
                            "exec": [
                              "pm.test(\"Insert Raw\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6d5cb178-012a-417c-bc97-711b5c748208",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text\",\r\n        \"propB\": 100,\r\n        \"propC\": true,\r\n        \"propD\": \"2022-03-22\",\r\n        \"propE\": \"2022-03-22 22:39:45\"\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "id": "56672f70-3d12-4307-b3b2-ba3797ca383d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "id": "90e034da-b4b1-489c-84af-7564d5363dbf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "id": "14c3eba7-0c91-4220-8138-1d650cb08f4e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "ec177838-0bc9-422e-bd51-fcfbf09d24b8"
                },
                {
                  "name": "WRITE - FACTOR",
                  "item": [
                    {
                      "name": "PATCH TOPIC",
                      "id": "f3cfcb04-ea74-4c26-b40c-c15ba9933c5a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-01\",\r\n    \"propE\": \"2022-03-01 22:22:22\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "WRITE FACTOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ede95c3e-c1ec-4786-bf40-a6ca4e384530",
                            "exec": [
                              "pm.test(\"Write Factor\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "58ead5ac-6ce8-4c60-a8f6-c2eaa30b9754",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Write Factor\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"write-factor\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"factorId\": \"2\",\n                            \"source\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                \"factorId\": \"2\"\n                            },\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"3\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0cac7b40-3d3a-4f6d-8bb0-e7535c7af45f",
                            "exec": [
                              "pm.test(\"Insert Raw\", () => {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "dd026542-8ad2-41dd-9d2e-16db47ffb805",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text2\",\n        \"propB\": 200,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE TOPIC",
                      "id": "e91723c5-24a0-4456-8ab0-d32b95aa5aaf",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "TRUNCATE RAW TOPIC",
                      "id": "2b3543da-dc5a-4fe0-9aff-0b876db18577",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{RAW_TOPIC_NAME}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "truncate"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{RAW_TOPIC_NAME}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4b861e89-3330-428d-abb9-0b8813cfbdda",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    pm.environment.unset(\"PIPELINE_ID\");\r",
                              "})\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "50130399-87c2-4308-8cce-f3b86dd82a64",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "372da162-d10a-45ea-b796-1d8fc2a88b95"
                }
              ],
              "id": "2a3ab96c-edbf-4460-818b-9430b336e307"
            },
            {
              "name": "POST - SCRIPT",
              "item": [
                {
                  "name": "TRUNCATE  READ TOPIC",
                  "id": "d803f383-e22e-4784-b5cc-eb8db1954b9c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name={{READ_TOPIC_NAME}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "truncate"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{READ_TOPIC_NAME}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "c8b71dcf-20bd-4ece-82de-15b88f959ad8"
            },
            {
              "name": "DELETE  - TOPIC - ACTION",
              "item": [
                {
                  "name": "DELETE ROW",
                  "item": [
                    {
                      "name": "PATCH TOPIC",
                      "id": "839d6280-6575-4059-b632-684dc6d79c33",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text1\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-01\",\r\n    \"propE\": \"2022-03-01 22:22:22\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH TOPIC",
                      "id": "a92493c4-1972-4ccf-9f9c-d2d0422eba30",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text2\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-01\",\r\n    \"propE\": \"2022-03-01 22:22:22\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE ROW",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "0c8bd1dc-3bb5-4ed4-ac3b-9fe94cc4d464",
                            "exec": [
                              "pm.test(\"Delete Row\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId)\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "b59eeb57-e175-4086-a0af-3ad9317afc3e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Delete Row\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"delete-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                                            \"factorId\": \"1\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"text1\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "id": "eaeb00a2-5606-495d-a9ff-381da5126192",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text1\",\r\n        \"propB\": 200,\r\n        \"propC\": true,\r\n        \"propD\": \"2022-03-22\",\r\n        \"propE\": \"2022-03-22 22:39:45\"\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "393851bd-30e4-477c-bddd-07c6016e066e"
                },
                {
                  "name": "DELETE ROWS",
                  "item": [
                    {
                      "name": "PATCH TOPIC",
                      "id": "a142d492-e450-4a98-8eac-2b3accf97f6b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text1\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-01\",\r\n    \"propE\": \"2022-03-01 22:22:22\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH TOPIC",
                      "id": "1ab1ed46-5f60-47ca-b050-e00685b3799f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text2\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-01\",\r\n    \"propE\": \"2022-03-01 22:22:22\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE ROWS",
                      "id": "6f776e78-beff-479d-b335-9cdd4067a84b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Delete Rows\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"delete-rows\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"by\": {\r\n                                \"jointType\": \"or\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                                            \"factorId\": \"1\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"text1\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                                            \"factorId\": \"1\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"text2\"\r\n                                        }\r\n                                    }\r\n\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "id": "566b1b9c-38ec-4a6c-8a2a-c275dba1f5d9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text1\",\r\n        \"propB\": 200,\r\n        \"propC\": true,\r\n        \"propD\": \"2022-03-22\",\r\n        \"propE\": \"2022-03-22 22:39:45\"\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "dc74edab-871c-47a0-85bc-7e2b4a781dd2"
                }
              ],
              "id": "fec06304-21eb-4f58-961c-9073f66be5f5"
            }
          ],
          "id": "e913262a-d074-4454-a78f-f0ad5bbb8616"
        },
        {
          "name": "FUNCTION",
          "item": [
            {
              "name": "PRE SCRIPT",
              "item": [
                {
                  "name": "LOGIN - SUPER ADMIN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6be74378-04aa-4c2d-b1c4-e14fd933d347",
                        "exec": [
                          "pm.test(\"Super Admin Login Access Token\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('SUPER_ADMIN_JWT_TOKEN', data.accessToken)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "3e6da7e8-5498-41fb-b127-7863b70b07a2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "username",
                          "value": "imma-super",
                          "type": "text"
                        },
                        {
                          "key": "password",
                          "value": "change-me",
                          "type": "text"
                        }
                      ]
                    },
                    "url": "{{URL_PREFIX}}/login"
                  },
                  "response": []
                },
                {
                  "name": "CREATE DATASOURCE",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "cec0ea3e-e58a-43b3-a518-122eaad35d8d",
                        "exec": [
                          "pm.environment.set('DATABASE_PORT', 3309)",
                          "pm.environment.set('DATABASE_USERNAME', \"admin\")",
                          "pm.environment.set('DATABASE_PASSWORD', \"admin\")",
                          "pm.environment.set('DATABASE_SCHEMA', \"new_watchmen\")"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4c9c27a2-bce4-4fc3-9616-7fa1c270cd4b",
                        "exec": [
                          "pm.test('Datasource created', () => {",
                          "    const data = pm.response.json();",
                          "    pm.expect(data.dataSourceId).to.not.be.null;",
                          "    pm.environment.set('DATA_SOURCE_ID', data.dataSourceId)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "44e6b5ad-db09-436c-b3b8-39671cd09ca4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"dataSourceCode\": \"Test-Datasource\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"localhost\",\n    \"port\": \"{{DATABASE_PORT}}\",\n    \"username\": \"{{DATABASE_USERNAME}}\",\n    \"password\": \"{{DATABASE_PASSWORD}}\",\n    \"name\": \"{{DATABASE_SCHEMA}}\",\n    \"tenantId\": \"1\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/datasource"
                  },
                  "response": []
                },
                {
                  "name": "LOGIN ADMIN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9592d894-b7a3-4ec6-b8b1-a01924f65736",
                        "exec": [
                          "pm.test(\"Admin Login Access Token\", function () {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                          "})",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "dec9bc99-d893-4f6e-86b1-dc56e2811b52",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "username",
                          "value": "imma-admin",
                          "type": "text"
                        },
                        {
                          "key": "password",
                          "value": "1234abcd",
                          "type": "text"
                        }
                      ]
                    },
                    "url": "{{URL_PREFIX}}/login"
                  },
                  "response": []
                },
                {
                  "name": "CREATE RAW TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e53d3808-125b-457a-80d6-93befb2cbe5a",
                        "exec": [
                          "pm.test(\"Create Raw Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('RAW_TOPIC_ID', data.topicId)",
                          "    pm.environment.set('RAW_TOPIC_NAME', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "21ab05c9-c075-4964-8352-8bd985e311ef",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"number\", \"name\": \"propF\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE PIPELINE MONITOR LOG TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e3f11e36-d807-41ec-bbbb-af1d45e4fea4",
                        "exec": [
                          "pm.test(\"Create Monitor Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('MONITOR_TOPIC_ID', data.topicId)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "a3a90146-a1c0-4f40-a5b3-7a63e43f50d0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{MONITOR_TOPIC_ID}}\",\n    \"name\": \"raw_pipeline_monitor_log\",\n    \"type\": \"raw\",\n    \"kind\": \"system\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [],\n    \"description\": \"Pipeline Monitor Log Raw Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                }
              ],
              "id": "c268b19a-31fe-4d3b-aede-4637e7b6ea07"
            },
            {
              "name": "MATHEMATICAL OPERATION",
              "item": [
                {
                  "name": "MEMORY",
                  "item": [
                    {
                      "name": "CREATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3c969b05-c4ad-4b72-b431-f53d018015d0",
                            "exec": [
                              "pm.test(\"Create Distinct Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    var data = pm.response.json();",
                              "    pm.environment.set('TOPIC_ID', data.topicId)",
                              "    pm.environment.set('TOPIC_NAME', data.name)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "4c3c6c68-7161-44f9-a456-84d54c671b5e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"number\", \"name\": \"propF\"},\n        {\"factorId\": \"7\", \"type\": \"number\", \"name\": \"propG\"},\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"propH\"},\n        {\"factorId\": \"9\", \"type\": \"number\", \"name\": \"propI\"},\n        {\"factorId\": \"10\", \"type\": \"number\", \"name\": \"propJ\"},\n        {\"factorId\": \"11\", \"type\": \"number\", \"name\": \"propK\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "MATH FUNCTION",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "580761cd-2c0a-42cb-831b-6b46d3098439",
                            "exec": [
                              "pm.test(\"Create Pipeline For Function\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "9c922650-8ee4-4b93-aaea-9eefc385e56c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Insert Or Merge Row\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"insert-or-merge-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"1\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"3\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"4\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"5\"\n                                    },\n                                    \"factorId\": \"5\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"6\"\n                                    },\n                                    \"factorId\": \"6\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"add\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"2\"\n                                            },\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"6\"\n                                            }\n                                        ]\n                                    },\n                                    \"factorId\": \"7\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"subtract\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"2\"\n                                            },\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"6\"\n                                            }\n                                        ]\n                                    },\n                                    \"factorId\": \"8\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"multiply\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"2\"\n                                            },\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"6\"\n                                            }\n                                        ]\n                                    },\n                                    \"factorId\": \"9\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"divide\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"2\"\n                                            },\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"6\"\n                                            }\n                                        ]\n                                    },\n                                    \"factorId\": \"10\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"computed\",\n                                        \"type\": \"modulus\",\n                                        \"parameters\": [\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"2\"\n                                            },\n                                            {\n                                                \"kind\": \"topic\",\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                                \"factorId\": \"6\"\n                                            }\n                                        ]\n                                    },\n                                    \"factorId\": \"11\"\n                                }\n                            ],\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "id": "c6aa1b03-95a2-4b6d-9e3b-1a503dc74615",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\",\n        \"propF\": 30\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE PIPELINE",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c1b54c97-bcbf-4356-ae27-a2d925e798eb",
                            "exec": [
                              "pm.test('Delete Pipeline', () => {",
                              "    pm.response.to.have.status(200);",
                              "    pm.environment.unset(\"PIPELINE_ID\");",
                              "})",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "3410ffd6-077c-4762-afbe-2f60eb1712de",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "pipeline"
                          ],
                          "query": [
                            {
                              "key": "pipeline_id",
                              "value": "{{PIPELINE_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DELETE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3082943f-cf5b-47a3-85da-127dbc734306",
                            "exec": [
                              "pm.test(\"Delete Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    const topic_id = pm.environment.get(\"TOPIC_ID\");",
                              "    const topic_name = pm.environment.get(\"TOPIC_NAME\");",
                              "    pm.expect(data.topicId).to.equal(topic_id);",
                              "    pm.expect(data.name).to.equal(topic_name);",
                              "    pm.environment.unset(\"TOPIC_ID\");",
                              "    pm.environment.unset(\"TOPIC_NAME\");",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8dc14332-23e5-4f28-b109-9c675dda2e64",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                          }
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic?topic_id={{TOPIC_ID}}",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic"
                          ],
                          "query": [
                            {
                              "key": "topic_id",
                              "value": "{{TOPIC_ID}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "id": "2e2aefc7-fe16-4a29-80a8-ecb024d103c2"
                },
                {
                  "name": "STORAGE",
                  "item": [
                    {
                      "name": "CREATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "79185d34-2ee8-44a4-9f64-e147cc0c5439",
                            "exec": [
                              "pm.test(\"Create Distinct Topic\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    var data = pm.response.json();\r",
                              "    pm.environment.set('TOPIC_ID', data.topicId)\r",
                              "    pm.environment.set('TOPIC_NAME', data.name)\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "35cf4b13-f372-4d94-82c4-ef41235ede73",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{TOPIC_ID}}\",\r\n    \"name\": \"Test_Distinct_Topic\",\r\n    \"type\": \"distinct\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\r\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\r\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\r\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\r\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\r\n        {\"factorId\": \"6\", \"type\": \"number\", \"name\": \"propF\"},\r\n        {\"factorId\": \"7\", \"type\": \"number\", \"name\": \"propG\"},\r\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"propH\"},\r\n        {\"factorId\": \"9\", \"type\": \"number\", \"name\": \"propI\"},\r\n        {\"factorId\": \"10\", \"type\": \"number\", \"name\": \"propJ\"},\r\n        {\"factorId\": \"11\", \"type\": \"number\", \"name\": \"propK\"}\r\n    ],\r\n    \"description\": \"Test Distinct Topic\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH TOPIC",
                      "id": "96e1377c-5345-476a-bed9-02784980f343",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"propA\": \"text\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-22\",\r\n    \"propE\": \"2022-03-22 22:39:45\",\r\n    \"propF\": 30,\r\n    \"propG\": 130,\r\n    \"propH\": 70,\r\n    \"propI\": 3000,\r\n    \"propJ\": 3.333333,\r\n    \"propK\": 10\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "MATH FUNCATION",
                      "id": "e4728b01-79fb-483f-93dd-dcc1ed62debb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Read Row\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"read-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"variableName\": \"test_record\",\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"computed\",\r\n                                            \"type\": \"add\",\r\n                                            \"parameters\": [\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"2\"\r\n                                                },\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"6\"\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"130\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"computed\",\r\n                                            \"type\": \"subtract\",\r\n                                            \"parameters\": [\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"2\"\r\n                                                },\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"6\"\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"70\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"computed\",\r\n                                            \"type\": \"multiply\",\r\n                                            \"parameters\": [\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"2\"\r\n                                                },\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"6\"\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"3000\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"computed\",\r\n                                            \"type\": \"divide\",\r\n                                            \"parameters\": [\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"2\"\r\n                                                },\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"6\"\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"3.333333\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"computed\",\r\n                                            \"type\": \"modulus\",\r\n                                            \"parameters\": [\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"2\"\r\n                                                },\r\n                                                {\r\n                                                    \"kind\": \"topic\",\r\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                                                    \"factorId\": \"6\"\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"10\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.2\",\r\n                    \"loopVariableName\": \"loop_list\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"fa-1\",\r\n                            \"type\": \"insert-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propA}\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propB}\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propC}\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propD}\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propE}\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{test_record.propF}\"\r\n                                    },\r\n                                    \"factorId\": \"6\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "IMPORT RAW",
                      "id": "4c6b922b-81c4-440e-ab84-f19e5c159be8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text1\",\r\n        \"propB\": 200,\r\n        \"propC\": false,\r\n        \"propD\": \"2022-03-24\",\r\n        \"propE\": \"2022-03-24 22:39:45\",\r\n        \"propF\": 30\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "00378e14-cc09-44c7-a350-8ac92a81cb7f"
                }
              ],
              "id": "0a28ab13-186d-48d8-b830-fc9d5d6a5e98"
            },
            {
              "name": "DATE FUNCTION",
              "item": [
                {
                  "name": "MEMORY",
                  "item": [
                    {
                      "name": "CREATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a1941bed-8e57-4ca1-908e-4c51d382615c",
                            "exec": [
                              "pm.test(\"Create Distinct Topic\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    var data = pm.response.json();\r",
                              "    pm.environment.set('TOPIC_ID', data.topicId)\r",
                              "    pm.environment.set('TOPIC_NAME', data.name)\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "6e045f2a-0d58-431e-b129-b3b7e9ccabcb",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{TOPIC_ID}}\",\r\n    \"name\": \"Test_Distinct_Topic\",\r\n    \"type\": \"distinct\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\r\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\r\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\r\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\r\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\r\n        {\"factorId\": \"6\", \"type\": \"number\", \"name\": \"propF\"},\r\n        {\"factorId\": \"7\", \"type\": \"year\", \"name\": \"propG\"},\r\n        {\"factorId\": \"8\", \"type\": \"half-year\", \"name\": \"propH\"},\r\n        {\"factorId\": \"9\", \"type\": \"quarter\", \"name\": \"propI\"},\r\n        {\"factorId\": \"10\", \"type\": \"month\", \"name\": \"propJ\"},\r\n        {\"factorId\": \"11\", \"type\": \"week-of-year\", \"name\": \"propK\"},\r\n        {\"factorId\": \"12\", \"type\": \"week-of-month\", \"name\": \"propL\"},\r\n        {\"factorId\": \"13\", \"type\": \"day-of-month\", \"name\": \"propM\"},\r\n        {\"factorId\": \"14\", \"type\": \"day-of-week\", \"name\": \"propN\"}\r\n    ],\r\n    \"description\": \"Test Distinct Topic\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "DATE FUNCTION",
                      "id": "56d85332-44b7-4037-95ae-f51a9f7b36ff",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Insert Or Merge Row\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"insert-or-merge-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"1\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"2\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"3\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"4\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"5\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"6\"\r\n                                    },\r\n                                    \"factorId\": \"6\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"year-of\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"7\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"half-year-of\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"8\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"quarter-of\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"9\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"month-of\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"10\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"week-of-year\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"11\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"week-of-month\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"12\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"day-of-month\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"13\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"computed\",\r\n                                        \"type\": \"day-of-week\",\r\n                                        \"parameters\": [\r\n                                            {\r\n                                                \"kind\": \"topic\",\r\n                                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                                \"factorId\": \"4\"\r\n                                            }\r\n                                        ]\r\n                                    },\r\n                                    \"factorId\": \"14\"\r\n                                }\r\n                            ],\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                            \"factorId\": \"1\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                                            \"factorId\": \"1\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "INSERT RAW",
                      "id": "cebc9a7f-a1f6-43cb-87a6-f639208c6438",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text\",\r\n        \"propB\": 100,\r\n        \"propC\": true,\r\n        \"propD\": \"2022-03-22\",\r\n        \"propE\": \"2022-03-22 22:39:45\",\r\n        \"propF\": 30\r\n    }\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "bd695f90-6f98-40a0-9428-0a4cc5f8754d"
                },
                {
                  "name": "STORAGE",
                  "item": [
                    {
                      "name": "CREATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "16e67e58-5d19-428d-8c21-bba8dee7db13",
                            "exec": [
                              "pm.test(\"Create Distinct Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    var data = pm.response.json();",
                              "    pm.environment.set('TOPIC_ID', data.topicId)",
                              "    pm.environment.set('TOPIC_NAME', data.name)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "01a5d3c5-f6c2-4a1e-a11b-8967e3c312f2",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"number\", \"name\": \"propF\"},\n        {\"factorId\": \"7\", \"type\": \"year\", \"name\": \"propG\"},\n        {\"factorId\": \"8\", \"type\": \"half-year\", \"name\": \"propH\"},\n        {\"factorId\": \"9\", \"type\": \"quarter\", \"name\": \"propI\"},\n        {\"factorId\": \"10\", \"type\": \"month\", \"name\": \"propJ\"},\n        {\"factorId\": \"11\", \"type\": \"week-of-year\", \"name\": \"propK\"},\n        {\"factorId\": \"12\", \"type\": \"week-of-month\", \"name\": \"propL\"},\n        {\"factorId\": \"13\", \"type\": \"day-of-month\", \"name\": \"propM\"},\n        {\"factorId\": \"14\", \"type\": \"day-of-week\", \"name\": \"propN\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "PATCH TOPIC",
                      "id": "47ad5a37-02ac-428a-bd5d-ee394791d8d3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"propA\": \"text2\",\n    \"propB\": 100,\n    \"propC\": true,\n    \"propD\": \"2022-03-22\",\n    \"propE\": \"2022-03-22 22:39:45\",\n    \"propF\": 30,\n    \"propG\": 2022,\n    \"propH\": 1,\n    \"propI\": 1,\n    \"propJ\": 3,\n    \"propK\": 12,\n    \"propL\": 3,\n    \"propM\": 22,\n    \"propN\": 3\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                          "host": [
                            "{{URL_PREFIX}}"
                          ],
                          "path": [
                            "topic",
                            "data",
                            "patch"
                          ],
                          "query": [
                            {
                              "key": "topic_name",
                              "value": "{{TOPIC_NAME}}"
                            },
                            {
                              "key": "patch_type",
                              "value": "insert"
                            },
                            {
                              "key": "tenant_id",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "DATE FUNCATION",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "977ea918-2dec-4417-8706-eea659628b2a",
                            "exec": [
                              "pm.test(\"Create Pipeline For Function\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    const data = pm.response.json();",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "835a5db2-1866-44ca-9248-7d96a4237553",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Storage Date Function\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"read-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"variableName\": \"loop_list\",\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"year-of\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"2022\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"half-year-of\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"quarter-of\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"1\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"month-of\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"3\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"week-of-year\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"12\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"week-of-month\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"3\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"day-of-month\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"22\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"computed\",\n                                            \"type\": \"day-of-week\",\n                                            \"parameters\": [\n                                                {\n                                                    \"kind\": \"topic\",\n                                                    \"topicId\": \"{{TOPIC_ID}}\",\n                                                    \"factorId\": \"4\"\n                                                }\n                                            ]\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"14\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"loop_list\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propA}\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB}\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propC}\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propD}\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propE}\"\n                                    },\n                                    \"factorId\": \"5\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propF}\"\n                                    },\n                                    \"factorId\": \"6\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "IMPORT RAW",
                      "id": "f16d37b2-8adb-487c-863b-c0be145fcafa",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\",\n        \"propF\": 30\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "988e6778-7ca1-4f6f-90f2-97d10ea3e435"
                }
              ],
              "id": "8ed3aea6-0e6a-4a40-bfbe-e6022f63b3c2"
            },
            {
              "name": "CONSTANT FUNCTION",
              "item": [
                {
                  "name": "MEMORY",
                  "item": [
                    {
                      "name": "CREATE RAW TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7b56ab00-2a3c-4b27-9ad2-05197751949d",
                            "exec": [
                              "pm.test(\"Create Raw Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    var data = pm.response.json();",
                              "    pm.environment.set('RAW_TOPIC_ID', data.topicId)",
                              "    pm.environment.set('RAW_TOPIC_NAME', data.name)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "8189cec3-48a7-4a0d-ba3f-c2f5d402f010",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"array\", \"name\": \"propList\"},\n        {\"factorId\": \"7\", \"type\": \"text\", \"name\": \"proList.propA\"},\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"proList.propB\"},\n        {\"factorId\": \"9\", \"type\": \"boolean\", \"name\": \"proList.propC\"},\n        {\"factorId\": \"10\", \"type\": \"date\", \"name\": \"proList.propD\"},\n        {\"factorId\": \"11\", \"type\": \"datetime\", \"name\": \"proList.propE\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "CREATE TOPIC",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "50098e86-10b5-4a92-9ba4-afce8265f86a",
                            "exec": [
                              "pm.test(\"Create Distinct Topic\", () => {",
                              "    pm.response.to.have.status(200);",
                              "    var data = pm.response.json();",
                              "    pm.environment.set('TOPIC_ID', data.topicId)",
                              "    pm.environment.set('TOPIC_NAME', data.name)",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "284b66df-89e2-4de7-96d4-f33fecbb48a8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"sequence\", \"name\": \"propSequence\"},\n        {\"factorId\": \"7\", \"type\": \"number\", \"name\": \"propCount\"},\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"propSum\"},\n        {\"factorId\": \"9\", \"type\": \"text\", \"name\": \"propOld\"},\n        {\"factorId\": \"10\", \"type\": \"number\", \"name\": \"propDateDiff\"},\n        {\"factorId\": \"11\", \"type\": \"number\", \"name\": \"propMonthDiff\"},\n        {\"factorId\": \"12\", \"type\": \"number\", \"name\": \"propYearDiff\"},\n        {\"factorId\": \"13\", \"type\": \"text\", \"name\": \"propConcat\"},\n        {\"factorId\": \"14\", \"type\": \"number\", \"name\": \"propLength\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "CONSTANT FUNCTION",
                      "id": "d05728ef-f6fe-4bf5-8613-10838062e41a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Constant Function\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"fu-1\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"copy-to-memory\",\n                            \"variableName\": \"loop_list\",\n                            \"source\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                \"factorId\": \"6\"\n                            },\n                            \"on\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"10\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"constant\",\n                                            \"value\": \"2022-03-23\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"insert-or-merge-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"1\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"3\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"4\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"5\"\n                                    },\n                                    \"factorId\": \"5\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{&nextSeq}\"\n                                    },\n                                    \"factorId\": \"6\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.&count}\"\n                                    },\n                                    \"factorId\": \"7\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB.&sum}\"\n                                    },\n                                    \"factorId\": \"8\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"old\"\n                                    },\n                                    \"factorId\": \"9\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{&dayDiff(&now,propD)}\"\n                                    },\n                                    \"factorId\": \"10\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{&monthDiff(&now,propD)}\"\n                                    },\n                                    \"factorId\": \"11\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{&yearDiff(&now,propD)}\"\n                                    },\n                                    \"factorId\": \"12\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{propA}{propB}\"\n                                    },\n                                    \"factorId\": \"13\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{propB.&length}\"\n                                    },\n                                    \"factorId\": \"14\"\n                                }\n                            ],\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "IMPORT RAW",
                      "id": "4826bd8a-92b0-4ac3-a431-0f8c58f9b2b9",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\",\n        \"propF\": 30,\n        \"propList\": [\n            {\n                \"propA\": \"text1\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 102,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            }\n        ]\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "eea68113-1f82-4d5d-b5d6-6d02b552317b"
                },
                {
                  "name": "STORAGE",
                  "item": [
                    {
                      "name": "CREATE TOPIC",
                      "id": "3e0e672e-cd2e-4b8e-a4eb-211879f93d7d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{TOPIC_ID}}\",\r\n    \"name\": \"Test_Distinct_Topic\",\r\n    \"type\": \"distinct\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\r\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\r\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\r\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\r\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\r\n    ],\r\n    \"description\": \"Test Distinct Topic\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/topic"
                      },
                      "response": []
                    },
                    {
                      "name": "CONSTANT FUNCTION",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "be881cba-27be-4e16-b655-0d540bb39070",
                            "exec": [
                              "pm.test(\"Constant Function\", () => {\r",
                              "    pm.response.to.have.status(200);\r",
                              "    const data = pm.response.json();\r",
                              "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "id": "bb821db6-f878-4197-b115-07fd015ef78d",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Constant Function\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"read-row\",\r\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\r\n                            \"variableName\": \"loop_list\",\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"{&dayDiff(&propD,propD)}\"\r\n                                        },\r\n                                        \"operator\": \"more-equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"1\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"{&monthDiff(2022-04-22,&propD)}\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"1\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"{&yearDiff(&propE,2023-04-22)}\"\r\n                                        },\r\n                                        \"operator\": \"equals\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"-1\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.2\",\r\n                    \"loopVariableName\": \"loop_list\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"fa-1\",\r\n                            \"type\": \"insert-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propA}\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propB}\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propC}\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propD}\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propE}\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline"
                      },
                      "response": []
                    },
                    {
                      "name": "IMPORT RAW",
                      "id": "422b1e64-7c4d-46bd-a3df-92a38b081f86",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{JWT_TOKEN}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-21\",\n        \"propE\": \"2022-03-21 22:39:45\"\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{URL_PREFIX}}/pipeline/data"
                      },
                      "response": []
                    }
                  ],
                  "id": "5984c255-9f65-46ad-bf8c-047533bbbca6"
                }
              ],
              "id": "679888c9-bff2-4e09-b33b-ac487d689181"
            }
          ],
          "id": "c9bb1e9f-e9ec-4cbb-abda-9c9e13e1ac06"
        },
        {
          "name": "OPERATOR",
          "item": [
            {
              "name": "PRE SCRIPT",
              "item": [
                {
                  "name": "CREATE READ TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "74d31f76-7540-4bb1-9861-9a106fbc8386",
                        "exec": [
                          "pm.test(\"Create Read Topic\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "    var data = pm.response.json();\r",
                          "    pm.environment.set('READ_TOPIC_ID', data.topicId)\r",
                          "    pm.environment.set('READ_TOPIC_NAME', data.name)\r",
                          "    pm.environment.set('READ_TOPIC_VERSION', data.version)\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "d666f3b1-f04e-4576-81c0-0d878cb0676f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"topicId\": \"{{READ_TOPIC_ID}}\",\r\n    \"name\": \"Test_Read_Distinct_Topic\",\r\n    \"type\": \"distinct\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\r\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\r\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\r\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\r\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\r\n    ],\r\n    \"description\": \"Test Read Distinct Topic\",\r\n    \"version\": \"{{READ_TOPIC_VERSION}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "PATCH READ TOPIC",
                  "id": "8ff9838a-c45c-475e-9045-bd2c09aeaf51",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"propA\": \"text1\",\r\n    \"propB\": 100,\r\n    \"propC\": true,\r\n    \"propD\": \"2022-03-22\",\r\n    \"propE\": \"2022-03-22 22:39:45\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{URL_PREFIX}}/topic/data/patch?topic_name={{READ_TOPIC_NAME}}&patch_type=insert&tenant_id=1",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "topic",
                        "data",
                        "patch"
                      ],
                      "query": [
                        {
                          "key": "topic_name",
                          "value": "{{READ_TOPIC_NAME}}"
                        },
                        {
                          "key": "patch_type",
                          "value": "insert"
                        },
                        {
                          "key": "tenant_id",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "168d92bd-f8f9-4eb5-ade9-a6bcefdf314b"
            },
            {
              "name": "EQUALS",
              "item": [],
              "id": "357ee8ca-1a51-4c20-a0be-56aad1d7d6c6"
            },
            {
              "name": "NOT EQUALS",
              "item": [],
              "id": "cae5e177-5d06-4ad3-a661-eeb4994c8da8"
            },
            {
              "name": "LESS THAN",
              "item": [],
              "id": "efb64b34-e88d-4d61-b032-58508f61be3d"
            },
            {
              "name": "LESS THAN OR EQUALS",
              "item": [],
              "id": "dd913e1c-f61f-4ac1-8e26-fccd87f225a0"
            },
            {
              "name": "GREATER THAN",
              "item": [
                {
                  "name": "GREATER THAN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a517839a-6f66-4a47-988c-206d2fade99a",
                        "exec": [
                          "pm.test(\"Greater Than\", () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "    const data = pm.response.json();\r",
                          "    pm.environment.set(\"PIPELINE_ID\", data.pipelineId);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "dccccc03-3700-49b6-ae45-b28b79dbc6e7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Greater Than\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.1\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"f-3\",\r\n                            \"type\": \"read-row\",\r\n                            \"topicId\": \"{{READ_TOPIC_ID}}\",\r\n                            \"variableName\": \"loop_list\",\r\n                            \"by\": {\r\n                                \"jointType\": \"and\",\r\n                                \"filters\": [\r\n                                    {\r\n                                        \"left\": {\r\n                                            \"kind\": \"topic\",\r\n                                            \"topicId\": \"{{READ_TOPIC_ID}}\",\r\n                                            \"factorId\": \"4\"\r\n                                        },\r\n                                        \"operator\": \"more\",\r\n                                        \"right\": {\r\n                                            \"kind\": \"constant\",\r\n                                            \"value\": \"2022-03-21\"\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.2\",\r\n                    \"loopVariableName\": \"loop_list\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"fa-1\",\r\n                            \"type\": \"insert-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propA}\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propB}\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propC}\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propD}\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"constant\",\r\n                                        \"value\": \"{loop_list.propE}\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "IMPORT RAW",
                  "id": "14beb1b8-ecbd-4ad1-bdda-3bb14eefbf4d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"propA\": \"text2\",\r\n        \"propB\": 200,\r\n        \"propC\": true,\r\n        \"propD\": \"2022-03-24\",\r\n        \"propE\": \"2022-03-24 22:39:45\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                }
              ],
              "id": "fb8dda05-9629-4725-963c-c4af9546baea"
            },
            {
              "name": "GREATER THAN OR EQUALS",
              "item": [],
              "id": "5033bc73-d5df-4c1a-a63d-59ce5eca288f"
            },
            {
              "name": "IN",
              "item": [],
              "id": "10711cd2-0035-45a1-ba5b-1bc6b5bf7566"
            },
            {
              "name": "NOT_IN",
              "item": [],
              "id": "46a98664-c685-4f81-a918-14c6f9d622f8"
            }
          ],
          "id": "63df678b-d7e8-4b74-84db-b918c2a108ed"
        },
        {
          "name": "AGGREGATE",
          "item": [],
          "id": "d86717ab-d696-473b-baef-ef2e8fae850c"
        },
        {
          "name": "DASK",
          "item": [
            {
              "name": "CREATE RAW TOPIC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56ee65ce-2633-4796-94ea-d8ac634d18f9",
                    "exec": [
                      "pm.test(\"Create Raw Topic\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    var data = pm.response.json();",
                      "    pm.environment.set('RAW_TOPIC_ID', data.topicId)",
                      "    pm.environment.set('RAW_TOPIC_NAME', data.name)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6bc8cf32-c90c-4d39-a8e3-57e6785d8db4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"array\", \"name\": \"propList\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"proList.propA\"},\n        {\"factorId\": \"3\", \"type\": \"number\", \"name\": \"proList.propB\"},\n        {\"factorId\": \"4\", \"type\": \"boolean\", \"name\": \"proList.propC\"},\n        {\"factorId\": \"5\", \"type\": \"date\", \"name\": \"proList.propD\"},\n        {\"factorId\": \"6\", \"type\": \"datetime\", \"name\": \"proList.propE\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "CREATE TOPIC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1910a37a-befd-4006-a10e-90dcf392694d",
                    "exec": [
                      "pm.test(\"Create Distinct Topic\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    var data = pm.response.json();",
                      "    pm.environment.set('TOPIC_ID', data.topicId)",
                      "    pm.environment.set('TOPIC_NAME', data.name)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "cb278eab-1c2c-4fc7-a56e-38ce5677691c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "CREATE AGGREGATE TOPIC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "31c85260-e73b-4f55-8215-c2ae5f2fc250",
                    "exec": [
                      "pm.test(\"Create Aggregate Topic\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    var data = pm.response.json();",
                      "    pm.environment.set('AGGRE_TOPIC_ID', data.topicId)",
                      "    pm.environment.set('AGGRE_TOPIC_NAME', data.name)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "aae9e7ef-828a-46cc-870a-9dad833444bf",
                    "exec": [
                      "pm.environment.set(\"AGGRE_TOPIC_ID\", \"f-1\")"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "43d4fbd3-a46a-446f-a5df-4a39f5ad9479",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{AGGRE_TOPIC_ID}}\",\n    \"name\": \"Test_Aggregate_Topic\",\n    \"type\": \"aggregate\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"3\", \"type\": \"number\", \"name\": \"propCount\"},\n        {\"factorId\": \"4\", \"type\": \"number\", \"name\": \"propSum\"},\n        {\"factorId\": \"5\", \"type\": \"number\", \"name\": \"propAvg\"}\n    ],\n    \"description\": \"Test Distinct Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "CREATE PIPELINE",
              "id": "5911f017-d975-46d3-97f2-725b18a142aa",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Dask\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"fu-1\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"copy-to-memory\",\n                            \"variableName\": \"loop_list\",\n                            \"source\": {\n                                \"kind\": \"topic\",\n                                \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                \"factorId\": \"1\"\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"loopVariableName\": \"loop_list\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propA}\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propB}\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propC}\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propD}\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"constant\",\n                                        \"value\": \"{loop_list.propE}\"\n                                    },\n                                    \"factorId\": \"5\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline"
              },
              "response": []
            },
            {
              "name": "CREATE PIPELINE 2",
              "id": "50aef51f-f023-4976-8d71-ccfccca232d9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test Dask Pipeline2\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-or-merge-row\",\n                            \"topicId\": \"{{AGGRE_TOPIC_ID}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{TOPIC_ID}}\",\n                                        \"factorId\": \"1\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{TOPIC_ID}}\",\n                                        \"factorId\": \"4\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"3\",\n                                    \"arithmetic\": \"count\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"4\",\n                                    \"arithmetic\": \"sum\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"5\",\n                                    \"arithmetic\": \"avg\"\n                                }\n                            ],\n                            \"by\": {\n                                \"jointType\": \"and\",\n                                \"filters\": [\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{AGGRE_TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"1\"\n                                        }\n                                    },\n                                    {\n                                        \"left\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{AGGRE_TOPIC_ID}}\",\n                                            \"factorId\": \"2\"\n                                        },\n                                        \"operator\": \"equals\",\n                                        \"right\": {\n                                            \"kind\": \"topic\",\n                                            \"topicId\": \"{{TOPIC_ID}}\",\n                                            \"factorId\": \"4\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline"
              },
              "response": []
            },
            {
              "name": "IMPORT RAW",
              "id": "1b5cd248-dcd2-443f-84db-67154780ffb9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"Test_Raw_Topic\",\n    \"data\": {\n        \"propList\": [\n            {\n                \"propA\": \"text1\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 102,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 103,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text2\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-23\",\n                \"propE\": \"2022-03-23 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-24\",\n                \"propE\": \"2022-03-24 22:39:45\"\n            },\n            {\n                \"propA\": \"text1\",\n                \"propB\": 101,\n                \"propC\": true,\n                \"propD\": \"2022-03-24\",\n                \"propE\": \"2022-03-24 22:39:45\"\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            }
          ],
          "id": "2c37c9dd-ccd7-41ac-88dc-cacb92f63733"
        },
        {
          "name": "OPTIMISTIC LOCKING",
          "item": [],
          "id": "6454d0a6-526e-4884-bb3e-f732d4d4ac00"
        },
        {
          "name": "ENCRYPT",
          "item": [
            {
              "name": "CREATE RAW TOPIC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e59c3b2-a2c2-41b2-bea9-2c0909acf212",
                    "exec": [
                      "pm.test(\"Create Raw Topic\", () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "    var data = pm.response.json();\r",
                      "    pm.environment.set('RAW_TOPIC_ID', data.topicId)\r",
                      "    pm.environment.set('RAW_TOPIC_NAME', data.name)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3f8799a4-e288-4cd9-88bb-612bc5f4364a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test_Raw_Topic\",\r\n    \"type\": \"raw\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"AES256_PKCS5_PADDING\"},\r\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"MD5\"},\r\n        {\"factorId\": \"3\", \"type\": \"text\", \"name\": \"SHA256\"},\r\n        {\"factorId\": \"4\", \"type\": \"text\", \"name\": \"MASK_MAIL\"},\r\n        {\"factorId\": \"5\", \"type\": \"text\", \"name\": \"MASK_CENTER_3\"},\r\n        {\"factorId\": \"6\", \"type\": \"text\", \"name\": \"MASK_CENTER_5\"},\r\n        {\"factorId\": \"7\", \"type\": \"text\", \"name\": \"MASK_LAST_3\"},\r\n        {\"factorId\": \"8\", \"type\": \"text\", \"name\": \"MASK_LAST_6\"},\r\n        {\"factorId\": \"9\", \"type\": \"datetime\", \"name\": \"MASK_DAY\"},\r\n        {\"factorId\": \"10\", \"type\": \"datetime\", \"name\": \"MASK_MONTH\"},\r\n        {\"factorId\": \"11\", \"type\": \"datetime\", \"name\": \"MASK_MONTH_DAY\"}\r\n    ],\r\n    \"description\": \"Test Raw Topic\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "CREATE TOPIC",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d48b7880-4551-4c56-b2b8-34be1084ea4a",
                    "exec": [
                      "pm.test(\"Create Distinct Topic\", () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "    var data = pm.response.json();\r",
                      "    pm.environment.set('TOPIC_ID', data.topicId)\r",
                      "    pm.environment.set('TOPIC_NAME', data.name)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "323bd1cc-b581-4350-ad15-3b0eaa7e5d09",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"topicId\": \"{{TOPIC_ID}}\",\r\n    \"name\": \"Test_Distinct_Topic\",\r\n    \"type\": \"distinct\",\r\n    \"kind\": \"business\",\r\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\r\n    \"factors\": [\r\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"AES256_PKCS5_PADDING\", \"encrypt\": \"AES256-PKCS5-PADDING\"},\r\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"MD5\", \"encrypt\": \"MD5\"},\r\n        {\"factorId\": \"3\", \"type\": \"text\", \"name\": \"SHA256\", \"encrypt\": \"SHA256\"},\r\n        {\"factorId\": \"4\", \"type\": \"text\", \"name\": \"MASK_MAIL\", \"encrypt\": \"MASK-MAIL\"},\r\n        {\"factorId\": \"5\", \"type\": \"text\", \"name\": \"MASK_CENTER_3\", \"encrypt\": \"MASK-CENTER-3\"},\r\n        {\"factorId\": \"6\", \"type\": \"text\", \"name\": \"MASK_CENTER_5\", \"encrypt\": \"MASK-CENTER-5\"},\r\n        {\"factorId\": \"7\", \"type\": \"text\", \"name\": \"MASK_LAST_3\", \"encrypt\": \"MASK-LAST-3\"},\r\n        {\"factorId\": \"8\", \"type\": \"text\", \"name\": \"MASK_LAST_6\", \"encrypt\": \"MASK-LAST-6\"},\r\n        {\"factorId\": \"9\", \"type\": \"datetime\", \"name\": \"MASK_DAY\", \"encrypt\": \"MASK-DAY\"},\r\n        {\"factorId\": \"10\", \"type\": \"datetime\", \"name\": \"MASK_MONTH\", \"encrypt\": \"MASK-MONTH\"},\r\n        {\"factorId\": \"11\", \"type\": \"datetime\", \"name\": \"MASK_MONTH_DAY\", \"encrypt\": \"MASK-MONTH-DAY\"}\r\n    ],\r\n    \"description\": \"Test Raw Topic\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "CREATE PIPELINE",
              "id": "c136da41-5ce4-4829-8886-77e5497988d3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n    \"name\": \"Test Encrypt\",\r\n    \"type\": \"insert-or-merge\",\r\n    \"stages\": [\r\n        {\r\n            \"stageId\": \"f-1\",\r\n            \"name\": \"Stage 1\",\r\n            \"units\": [\r\n                {\r\n                    \"unitId\": \"f-2\",\r\n                    \"name\": \"Unit 1.2\",\r\n                    \"loopVariableName\": \"loop_list\",\r\n                    \"do\": [\r\n                        {\r\n                            \"actionId\": \"fa-1\",\r\n                            \"type\": \"insert-row\",\r\n                            \"topicId\": \"{{TOPIC_ID}}\",\r\n                            \"mapping\": [\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"1\"\r\n                                    },\r\n                                    \"factorId\": \"1\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"2\"\r\n                                    },\r\n                                    \"factorId\": \"2\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"3\"\r\n                                    },\r\n                                    \"factorId\": \"3\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"4\"\r\n                                    },\r\n                                    \"factorId\": \"4\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"5\"\r\n                                    },\r\n                                    \"factorId\": \"5\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"6\"\r\n                                    },\r\n                                    \"factorId\": \"6\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"7\"\r\n                                    },\r\n                                    \"factorId\": \"7\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"8\"\r\n                                    },\r\n                                    \"factorId\": \"8\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"9\"\r\n                                    },\r\n                                    \"factorId\": \"9\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"10\"\r\n                                    },\r\n                                    \"factorId\": \"10\"\r\n                                },\r\n                                {\r\n                                    \"source\": {\r\n                                        \"kind\": \"topic\",\r\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\r\n                                        \"factorId\": \"11\"\r\n                                    },\r\n                                    \"factorId\": \"11\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"enabled\": true,\r\n    \"validated\": true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline"
              },
              "response": []
            },
            {
              "name": "IMPORT RAW",
              "id": "95d6c48a-1462-4b03-b2b9-ec176dac954e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"code\": \"Test_Raw_Topic\",\r\n    \"data\": {\r\n        \"AES256_PKCS5_PADDING\": \"AAAAAAAAAA\",\r\n        \"MD5\": \"AAAAAAAAAA\",\r\n        \"SHA256\": \"AAAAAAAAAA\",\r\n        \"MASK_MAIL\": \"test@xxx.com\",\r\n        \"MASK_CENTER_3\": \"AAAAAAAAAA\",\r\n        \"MASK_CENTER_5\": \"AAAAAAAAAA\",\r\n        \"MASK_LAST_3\": \"AAAAAAAAAA\",\r\n        \"MASK_LAST_6\": \"AAAAAAAAAA\",\r\n        \"MASK_DAY\": \"2022-03-23 22:39:45\",\r\n        \"MASK_MONTH\": \"2022-03-23 22:39:45\",\r\n        \"MASK_MONTH_DAY\": \"2022-03-23 22:39:45\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            }
          ],
          "id": "191a98a6-20f8-4f53-94e3-1648bd485c46"
        },
        {
          "name": "SHOULD RUN",
          "item": [],
          "id": "c9b35f7b-5fa8-4b5d-9ba0-4a63eff00a6b"
        }
      ],
      "id": "fe777952-b426-4a5b-a395-428acafe48a4"
    },
    {
      "name": "SUBJECT",
      "item": [
        {
          "name": "DATASET",
          "item": [
            {
              "name": "SINGLE TOPIC",
              "item": [
                {
                  "name": "CREATE SUBJECT",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b099cfd-73f4-4671-81cd-6ae01d6bdfc9",
                        "exec": [
                          "pm.test('Create Subject', () => {\r",
                          "    pm.response.to.have.status(200);\r",
                          "    const data = pm.response.json();\r",
                          "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);\r",
                          "    pm.environment.set(\"SUBJECT_NAME\", data.name);\r",
                          "})"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "340acbd0-56c7-497f-abfe-1a6296d408d9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"Test_Subject\",\r\n    \"connectId\": \"{{CONNECT_ID}}\",\r\n    \"reports\": [\r\n        \"1\",\r\n        \"2\"\r\n    ],\r\n    \"dataset\": {\r\n        \"joins\": [],\r\n        \"columns\": [\r\n            {\r\n                \"alias\": \"alias_a\",\r\n                \"columnId\": \"f-1\",\r\n                \"parameter\": {\r\n                    \"on\": null,\r\n                    \"kind\": \"topic\",\r\n                    \"type\": null,\r\n                    \"value\": null,\r\n                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                    \"factorId\": \"1\",\r\n                    \"parameters\": [],\r\n                    \"conditional\": false\r\n                }\r\n            },\r\n            {\r\n                \"alias\": \"alias_b\",\r\n                \"columnId\": \"f-2\",\r\n                \"parameter\": {\r\n                    \"on\": null,\r\n                    \"kind\": \"topic\",\r\n                    \"type\": null,\r\n                    \"value\": null,\r\n                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                    \"factorId\": \"2\",\r\n                    \"parameters\": [],\r\n                    \"conditional\": false\r\n                }\r\n            },\r\n            {\r\n                \"alias\": \"alias_c\",\r\n                \"columnId\": \"f-3\",\r\n                \"parameter\": {\r\n                    \"on\": null,\r\n                    \"kind\": \"topic\",\r\n                    \"type\": null,\r\n                    \"value\": null,\r\n                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                    \"factorId\": \"3\",\r\n                    \"parameters\": [],\r\n                    \"conditional\": false\r\n                }\r\n            },\r\n            {\r\n                \"alias\": \"alias_d\",\r\n                \"columnId\": \"f-4\",\r\n                \"parameter\": {\r\n                    \"on\": null,\r\n                    \"kind\": \"topic\",\r\n                    \"type\": null,\r\n                    \"value\": null,\r\n                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                    \"factorId\": \"4\",\r\n                    \"parameters\": [],\r\n                    \"conditional\": false\r\n                }\r\n            },\r\n            {\r\n                \"alias\": \"alias_e\",\r\n                \"columnId\": \"f-5\",\r\n                \"parameter\": {\r\n                    \"on\": null,\r\n                    \"kind\": \"topic\",\r\n                    \"type\": null,\r\n                    \"value\": null,\r\n                    \"topicId\": \"{{TOPIC_ID}}\",\r\n                    \"factorId\": \"5\",\r\n                    \"parameters\": [],\r\n                    \"conditional\": false\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/subject"
                  },
                  "response": []
                },
                {
                  "name": "SUBJECT DATA",
                  "id": "070a9a81-7993-4a86-8f38-32c8a6cef469",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"pageNumber\": 1,\r\n\t\"pageSize\": 10\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{URL_PREFIX}}/subject/data?subject_id={{SUBJECT_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "subject",
                        "data"
                      ],
                      "query": [
                        {
                          "key": "subject_id",
                          "value": "{{SUBJECT_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "SUBJECT DATA CRITERIA",
                  "id": "b5d35a4d-55d1-4203-9fc6-3fb92ec9be7e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"subjectName\": \"{{SUBJECT_NAME}}\",\n    \"indicators\": [ {\n            \"columnId\": \"f-2\",\n            \"name\": \"alias_b\",\n            \"arithmetic\": \"none\"\n        }],\n    \"conditions\": []\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/subject/data/criteria"
                  },
                  "response": []
                },
                {
                  "name": "SUBJECT DATA CRITERIA 2",
                  "id": "ce40d146-d00b-42cc-9c24-217ef0c4be73",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"subjectName\": \"{{SUBJECT_NAME}}\",\n    \"indicators\": [\n        {\n            \"columnId\": \"f-2\",\n            \"name\": \"alias_b\",\n            \"arithmetic\": \"sum\"\n        },\n        {\n            \"columnId\": \"f-1\",\n            \"name\": \"alias_a\",\n            \"arithmetic\": \"none\"\n        }\n    ],\n    \"conditions\": [\n        {\n            \"jointType\": \"and\",\n            \"filters\": [\n                {\n                    \"left\": {\n                        \"kind\": \"topic\",\n                        \"factorId\": \"alias_c\"\n                    },\n                    \"operator\": \"equals\",\n                    \"right\": {\n                        \"kind\": \"constant\",\n                        \"value\": \"1\"\n                    }\n                }\n            ]\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/subject/data/criteria"
                  },
                  "response": []
                }
              ],
              "id": "559514d3-013f-4ade-ba87-bfd6da8f135d"
            },
            {
              "name": "JOIN",
              "item": [
                {
                  "name": "CREATE RAW TOPIC",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ca77278e-e674-4161-ae60-9caa87f5f6e3",
                        "exec": [
                          "pm.test(\"Create Raw Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('RAW_TOPIC_ID', data.topicId)",
                          "    pm.environment.set('RAW_TOPIC_NAME', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "30765d02-6e65-4fb6-a4c8-f1d613308b76",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Raw_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"object\", \"name\": \"propF\"},\n        {\"factorId\": \"7\", \"type\": \"text\", \"name\": \"propF.propA\"},\n        {\"factorId\": \"8\", \"type\": \"number\", \"name\": \"propF.propB\"},\n        {\"factorId\": \"9\", \"type\": \"boolean\", \"name\": \"propF.propC\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE TOPIC 1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "438d4f4f-c329-4a0c-a68d-fa4e2d487f1b",
                        "exec": [
                          "pm.test(\"Create Distinct Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('TOPIC_ID_1', data.topicId)",
                          "    pm.environment.set('TOPIC_NAME_1', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "68937100-2300-4b5a-a8d4-eeef77e6a93f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Distinct_Topic_1\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"date\", \"name\": \"propD\"},\n        {\"factorId\": \"5\", \"type\": \"datetime\", \"name\": \"propE\"},\n        {\"factorId\": \"6\", \"type\": \"text\", \"name\": \"propF\"}\n    ],\n    \"description\": \"Test Distinct Topic 1\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE TOPIC 2",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2b1e0808-b8de-4616-8b27-4512b2294eba",
                        "exec": [
                          "pm.test(\"Create Distinct Topic\", () => {",
                          "    pm.response.to.have.status(200);",
                          "    var data = pm.response.json();",
                          "    pm.environment.set('TOPIC_ID_2', data.topicId)",
                          "    pm.environment.set('TOPIC_NAME_2', data.name)",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "29c7831d-5da3-49cc-99eb-d705dfdebb05",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Distinct_Topic_2\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"number\", \"name\": \"propB\"},\n        {\"factorId\": \"3\", \"type\": \"boolean\", \"name\": \"propC\"},\n        {\"factorId\": \"4\", \"type\": \"text\", \"name\": \"propD\"}\n    ],\n    \"description\": \"Test Distinct Topic 2\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/topic"
                  },
                  "response": []
                },
                {
                  "name": "CREATE PIPELINE",
                  "id": "936e20f9-849d-46d4-ad35-64eec9177907",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"topicId\": \"{{RAW_TOPIC_ID}}\",\n    \"name\": \"Test Insert Row\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.2\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"fa-1\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID_1}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"1\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"2\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"3\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"4\"\n                                    },\n                                    \"factorId\": \"4\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"5\"\n                                    },\n                                    \"factorId\": \"5\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"10\"\n                                    },\n                                    \"factorId\": \"6\"\n                                }\n                            ]\n                        },\n                        {\n                            \"actionId\": \"fa-2\",\n                            \"type\": \"insert-row\",\n                            \"topicId\": \"{{TOPIC_ID_2}}\",\n                            \"mapping\": [\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"7\"\n                                    },\n                                    \"factorId\": \"1\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"8\"\n                                    },\n                                    \"factorId\": \"2\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"9\"\n                                    },\n                                    \"factorId\": \"3\"\n                                },\n                                {\n                                    \"source\": {\n                                        \"kind\": \"topic\",\n                                        \"topicId\": \"{{RAW_TOPIC_ID}}\",\n                                        \"factorId\": \"10\"\n                                    },\n                                    \"factorId\": \"4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline"
                  },
                  "response": []
                },
                {
                  "name": "IMPORT RAW",
                  "id": "eac9d9af-ded8-4c2a-8176-3863585a5b49",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"code\": \"Test_Raw_Topic_2\",\n    \"data\": {\n        \"propA\": \"text\",\n        \"propB\": 100,\n        \"propC\": true,\n        \"propD\": \"2022-03-22\",\n        \"propE\": \"2022-03-22 22:39:45\",\n        \"propF\": {\n            \"propA\": \"child_text\",\n            \"propB\": 1000,\n            \"propC\": false,\n            \"propD\": \"10\"\n        }\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/pipeline/data"
                  },
                  "response": []
                },
                {
                  "name": "CRATE SUBJECT",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f761601d-ff62-41c0-b78c-120c1244cf9e",
                        "exec": [
                          "pm.test('Create Subject', () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"SUBJECT_ID\", data.subjectId);",
                          "    pm.environment.set(\"SUBJECT_NAME\", data.name);",
                          "})"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9c6cf4b2-fbd5-43fc-bf85-d5ea7ce205b2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Subject\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"reports\": [\n        \"1\",\n        \"2\"\n    ],\n    \"dataset\": {\n        \"joins\": [\n            {\n                \"topicId\": \"{{TOPIC_ID_1}}\",\n                \"factorId\": \"6\",\n                \"secondaryTopicId\": \"{{TOPIC_ID_2}}\",\n                \"secondaryFactorId\": \"4\",\n                \"type\": \"inner\"\n            }\n        ],\n        \"columns\": [\n            {\n                \"alias\": \"alias_a\",\n                \"columnId\": \"f-1\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_1}}\",\n                    \"factorId\": \"1\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_b\",\n                \"columnId\": \"f-2\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_1}}\",\n                    \"factorId\": \"2\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_c\",\n                \"columnId\": \"f-3\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_1}}\",\n                    \"factorId\": \"3\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_d\",\n                \"columnId\": \"f-4\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_1}}\",\n                    \"factorId\": \"4\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_e\",\n                \"columnId\": \"f-5\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_1}}\",\n                    \"factorId\": \"5\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_f\",\n                \"columnId\": \"f-6\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_2}}\",\n                    \"factorId\": \"1\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_g\",\n                \"columnId\": \"f-7\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_2}}\",\n                    \"factorId\": \"2\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_h\",\n                \"columnId\": \"f-8\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_2}}\",\n                    \"factorId\": \"3\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            },\n            {\n                \"alias\": \"alias_i\",\n                \"columnId\": \"f-9\",\n                \"parameter\": {\n                    \"on\": null,\n                    \"kind\": \"topic\",\n                    \"type\": null,\n                    \"value\": null,\n                    \"topicId\": \"{{TOPIC_ID_2}}\",\n                    \"factorId\": \"4\",\n                    \"parameters\": [],\n                    \"conditional\": false\n                }\n            }\n        ]\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/subject"
                  },
                  "response": []
                },
                {
                  "name": "SUBJECT DATA",
                  "id": "bcaa7c87-f747-4c9d-aeef-3dc2980200f7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pageNumber\": 1,\n\t\"pageSize\": 10\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{URL_PREFIX}}/subject/data?subject_id={{SUBJECT_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "subject",
                        "data"
                      ],
                      "query": [
                        {
                          "key": "subject_id",
                          "value": "{{SUBJECT_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "f3a99b31-18e9-43a3-a977-c68cbf4989ba"
            }
          ],
          "id": "4be0c839-19e6-4ccd-a5eb-e09c4ddbdaec"
        },
        {
          "name": "REPORT",
          "item": [
            {
              "name": "iNDICATOR",
              "item": [
                {
                  "name": "CREATE REPORT",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ee5c5c4-e449-475b-aa1b-2779c76137d5",
                        "exec": [
                          "pm.test('Create Report', () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"REPORT_ID\", data.reportId);",
                          "    pm.environment.set(\"REPORT_NAME\", data.name);",
                          "})"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "3c310de1-2841-4aed-b7e9-515126f8e669",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"funnels\": [],\n    \"indicators\": [\n        {\n            \"columnId\": \"f-2\",\n            \"name\": \"sum_propB\",\n            \"arithmetic\": \"sum\"\n        }\n    ],\n    \"dimensions\": [],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/report"
                  },
                  "response": []
                },
                {
                  "name": "REPORT DATA",
                  "id": "142f8fa9-e01f-471b-bfdc-0a8470509083",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{URL_PREFIX}}/report/data?report_id={{REPORT_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "report",
                        "data"
                      ],
                      "query": [
                        {
                          "key": "report_id",
                          "value": "{{REPORT_ID}}",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "REPORT TEMPORARY",
                  "id": "520af1c8-f4da-4c8e-b479-12b879418363",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"reportId\": \"{{REPORT_ID}}\",\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"funnels\": [],\n    \"indicators\": [\n        {\n            \"columnId\": \"f-2\",\n            \"name\": \"count_propB\",\n            \"arithmetic\": \"count\"\n        }\n    ],\n    \"dimensions\": [],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/report/temporary"
                  },
                  "response": []
                }
              ],
              "id": "172d5707-2b4e-49a5-a412-67f45cc75a9e"
            },
            {
              "name": "DiMENSION",
              "item": [
                {
                  "name": "CREATE REPORT",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f9d32f98-9880-45e7-885a-3bec90aba055",
                        "exec": [
                          "pm.test('Create Report', () => {",
                          "    pm.response.to.have.status(200);",
                          "    const data = pm.response.json();",
                          "    pm.environment.set(\"REPORT_ID\", data.reportId);",
                          "    pm.environment.set(\"REPORT_NAME\", data.name);",
                          "})"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "c43480b4-591f-41ac-89ba-2590b078000c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Test_Report\",\n    \"subjectId\": \"{{SUBJECT_ID}}\",\n    \"connectId\": \"{{CONNECT_ID}}\",\n    \"funnels\": [\n        {\n            \"funnelId\": \"ff-1\",\n            \"columnId\": \"f-5\",\n            \"type\": \"date\",\n            \"range\": false,\n            \"enabled\": true,\n            \"values\": [\n                \"2022-03-22\"\n            ]\n        }\n    ],\n    \"indicators\": [\n        {\n            \"columnId\": \"f-2\",\n            \"name\": \"sum_propB\",\n            \"arithmetic\": \"sum\"\n        }\n    ],\n    \"dimensions\": [\n        {\n            \"columnId\": \"f-1\",\n            \"name\": \"propA\"\n        },\n        {\n            \"columnId\": \"f-5\",\n            \"name\": \"propE\"\n        }\n    ],\n    \"description\": \"test report\",\n    \"rect\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"width\": 167.63888549804688,\n        \"height\": 35.55555534362793\n    },\n    \"chart\": {\n        \"type\": \"count\",\n        \"settings\": {\n            \"border\": null,\n            \"backgroundColor\": null,\n            \"colorSeries\": \"regular\"\n        }\n    },\n    \"simulating\": 0,\n    \"simulateData\": [],\n    \"simulateThumbnail\": \"test\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{URL_PREFIX}}/report"
                  },
                  "response": []
                },
                {
                  "name": "REPORT DATA",
                  "id": "bb99ea4e-6f28-42b3-862e-2475357e2bbc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{JWT_TOKEN}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{URL_PREFIX}}/report/data?report_id={{REPORT_ID}}",
                      "host": [
                        "{{URL_PREFIX}}"
                      ],
                      "path": [
                        "report",
                        "data"
                      ],
                      "query": [
                        {
                          "key": "report_id",
                          "value": "{{REPORT_ID}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "2267c152-a1d3-4799-94a9-aa94e74715e0"
            },
            {
              "name": "FUNNEL",
              "item": [],
              "id": "2ef8f5b6-7fbe-4499-a3b3-866a82e09cf6"
            }
          ],
          "id": "3191c34a-4994-4e97-a1ce-2d7442f8f19f"
        }
      ],
      "id": "c3559069-a139-4890-b153-42518e18405c"
    },
    {
      "name": "PIPELINE MONITOR",
      "item": [
        {
          "name": "PIPELINE LOG",
          "id": "c7423598-0891-468c-913b-946d975a9fe3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\t{\n\t\"pageNumber\": 1,\n\t\"pageSize\": 10\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{URL_PREFIX}}/pipeline/log"
          },
          "response": []
        }
      ],
      "id": "b8f71fdf-274a-449e-bfa8-12a22b6e4972"
    },
    {
      "name": "Trino",
      "item": [],
      "id": "2012c942-0317-4f3d-98df-0dcd85d02761"
    },
    {
      "name": "DQC",
      "item": [
        {
          "name": "TOPIC PROFILE",
          "item": [
            {
              "name": "TOPIC PROFILE",
              "id": "ad3c6376-ae71-49ef-8f37-1487e44060db",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{DQC_URL_PREFIX}}"
              },
              "response": []
            }
          ],
          "id": "dd78035f-a0e4-46b4-b4c6-ac624ac65bc5"
        },
        {
          "name": "RULES",
          "item": [
            {
              "name": "CREATE RAW RULE RESULT",
              "id": "b7a68f16-01ff-45df-b13a-d91d4fb6a18e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"dqc_raw_rule_result\",\n    \"type\": \"raw\",\n    \"kind\": \"system\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [],\n    \"description\": \"DQC Result Raw Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": []
            },
            {
              "name": "SAVE RULES",
              "id": "859884a7-a0c9-4bf5-b6ce-8c087ea4a5a9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"code\": \"factor-is-blank\",\n        \"grade\": \"factor\",\n        \"severity\": \"warn\",\n        \"topicId\": \"{{TOPIC_ID}}\",\n        \"factorId\": \"1\",\n        \"params\": {\n            \"statisticalInterval\": \"daily\"\n        },\n        \"enabled\": true\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{DQC_URL_PREFIX}}/dqc/monitor/rules"
              },
              "response": []
            },
            {
              "name": "GET RULES",
              "id": "d449774d-129c-4678-bb00-3abf9f250fc2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{DQC_URL_PREFIX}}/dqc/monitor/rules?topic_id={{TOPIC_ID}}",
                  "host": [
                    "{{DQC_URL_PREFIX}}"
                  ],
                  "path": [
                    "dqc",
                    "monitor",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "topic_id",
                      "value": "{{TOPIC_ID}}",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "RUN RULES",
              "id": "2c570c9d-7b4b-41b5-af81-ffa723b10f41",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{DQC_URL_PREFIX}}/dqc/monitor/rules/run?frequency=daily&topic_name={{TOPIC_NAME}}",
                  "host": [
                    "{{DQC_URL_PREFIX}}"
                  ],
                  "path": [
                    "dqc",
                    "monitor",
                    "rules",
                    "run"
                  ],
                  "query": [
                    {
                      "key": "frequency",
                      "value": "daily",
                      "type": "text"
                    },
                    {
                      "key": "topic_name",
                      "value": "{{TOPIC_NAME}}",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "4ab7c301-e6aa-4bd6-804b-d742bc54a0cc"
        },
        {
          "name": "CATALOG",
          "item": [
            {
              "name": "SAVE CATALOG",
              "id": "3da8ce35-f5b2-4a9c-8a47-33f172819724",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "url": "{{DQC_URL_PREFIX}}/dqc/catalog"
              },
              "response": []
            }
          ],
          "id": "e34a0b6c-3002-4508-9ac3-90b4566741c1"
        }
      ],
      "id": "19e99fdc-76dc-4660-b1eb-d29457d0b56b"
    }
  ]
}