{
  "info": {
    "_postman_id": "216348af-600c-4110-80c4-df648ef8cf87",
    "name": "Watchmen 16",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "SUPER ADMIN",
      "item": [
        {
          "name": "AUTHENTICATE",
          "item": [
            {
              "name": "LOGIN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5988ee8d-8fee-4cc5-b31c-137ea37ea588",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('superadmin');",
                      "    pm.expect(data.tenantId).to.eql('-1');",
                      "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c793d438-0f8c-4568-a6dc-e446d7705f1f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-super",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "change-me",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "VALIDATE ACCESS TOKEN - SUPER ADMIN",
              "id": "0def2ec7-1e1a-4050-954c-31c81b6f68c8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/token/validate/jwt?token={{JWT_TOKEN}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "token",
                    "validate",
                    "jwt"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{{JWT_TOKEN}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TEST ACCESS TOKEN - SUPER ADMIN",
              "id": "32302dba-850b-4097-be13-5a0fef3f20ee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/token/exchange-user"
              },
              "response": []
            }
          ],
          "id": "1382ab45-3f9c-43c6-8911-a80066686b3e"
        },
        {
          "name": "TENANT",
          "item": [
            {
              "name": "TENANT - LOAD 1",
              "id": "a7ae9e14-0d6b-4dea-8170-1c14c7b0767a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant?tenant_id=1",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d1bb1a8-00ba-45bf-93a6-2dea10c09da1",
                    "exec": [
                      "pm.test('Create Tenant', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('IMMA-Test')",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('TENANT_ID', data.tenantId);",
                      "    pm.environment.set('TENANT_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('TENANT_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('TENANT_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1ad9a344-e27f-42dd-867a-846f37be3f6b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"IMMA-Test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/tenant"
              },
              "response": []
            },
            {
              "name": "TENANT FIND BY NAME AFTER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bbae9cd7-bf41-4387-8815-0e927b3abcd0",
                    "exec": [
                      "pm.test('Find Tenant By Name', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.eql(1);",
                      "    pm.expect(data.pageSize).to.eql(9)",
                      "    pm.expect(data.itemCount).to.eql(1);",
                      "    pm.expect(data.pageCount).to.eql(1);",
                      "    pm.expect(data.data.length).to.eql(1);",
                      "    const tenant = data.data[0];",
                      "    pm.expect(tenant.tenantId).to.not.be.null;",
                      "    pm.expect(tenant.name).to.eql('IMMA-Test')",
                      "    pm.expect(tenant.createdAt).to.not.be.null;",
                      "    pm.expect(tenant.createdBy).to.not.be.null;",
                      "    pm.expect(tenant.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(tenant.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(tenant.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6a774ba4-f572-4546-8e71-a02feacbe4fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 9\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant/name?query_name=test",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT UPDATE CREATED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "36cae3c3-b439-4ef0-8aa0-6e54440e5a8f",
                    "exec": [
                      "pm.test('Update Tenant', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('IMMA-Test-1')",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(2);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c72da620-f96b-4c54-88bf-0b17edda7708",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tenantId\": \"{{TENANT_ID}}\",\n    \"name\": \"IMMA-Test-1\",\n    \"createdAt\": \"{{TENANT_CREATED_AT}}\",\n    \"createdBy\": \"{{TENANT_CREATED_BY}}\",\n    \"version\": {{TENANT_VERSION}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/tenant"
              },
              "response": []
            },
            {
              "name": "TENANT DELETE CREATED",
              "id": "92f56950-5a06-4fc3-b7e9-4af7b63783a2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant?tenant_id={{TENANT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant"
                  ],
                  "query": [
                    {
                      "key": "tenant_id",
                      "value": "{{TENANT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TENANT FIND BY NAME AFTER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "20d074f6-593c-48cd-95ba-4080bb84da1a",
                    "exec": [
                      "pm.test('Find Tenant By Name', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.eql(1);",
                      "    pm.expect(data.pageSize).to.eql(9)",
                      "    pm.expect(data.itemCount).to.eql(0);",
                      "    pm.expect(data.pageCount).to.eql(0);",
                      "    pm.expect(data.data.length).to.eql(0);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9ded9b18-76f7-4327-9509-f25a4e79df4f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 9\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/tenant/name?query_name=test",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "tenant",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "98bfa752-aba1-45df-80b5-5fbb641939de"
        },
        {
          "name": "DATASOURCE",
          "item": [
            {
              "name": "DATASOURCE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e7da9e0-c675-4339-a895-28fb9c8b0971",
                    "exec": [
                      "pm.test('Create DataSource', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('DATA_SOURCE_ID', data.dataSourceId);",
                      "    pm.environment.set('DATA_SOURCE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "849bcbbb-b5fd-47e8-b673-0740f5b6e675",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"dataSourceCode\": \"Test-DataSource\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"127.0.0.1\",\n    \"port\": \"3306\",\n    \"username\": \"watchmen\",\n    \"password\": \"watchmen\",\n    \"name\": \"watchmen\",\n    \"url\": \"mysql://watchmen:watchmen@127.0.0.1:3306/watchmen?charset=utf8\",\n    \"params\": [\n        {\"name\": \"x\", \"value\": \"1\"},\n        {\"name\": \"y\", \"value\": \"2\"}\n    ],\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/datasource"
              },
              "response": []
            },
            {
              "name": "DATASOURCE LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7aeb31ab-47f7-4bef-93a2-55657eb65a84",
                    "exec": [
                      "pm.test('Load DataSource', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "be67bf15-89c3-48bc-9f9f-82beef0d6f4c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/datasource?datasource_id={{DATA_SOURCE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "datasource"
                  ],
                  "query": [
                    {
                      "key": "datasource_id",
                      "value": "{{DATA_SOURCE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "DATASOURCE_DELETE",
              "id": "86fc9c0c-b12e-4c3e-86de-bd8cc5d79269",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/datasource?DataSourceId={{DATA_SOURCE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "datasource"
                  ],
                  "query": [
                    {
                      "key": "DataSourceId",
                      "value": "{{DATA_SOURCE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "9e542866-d6d4-49ae-a125-32810f193d45"
        },
        {
          "name": "EXTERNAL WRITER",
          "item": [
            {
              "name": "EXTERNAL WRITER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3e0e11bc-7291-480e-b888-628b775af24e",
                    "exec": [
                      "pm.test('Create ExternalWriter', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.writerId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('EXTERNAL_WRITER_ID', data.writerId);",
                      "    pm.environment.set('EXTERNAL_WRITER_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ef16e995-71c9-4d1e-8d76-b692c5d06745",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"writerCode\": \"Test-External-Writer\",\n    \"type\": \"standard-writer\",\n    \"pat\": \"a-pat\",\n    \"url\": \"mysql://watchmen:watchmen@127.0.0.1:3306/watchmen?charset=utf8\",\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/external_writer"
              },
              "response": []
            },
            {
              "name": "EXTERNAL WRITER LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "187d5a70-a313-4427-9b1e-f2eb0fcf1005",
                    "exec": [
                      "pm.test('Load ExternalWriter', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.writerId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1a75b5bb-f25a-4c41-93bc-e25c4e8b3f11",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/external_writer?writer_id={{EXTERNAL_WRITER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "external_writer"
                  ],
                  "query": [
                    {
                      "key": "writer_id",
                      "value": "{{EXTERNAL_WRITER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "17c471ba-9990-4f45-9079-6db6dec5ec67"
        },
        {
          "name": "PAT",
          "item": [
            {
              "name": "PAT CREATE",
              "id": "1dbbd4d8-d3a2-4925-b9d8-9deb4b2a6d7c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": []
              },
              "response": []
            }
          ],
          "id": "81a9ceae-4e7d-49a9-80a3-20b14e6fb947"
        },
        {
          "name": "CACHE",
          "item": [
            {
              "name": "CLEAR ALL CACHE",
              "id": "7b72bcc3-c43c-450d-b310-859befe8f2fa",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/cache/clear/all"
              },
              "response": []
            }
          ],
          "id": "e6777f71-4736-4cc4-b57f-fbb98f51fa26"
        }
      ],
      "id": "13f7d30b-1bc5-4cd0-9a31-96cb02ed7c27"
    },
    {
      "name": "ADMIN",
      "item": [
        {
          "name": "AUTHENTICATE - ADMIN",
          "item": [
            {
              "name": "LOGIN - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "256d3699-0b27-45eb-85f9-f66db1927d0c",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "31b79fac-116a-442e-8a26-bd8bab25bb60",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            }
          ],
          "id": "5f61e34f-fab9-435f-982d-50c88922ee67"
        },
        {
          "name": "FAVORITE",
          "item": [
            {
              "name": "FAVORITE CREATE",
              "id": "b5c6edb2-0164-4234-9067-b2fb210b6e9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "url": "{{URL_PREFIX}}/favorite"
              },
              "response": []
            }
          ],
          "id": "9f1d8885-fa09-4bf1-b623-91d2e9c3f951"
        },
        {
          "name": "LAST SNAPSHOT",
          "item": [],
          "id": "deeee44b-b4bd-4f34-993e-0e57975583e2"
        },
        {
          "name": "USER",
          "item": [
            {
              "name": "USER CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0feae4d0-e5dc-48f2-bfff-4c39e6ffecd7",
                    "exec": [
                      "pm.test('Create User', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-User')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('USER_ID', data.userId);",
                      "    pm.environment.set('USER_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('USER_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('USER_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "2ed1b18e-efd7-467f-9df3-f30af6c174db",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-User\",\n    \"nickName\": \"Test-User-Nickname\",\n    \"password\": \"abcd1234\",\n    \"isActive\": true,\n    \"groupIds\": [],\n    \"role\": \"console\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user"
              },
              "response": []
            },
            {
              "name": "USER LOAD 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "91b4e1ad-d34a-40f9-8226-ebe34e7b50d3",
                    "exec": [
                      "pm.test(\"Find Users Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.name).to.equal(\"imma-admin\");",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.not.be.null;",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "df2c60c7-092d-4e46-9b1f-5888237ef070",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user?user_id=2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0e5d3a5e-f18f-47d5-8861-a9fe581519c6",
                    "exec": [
                      "pm.test(\"Find Users Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.itemCount).to.equal(2);",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7625489a-d93d-448e-8f59-acf0bdce673c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/user/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER LIST ALL BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee282e91-f7c0-45d9-b903-766f5535fada",
                    "exec": [
                      "pm.test(\"List Users By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "72b68598-7a2a-4518-b1b3-91b948182f90",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user/list/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c5a4659-45ef-40a6-8dcb-2a9da634d951",
                    "exec": [
                      "pm.test(\"Find Users By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6b12bc4d-a2e6-4201-8130-8a7b0285e639",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n   \"2\",\n   \"3\"\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user/ids"
              },
              "response": []
            },
            {
              "name": "USER DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "416ccc0c-ad5a-49ba-9b22-a677dfa3054d",
                    "exec": [
                      "pm.test(\"Delete User By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const user_id = pm.environment.get(\"USER_ID\");",
                      "    pm.expect(data.userId).to.equal(user_id);",
                      "    pm.environment.unset(\"USER_ID\");",
                      "    pm.environment.unset('USER_CREATED_AT');",
                      "    pm.environment.unset('USER_CREATED_BY');",
                      "    pm.environment.unset('USER_VERSION');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c153f0e9-68d3-4471-bc45-5b5bc86d4f62",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user?user_id={{USER_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "{{USER_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "2447d2f8-9676-485c-9344-0192d5fac66f"
        },
        {
          "name": "USER GROUP",
          "item": [
            {
              "name": "USER GROUP CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e928236a-c9a2-4b7c-b65c-614dfc94ff0e",
                    "exec": [
                      "pm.test('Create User Group', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userGroupId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Group')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('USER_GROUP_ID', data.userGroupId);",
                      "    pm.environment.set('USER_GROUP_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('USER_GROUP_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('USER_GROUP_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a5b1a6b5-0bf6-434a-aef6-4c96f65a45cc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Group\",\n    \"description\": \"A description\",\n    \"userIds\": [\"{{USER_ID}}\", \"2\"],\n    \"spaceIds\": [\"{{SPACE_ID}}\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group"
              },
              "response": []
            },
            {
              "name": "USER GROPU LOAD BY ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5ee25c5f-4b47-4a3b-b3e2-39373a3a87dc",
                    "exec": [
                      "pm.test('Load User Group By Id', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.userGroupId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Group')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "988d6f91-536d-4312-9931-bdc64ee8b2fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group?user_group_id={{USER_GROUP_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group"
                  ],
                  "query": [
                    {
                      "key": "user_group_id",
                      "value": "{{USER_GROUP_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "25f91009-411c-4271-9cd8-5188afe26270",
                    "exec": [
                      "pm.test(\"Find User Group Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "71965ab2-c02f-48fc-ba09-3ca8e7de2b45",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP LIST BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4047cae9-017a-45e1-a2cb-08b5307b4af5",
                    "exec": [
                      "pm.test(\"List User Group By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "56d77d7d-747b-414b-807d-232a26db6632",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group/list/name?query_name=Test-Group",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "Test-Group",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "USER GROUP FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "acf9892b-9b27-46d1-ad00-150cf6668db5",
                    "exec": [
                      "pm.test(\"Find User Group By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "369a4f11-6ac3-4c2c-8278-d74df9efda41",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{USER_GROUP_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group/ids"
              },
              "response": []
            },
            {
              "name": "USER GROUP UPDATE",
              "id": "f077217c-4177-4989-b053-59d119364166",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Group\",\n    \"description\": \"A description\",\n    \"userIds\": [\n        \"3\",\n        \"2\"\n    ],\n    \"userGroupId\": \"{{USER_GROUP_ID}}\",\n    \"spaceIds\": [],\n    \"createdAt\": \"{{USER_GROUP_CREATED_AT}}\",\n    \"createdBy\": \"{{USER_GROUP_CREATED_BY}}\",\n    \"version\": {{USER_GROUP_VERSION}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/user_group"
              },
              "response": []
            },
            {
              "name": "USER GROUP DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa486d0e-de57-4c26-ac0f-38ec54d9cc23",
                    "exec": [
                      "pm.test('Delete User Group', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const uer_group_id = pm.environment.get(\"USER_GROUP_ID\");",
                      "    pm.expect(data.userGroupId).to.equal(uer_group_id);",
                      "    pm.environment.unset('USER_GROUP_ID');",
                      "    pm.environment.unset('USER_GROUP_CREATED_AT');",
                      "    pm.environment.unset('USER_GROUP_CREATED_BY');",
                      "    pm.environment.unset('USER_GROUP_VERSION');",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4d59b8b2-e54a-481a-a308-8926a123e713",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/user_group?user_group_id={{USER_GROUP_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "user_group"
                  ],
                  "query": [
                    {
                      "key": "user_group_id",
                      "value": "{{USER_GROUP_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "695159a0-1c4b-4844-9998-31d00d55a92b"
        },
        {
          "name": "SPACE",
          "item": [
            {
              "name": "SPACE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "489b4e2f-b6d5-462c-9be0-a2ace00ea297",
                    "exec": [
                      "pm.test('Create Space', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.spaceId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Space')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('SPACE_ID', data.spaceId);",
                      "    pm.environment.set('SPACE_NAME', data.name);",
                      "    pm.environment.set('SPACE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('SPACE_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('SPACE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "43f3336a-fe2c-433b-9f12-9b9c518b57a6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test-Space\",\n    \"description\": \"A description\",\n    \"topicIds\": [],\n    \"groupIds\": [],\n    \"filters\": [\n        {\n            \"topicId\": \"1\",\n            \"enabled\": true,\n            \"joint\": {\n                \"jointType\": \"and\",\n                \"filters\": [\n                    {\n                        \"left\": {\n                            \"kind\": \"topic\",\n                            \"topicId\": \"1\",\n                            \"factorId\": \"1\"\n                        },\n                        \"operator\": \"empty\"\n                    },\n                    {\n                        \"jointType\": \"or\",\n                        \"filters\": [\n                            {\n                                \"left\": {\n                                    \"kind\": \"constant\",\n                                    \"value\": \"2\"\n                                },\n                                \"operator\": \"not-equals\",\n                                \"right\": {\n                                    \"kind\": \"computed\",\n                                    \"type\": \"add\",\n                                    \"parameters\": [\n                                        {\"kind\": \"constant\", \"value\": \"3\"},\n                                        {\"kind\": \"constant\", \"value\": \"4\"}\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space"
              },
              "response": []
            },
            {
              "name": "SPACE LOAD",
              "id": "34629a47-398a-483d-9008-050339be27fe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9beaf561-6d88-48f4-8b71-1d1d54f94141",
                    "exec": [
                      "pm.test(\"Find Space Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.itemCount).to.not.be.null;",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "112401ee-8953-442b-a1d9-e9a7b865e5f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/space/name?query_name=Test-Space",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "Test-Space"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE FIND BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10fb8fa1-5152-4d37-a40e-3f95748d3d2d",
                    "exec": [
                      "pm.test(\"Find Space By Name\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "870c0082-46c9-49cd-9257-4d612845c262",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space/list/name?query_name=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SPACE AVALIABLE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4cbf8639-6418-477f-a14f-3cde65c0f5ae",
                    "exec": [
                      "pm.test(\"Available Spaces\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "544d7ce0-6904-4cb5-9e97-3fadb7c861cf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/space/available"
              },
              "response": []
            },
            {
              "name": "SPACE FIND BY IDS",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6b134668-9841-4643-8664-b1665ea5c3e6",
                    "exec": [
                      "pm.test(\"Find Spaces By Ids\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "522c5c47-ee68-4126-b6aa-000f4c1ffbc5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{SPACE_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/space/ids"
              },
              "response": []
            },
            {
              "name": "SPACE EXPORT",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c070cf1-21f8-4aa9-924e-f3c036263e7b",
                    "exec": [
                      "pm.test(\"Export Spaces\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "816b4be5-7a8a-4953-9fe3-15461cca46e8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/space/export"
              },
              "response": []
            },
            {
              "name": "SPACE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b484b3fe-e113-4b04-86d6-6a31d83731b4",
                    "exec": [
                      "pm.test('Delete User Group', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const space_id = pm.environment.get(\"SPACE_ID\");",
                      "    pm.expect(data.spaceId).to.equal(space_id);",
                      "    pm.environment.unset('SPACE_ID');",
                      "    pm.environment.unset('SPACE_CREATED_AT');",
                      "    pm.environment.unset('SPACE_CREATED_BY');",
                      "    pm.environment.unset('SPACE_VERSION');",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "42d32e24-07f9-44dc-9282-e7c8e9d873b0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/space?space_id={{SPACE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "space"
                  ],
                  "query": [
                    {
                      "key": "space_id",
                      "value": "{{SPACE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "1ef7cc43-850d-4db9-a66c-4216a70d114e"
        },
        {
          "name": "ENUMERATION",
          "item": [],
          "id": "03745d16-5763-4e02-8bfc-0c28721f3e80"
        },
        {
          "name": "TOPIC",
          "item": [
            {
              "name": "TOPIC CREATE",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "60de42a1-1f23-421c-a554-9324dccb4790",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8226aa93-491c-48b5-8891-14e831b29b97",
                    "exec": [
                      "pm.test('Create Topic', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.topicId).to.not.be.null;",
                      "    pm.environment.set(\"TOPIC_ID\", data.topicId);",
                      "    pm.environment.set(\"TOPIC_NAME\", data.name);",
                      "    pm.expect(data.name).to.equal(\"Test_Distinct_Topic\");",
                      "    var factor_schema = [{",
                      "        \"items\": {",
                      "            \"factorId\": \"string\",",
                      "            \"type\": \"string\",",
                      "            \"name\": \"string\"",
                      "        }",
                      "    }];",
                      "    pm.expect(tv4.validate(data.factors, factor_schema)).to.be.true;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b0e6c944-5007-4424-b3bc-1449c7d39b6b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Distinct_Topic\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\", \"label\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"}\n    ],\n    \"description\": \"Test Distict Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "TOPIC LOAD BY ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bab876d8-3452-4edd-a27b-b1c908ffb2fe",
                    "exec": [
                      "pm.test(\"Load Topic By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const topic_id =pm.environment.get(\"TOPIC_ID\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f5538596-beeb-461d-9ebe-e98e6ba17da2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic?topic_id={{TOPIC_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic"
                  ],
                  "query": [
                    {
                      "key": "topic_id",
                      "value": "{{TOPIC_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LOAD BATCHED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9ae74a18-af9e-4e4a-8cc1-b108800b0baf",
                    "exec": [
                      "pm.test(\"Load Topic Batched\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    const topic_id = pm.environment.get(\"TOPIC_ID\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "64c3b94e-8912-4a1d-a494-1a3943adcf53",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {{TOPIC_ID}}\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic/ids"
              },
              "response": []
            },
            {
              "name": "TOPIC FIND PAGE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3618909-5caf-4138-a5e4-b515da8cb79b",
                    "exec": [
                      "pm.test(\"Find Topics Pageable\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pageNumber).to.not.be.null;",
                      "    pm.expect(data.pageSize).to.not.be.null;",
                      "    pm.expect(data.itemCount).to.not.be.null;",
                      "    pm.expect(data.pageCount).to.not.be.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0bd8659b-f60c-4e3c-8e5e-707eef65a429",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/name?query_name",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": null,
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LIST BY NAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "87459cf4-6923-4dae-a14b-bf1cdada80db",
                    "exec": [
                      "pm.test('List Topics All', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7cabc20c-b317-4986-97d4-b80775b023a5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/list/name?query_name=test&exclude_types=",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "list",
                    "name"
                  ],
                  "query": [
                    {
                      "key": "query_name",
                      "value": "test"
                    },
                    {
                      "key": "exclude_types",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TOPIC LIST ALL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1d60af2-e28a-4b0e-9ebb-888eb00c55b5",
                    "exec": [
                      "pm.test('List Topics All', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json()[0];",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "50686046-117f-4775-bfaa-d9208c016703",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic/all"
              },
              "response": []
            },
            {
              "name": "TOPIC UPDATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03eb6766-6348-4474-b831-db6d7841c9b9",
                    "exec": [
                      "pm.test(\"Update Topic\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.name).to.equal('Test_Distinct_Topic_2');",
                      "    pm.environment.set(\"TOPIC_NAME\", \"Test_Distinct_Topic_2\");",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "bc6f5ea3-9d25-4c82-b54a-384f6b0092ed",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"{{TOPIC_ID}}\",\n    \"name\": \"Test_Distinct_Topic_2\",\n    \"type\": \"distinct\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"}\n    ],\n    \"description\": \"Test Distict Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "TOPIC DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a70f62e6-fb77-4867-b79e-a11b6cbd11a8",
                    "exec": [
                      "pm.test('Delete Topic', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const topic_id = pm.environment.get(\"TOPIC_ID\");",
                      "    const topic_name = pm.environment.get(\"TOPIC_NAME\");",
                      "    pm.expect(data.topicId).to.equal(topic_id);",
                      "    pm.expect(data.name).to.equal(topic_name);",
                      "    pm.environment.unset(\"TOPIC_ID\");",
                      "    pm.environment.unset(\"TOPIC_NAME\");",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c41674f-7f67-42c8-bbc0-1d2f6ef023f1",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "70319304-2cdb-4f52-adef-306fbac9a355",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic?topic_id={{TOPIC_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic"
                  ],
                  "query": [
                    {
                      "key": "topic_id",
                      "value": "{{TOPIC_ID}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "792d1f3c-b699-4d36-bf61-bbdb60a25982"
        },
        {
          "name": "PIPELINE",
          "item": [
            {
              "name": "PIPELINE CREATE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fc145713-ab6d-4b28-9230-0a7cd6ff6f77",
                    "exec": [
                      "pm.test('Create Pipeline', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.pipelineId).to.not.be.null;",
                      "    pm.expect(data.name).to.eql('Test-Pipeline')",
                      "    pm.expect(data.tenantId).to.not.be.null;",
                      "    pm.expect(data.createdAt).to.not.be.null;",
                      "    pm.expect(data.createdBy).to.not.be.null;",
                      "    pm.expect(data.lastModifiedAt).to.not.be.null;",
                      "    pm.expect(data.lastModifiedBy).to.not.be.null;",
                      "    pm.expect(data.version).to.eql(1);",
                      "    pm.environment.set('PIPELINE_ID', data.pipelineId);",
                      "    pm.environment.set('PIPELINE_CREATED_AT', data.createdAt);",
                      "    pm.environment.set('PIPELINE_CREATED_BY', data.createdBy);",
                      "    pm.environment.set('PIPELINE_VERSION', data.version);",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "cfd94970-db70-4c99-a0da-8a4d80f894cd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"topicId\": \"1\",\n    \"name\": \"Test-Pipeline\",\n    \"type\": \"insert-or-merge\",\n    \"stages\": [\n        {\n            \"stageId\": \"f-1\",\n            \"name\": \"Stage 1\",\n            \"units\": [\n                {\n                    \"unitId\": \"f-2\",\n                    \"name\": \"Unit 1.1\",\n                    \"do\": [\n                        {\n                            \"actionId\": \"f-3\",\n                            \"type\": \"alarm\",\n                            \"severity\": \"high\",\n                            \"message\": \"Hello world!\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    \"enabled\": true,\n    \"validated\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline"
              },
              "response": []
            },
            {
              "name": "PIPELINE LOAD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d1a73ceb-cb78-4b0e-b03e-e7de007f4e9b",
                    "exec": [
                      "pm.test(\"Load Pipeline By Id\", () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const pipeline_id =pm.environment.get(\"PIPELINE_ID\");",
                      "    pm.expect(data.pipelineId).to.equal(pipeline_id);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3d88d558-5b26-452f-b5b0-57b35923acd4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE RENAME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "51a479cd-6531-4c21-8219-ea1fba68348e",
                    "exec": [
                      "pm.test(\"Rename Pipeline\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6b8085ff-1af2-4483-9398-86514690f860",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/rename?pipeline_id={{PIPELINE_ID}}&name=test2",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}"
                    },
                    {
                      "key": "name",
                      "value": "test2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE ENABLED",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b44b146-65f5-4a22-a031-4fc214557c6d",
                    "exec": [
                      "pm.test(\"Enabled Pipeline\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "38682c4d-2d86-4178-acd7-42ad292f600c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline/enabled?pipeline_id={{PIPELINE_ID}}&enabled=1",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline",
                    "enabled"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}",
                      "type": "text"
                    },
                    {
                      "key": "enabled",
                      "value": "1",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "PIPELINE LIST ALL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b5ed5e94-1613-4783-850c-505ffd6052d0",
                    "exec": [
                      "pm.test(\"List Pipelines\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c03bfa4b-8de1-41d5-8a42-4269b8edaf2f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "{{URL_PREFIX}}/pipeline/all"
              },
              "response": []
            },
            {
              "name": "PIPELINE DELETE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "058611fd-7b86-40be-b8b8-b85e9afcb382",
                    "exec": [
                      "pm.test('Delete Pipeline', () => {",
                      "    pm.response.to.have.status(200);",
                      "    const data = pm.response.json();",
                      "    const pipeline_id = pm.environment.get(\"PIPELINE_ID\");",
                      "    pm.expect(data.pipelineId).to.equal(pipeline_id);",
                      "    pm.environment.unset(\"PIPELINE_ID\");",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "df52465a-4fa7-457a-a968-aacf4f25eb52",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/pipeline?pipeline_id={{PIPELINE_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "pipeline"
                  ],
                  "query": [
                    {
                      "key": "pipeline_id",
                      "value": "{{PIPELINE_ID}}",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "13156c3c-75f0-4ae4-b8b6-aa856055618a"
        },
        {
          "name": "PIPELINE GRAPHIC",
          "item": [
            {
              "name": "PIPELINE GRAPHICS CREATE",
              "id": "c7fd000e-3685-4ac9-a42d-1d6aedbfe9a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "url": "{{URL_PREFIX}}/pipeline/graphics"
              },
              "response": []
            }
          ],
          "id": "7dc3f01a-b535-4225-ae5a-74f0df01d407"
        }
      ],
      "id": "22d9b007-f6be-4ee5-b4f3-89374c0d3578"
    },
    {
      "name": "CONSOLE",
      "item": [
        {
          "name": "SUBJECT",
          "item": [
            {
              "name": "SUBJECT CREATE",
              "id": "7dc8c5ba-a1d8-41b1-bfd7-02f9e071f9b4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"name\": \"Test_Subject\",\r\n  \"topiccount\": \"NULL\",\r\n  \"graphicscount\": \"NULL\",\r\n  \"reports\": [\r\n    \"1\",\r\n    \"2\"\r\n  ],\r\n  \"dataset\": {\r\n    \"joins\": [],\r\n    \"columns\": [\r\n      {\r\n        \"alias\": \"alias_a\",\r\n        \"columnId\": \"f-1\",\r\n        \"parameter\": {\r\n          \"on\": null,\r\n          \"kind\": \"topic\",\r\n          \"type\": null,\r\n          \"value\": null,\r\n          \"topicId\": \"1\",\r\n          \"factorId\": \"1\",\r\n          \"parameters\": [],\r\n          \"conditional\": false\r\n        }\r\n      },\r\n      {\r\n        \"alias\": \"alias_b\",\r\n        \"columnId\": \"f-2\",\r\n        \"parameter\": {\r\n          \"on\": null,\r\n          \"kind\": \"computed\",\r\n          \"type\": \"month-of\",\r\n          \"value\": null,\r\n          \"topicId\": null,\r\n          \"factorId\": null,\r\n          \"parameters\": [\r\n            {\r\n              \"on\": null,\r\n              \"kind\": \"topic\",\r\n              \"type\": null,\r\n              \"value\": null,\r\n              \"topicId\": \"1\",\r\n              \"factorId\": \"2\",\r\n              \"parameters\": [],\r\n              \"conditional\": false\r\n            }\r\n          ],\r\n          \"conditional\": false\r\n        }\r\n      }\r\n    ],\r\n    \"filters\": {\r\n      \"left\": null,\r\n      \"right\": null,\r\n      \"filters\": [\r\n        {\r\n          \"left\": {\r\n            \"on\": null,\r\n            \"kind\": \"topic\",\r\n            \"type\": null,\r\n            \"value\": null,\r\n            \"topicId\": \"1\",\r\n            \"factorId\": \"2\",\r\n            \"parameters\": [],\r\n            \"conditional\": false\r\n          },\r\n          \"right\": {\r\n            \"on\": null,\r\n            \"kind\": \"constant\",\r\n            \"type\": null,\r\n            \"value\": \"2021-01-01\",\r\n            \"topicId\": null,\r\n            \"factorId\": null,\r\n            \"parameters\": [],\r\n            \"conditional\": false\r\n          },\r\n          \"filters\": [],\r\n          \"operator\": \"more\",\r\n          \"jointType\": null\r\n        }\r\n      ],\r\n      \"operator\": null,\r\n      \"jointType\": \"and\"\r\n    }\r\n  },\r\n  \"lastvisittime\": \"2022-01-18 16:42:52\",\r\n  \"createdat\": \"NULL\",\r\n  \"lastmodified\": \"2022-01-29 15:50:21\",\r\n  \"tenantid\": \"936980817043904512\",\r\n  \"createtime\": \"2022-01-29T15:50:21.132857\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/subject"
              },
              "response": []
            },
            {
              "name": "SUBJECT RENAME",
              "id": "ec07ad7a-87a8-4677-ac06-2bcaff582d0e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject/rename?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject",
                    "rename"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE BY ID",
              "id": "6211c016-097c-47fb-967e-1f8b70d2682f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject/delete?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject",
                    "delete"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "SUBJECT DELETE",
              "id": "d295c9ff-d0c9-4761-9730-76d0149b9887",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/subject?subject_id={{SUBJECT_ID}}",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "subject"
                  ],
                  "query": [
                    {
                      "key": "subject_id",
                      "value": "{{SUBJECT_ID}}",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "56b09cda-c4e8-4471-8008-3ba794718bf2"
        },
        {
          "name": "REPORT",
          "item": [
            {
              "name": "REPORT CREATE",
              "id": "3a011c6d-13af-4df5-843e-69cf12ae0b76",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": []
              },
              "response": []
            }
          ],
          "id": "738f1fa8-b2bf-4175-92d5-48f1c0e01316"
        },
        {
          "name": "DASHBOARD",
          "item": [
            {
              "name": "DASHBOARD CREATE",
              "id": "b19d3f2d-3a6b-4af6-8337-f85ba4e33de6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"dashboardid\": \"937035294321006592\",\r\n  \"name\": \"Dashboard sample\",\r\n  \"reports\": [\r\n    {\r\n      \"rect\": {\r\n        \"x\": 29,\r\n        \"y\": 28,\r\n        \"width\": 751,\r\n        \"height\": 640\r\n      },\r\n      \"reportId\": \"933359483198623744\"\r\n    },\r\n    {\r\n      \"rect\": {\r\n        \"x\": 799,\r\n        \"y\": 10,\r\n        \"width\": 781,\r\n        \"height\": 335\r\n      },\r\n      \"reportId\": \"933359483039240192\"\r\n    },\r\n    {\r\n      \"rect\": {\r\n        \"x\": 876,\r\n        \"y\": 312,\r\n        \"width\": 497,\r\n        \"height\": 394\r\n      },\r\n      \"reportId\": \"933359482988908544\"\r\n    }\r\n  ],\r\n  \"paragraphs\": \"null\",\r\n  \"lastvisittime\": \"NULL\",\r\n  \"userid\": \"936980978755295232\",\r\n  \"createtime\": \"NULL\",\r\n  \"lastmodified\": \"2022-01-29 13:44:04\",\r\n  \"tenantid\": \"936980817043904512\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": []
            }
          ],
          "id": "8c21efbb-a620-42e3-8aac-5b88c531ead0"
        },
        {
          "name": "CONNECTED SPACE",
          "item": [
            {
              "name": "CONNECTED SPACE CREATE",
              "id": "1ded2608-b13a-4734-b5c1-ac38dbe15f70",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": []
              },
              "response": []
            },
            {
              "name": "CONNECTED SPACE LIST",
              "id": "d2204740-fdce-4ab4-9b62-ba6d54e722be",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{JWT_TOKEN}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": "/connected_space/list"
              },
              "response": []
            }
          ],
          "id": "331d37bd-f18d-432e-97a7-13241c36438c"
        },
        {
          "name": "CONNECTED SPACE GRAPHIC",
          "item": [
            {
              "name": "SPACE GRAPHIC CREATE",
              "id": "5e005d9b-5807-486c-9194-81c751523cda",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"connectid\": \"933359482850496512\",\r\n  \"userid\": \"936980978755295232\",\r\n  \"topics\": [\r\n    {\r\n      \"rect\": {\r\n        \"name\": {\r\n          \"x\": 83.81944274902344,\r\n          \"y\": 23.977777671813964\r\n        },\r\n        \"frame\": {\r\n          \"x\": 0,\r\n          \"y\": 0,\r\n          \"width\": 167.63888549804688,\r\n          \"height\": 35.55555534362793\r\n        },\r\n        \"coordinate\": {\r\n          \"x\": 32,\r\n          \"y\": 32\r\n        }\r\n      },\r\n      \"topicId\": \"933359482603032576\"\r\n    }\r\n  ],\r\n  \"subjects\": [\r\n    {\r\n      \"rect\": {\r\n        \"name\": {\r\n          \"x\": 75,\r\n          \"y\": 23.977777671813964\r\n        },\r\n        \"frame\": {\r\n          \"x\": 0,\r\n          \"y\": 0,\r\n          \"width\": 150,\r\n          \"height\": 35.55555534362793\r\n        },\r\n        \"coordinate\": {\r\n          \"x\": 423.71429443359375,\r\n          \"y\": 32\r\n        }\r\n      },\r\n      \"subjectId\": \"933359483232178176\"\r\n    }\r\n  ],\r\n  \"createtime\": \"\",\r\n  \"lastmodified\": \"'2022-02-10 18:05:08\",\r\n  \"tenantid\": \"936980817043904512\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": []
            }
          ],
          "id": "cfe9cf47-e61c-4000-aaf7-5873c6c7338b"
        }
      ],
      "id": "2b46a424-766d-43c9-a923-4747070a27df"
    },
    {
      "name": "IMPORT",
      "item": [
        {
          "name": "USER IMPORT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d0791bd-626d-4d6b-880f-33a00805371a",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "8a06a871-2ef0-40bf-9a39-8bb3d46dc24c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/user/import"
          },
          "response": []
        },
        {
          "name": "USER GROUP IMPORT",
          "id": "e4cdba9d-4675-4638-a663-aaf4038437b5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/user_group/import"
          },
          "response": []
        },
        {
          "name": "TOPIC IMPORT",
          "id": "33d79b47-2fa7-4fc7-b15f-542342e523bc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/topic/import"
          },
          "response": []
        },
        {
          "name": "PIPELINE IMPORT",
          "id": "00374e41-a384-408f-ad41-e3cea3de9fb5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/pipeline/import"
          },
          "response": []
        },
        {
          "name": "SPACE IMPORT",
          "id": "834a67d8-2575-4d0e-8618-71ea490d9804",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/space/import"
          },
          "response": []
        },
        {
          "name": "CONNECTED SPACE IMPORT",
          "id": "9b9dc48b-6b02-4363-a1e7-3841d2a621da",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/connected_space/import"
          },
          "response": []
        },
        {
          "name": "SUBJECT IMPORT",
          "id": "4bc14450-0889-41a6-a42d-36b4d231f181",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/subject/import"
          },
          "response": []
        },
        {
          "name": "REPORT IMPORT",
          "id": "6268a82e-4acd-4029-a173-52ad4d9793ab",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/report/import"
          },
          "response": []
        },
        {
          "name": "DASHBOARD IMPORT",
          "id": "413de7d1-13ff-4ada-8b99-c89711a253a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/dashboard/import"
          },
          "response": []
        },
        {
          "name": "MIX IMPORT",
          "id": "71ab2c5d-01cf-4ca4-a087-cba08b276e17",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "{{JWT_TOKEN}}"
              }
            },
            "method": "POST",
            "header": [],
            "url": "{{URL_PREFIX}}/import"
          },
          "response": []
        }
      ],
      "id": "075340f7-37d1-4e97-95a4-0e6fd4bb0d58"
    },
    {
      "name": "REACTOR",
      "item": [
        {
          "name": "SIMPLE",
          "item": [
            {
              "name": "LOGIN - SUPER ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1d8b7f04-30a8-40bc-9e98-c9ebd30fc717",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('superadmin');",
                      "    pm.expect(data.tenantId).to.eql('-1');",
                      "    pm.environment.set('SUPER_ADMIN_JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0815a1f1-7240-4e21-91ed-a45b771f2189",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-super",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "change-me",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "CREATE DATASOURCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f29f51de-fb1f-4721-ba05-b561426c2fe3",
                    "exec": [
                      "pm.test('Datasource created', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.dataSourceId).to.not.be.null;",
                      "    pm.environment.set('SIMPLE_DATA_SOURCE_ID', data.dataSourceId)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c01dbb4c-7635-43e2-b9dd-0a8aab3382ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{SUPER_ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"dataSourceCode\": \"TEST-DATASOURCE\",\n    \"dataSourceType\": \"mysql\",\n    \"host\": \"localhost\",\n    \"port\": \"3306\",\n    \"username\": \"watchmen\",\n    \"password\": \"watchmen\",\n    \"name\": \"watchmen\",\n    \"tenantId\": \"1\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/datasource"
              },
              "response": []
            },
            {
              "name": "LOGIN - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e49a9bbb-b13f-4dd0-8392-2a5189ccb43b",
                    "exec": [
                      "pm.test('Login Access Token', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.accessToken).to.not.be.null;",
                      "    pm.expect(data.tokenType).to.eql('bearer');",
                      "    pm.expect(data.role).to.eql('admin');",
                      "    pm.expect(data.tenantId).to.eql('1');",
                      "    pm.environment.set('ADMIN_JWT_TOKEN', data.accessToken)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "bc7cda35-dad5-4edc-830f-9ecae12b96d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "imma-admin",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "1234abcd",
                      "type": "text"
                    }
                  ]
                },
                "url": "{{URL_PREFIX}}/login"
              },
              "response": []
            },
            {
              "name": "CREATE TOPIC",
              "id": "f0930857-d18f-44b8-8d58-3589083e8208",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Test_Topic\",\n    \"type\": \"raw\",\n    \"kind\": \"business\",\n    \"dataSourceId\": \"{{SIMPLE_DATA_SOURCE_ID}}\",\n    \"factors\": [\n        {\"factorId\": \"1\", \"type\": \"text\", \"name\": \"propA\"},\n        {\"factorId\": \"2\", \"type\": \"text\", \"name\": \"propB\"}\n    ],\n    \"description\": \"Test Raw Topic\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/topic"
              },
              "response": []
            },
            {
              "name": "INSERT RAW",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d2a11f7-def3-4a1a-bac2-b7ba993ecf4f",
                    "exec": [
                      "pm.test('Insert Raw Successfully', () => {",
                      "    const data = pm.response.json();",
                      "    pm.expect(data.internalDataId).to.not.be.null;",
                      "    pm.environment.set('INTERNAL_DATA_ID', data.internalDataId)",
                      "})",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "e3c98e82-2f1b-48ee-adb2-c87adf7626bc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"Test_Topic\",\n    \"triggerType\": \"insert\",\n    \"data\": {\n        \"propA\": 1,\n        \"propB\": 2\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            },
            {
              "name": "UPDATE RAW",
              "id": "4f090d72-9db9-45ab-afb6-46d494a434d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"Test_Topic\",\n    \"triggerType\": \"merge\",\n    \"data\": {\n        \"id_\": \"{{INTERNAL_DATA_ID}}\",\n        \"propA\": 3,\n        \"propB\": 4,\n        \"propC\": {\n            \"propD\": \"x\",\n            \"propE\": \"y\",\n            \"propF\": [\n                {\"propG\": true},\n                {\"propG\": false}\n            ]\n        },\n        \"propD\": {\n            \"propE\": {\n                \"propD\": {\n                    \"propE\": 1,\n                    \"propD\": {\n                        \"propE\": 2\n                    }\n                }\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{URL_PREFIX}}/pipeline/data"
              },
              "response": []
            },
            {
              "name": "TRUNCATE TOPIC",
              "id": "fef14d48-d94f-481c-8878-b617353f8ae1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{ADMIN_JWT_TOKEN}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{URL_PREFIX}}/topic/data/truncate?topic_name=test_topic",
                  "host": [
                    "{{URL_PREFIX}}"
                  ],
                  "path": [
                    "topic",
                    "data",
                    "truncate"
                  ],
                  "query": [
                    {
                      "key": "topic_name",
                      "value": "test_topic",
                      "type": "text"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "f69ec778-cfd0-4bfc-a55d-34f9202dd099"
        }
      ],
      "id": "b4f1a636-e9ca-4463-a51c-53c4e2be3949"
    }
  ]
}